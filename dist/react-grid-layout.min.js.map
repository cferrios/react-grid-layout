{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-grid-layout.min.js","webpack:///webpack/bootstrap 1106afbb76b561959cc4","webpack:///external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack:///./node_modules/prop-types/index.js","webpack:///./lib/utils.js","webpack:///./node_modules/lodash.isequal/index.js","webpack:///./lib/ReactGridLayout.jsx","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/react-draggable/dist/react-draggable.js","webpack:///external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\",\"root\":\"ReactDOM\"}","webpack:///./node_modules/react-resizable/build/Resizable.js","webpack:///./lib/responsiveUtils.js","webpack:///./index-dev.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./lib/GridItem.jsx","webpack:///./node_modules/react-resizable/index.js","webpack:///./node_modules/react-resizable/build/cloneElement.js","webpack:///./node_modules/react-resizable/build/ResizableBox.js","webpack:///./lib/ResponsiveReactGridLayout.jsx","webpack:///./lib/components/WidthProvider.jsx"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","bottom","layout","max","bottomY","len","length","y","h","cloneLayout","newLayout","Array","cloneLayoutItem","layoutItem","w","x","minW","maxW","minH","maxH","axis","moved","Boolean","static","overlap","isDraggable","isResizable","childrenEqual","a","b","_lodash2","React","Children","map","key","collides","l1","l2","compact","verticalCompact","sorted","getStatics","sortLayoutItemsByRowCol","out","indexOf","compactItem","compareWith","Math","min","getFirstCollision","correctBounds","bounds","collidesWith","cols","push","getLayoutItem","id","getAllCollisions","filter","moveElement","isUserAction","moveElementAwayFromCollision","itemToMove","fakeItem","undefined","perc","num","setTransform","_ref","top","left","width","height","translate","transform","WebkitTransform","MozTransform","msTransform","OTransform","position","setTopLeft","_ref2","concat","sort","synchronizeLayoutWithChildren","initialLayout","children","forEach","child","exists","String","isProduction","props","_grid","console","warn","g","validateLayout","contextName","subProps","isArray","Error","item","j","autoBindHandlers","el","fns","bind","_extends","assign","target","arguments","source","_lodash","_react","_react2","process","global","arrayFilter","array","predicate","index","resIndex","result","value","arrayPush","values","offset","arraySome","baseTimes","iteratee","cacheHas","cache","has","getValue","mapToArray","size","setToArray","set","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","data","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","string","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","LARGE_ARRAY_SIZE","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isBuffer","isType","isTypedArray","skipIndexes","isIndex","eq","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","undefinedTag","nullTag","symToStringTag","getRawTag","objectToString","baseIsArguments","isObjectLike","argsTag","baseIsEqual","other","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","getTag","othTag","objectTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","COMPARE_PARTIAL_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsNative","isObject","isMasked","isFunction","reIsNative","reIsHostCtor","test","toSource","baseIsTypedArray","isLength","typedArrayTags","baseKeys","isPrototype","nativeKeys","isPartial","arrLength","othLength","stacked","seen","COMPARE_UNORDERED_FLAG","arrValue","othValue","compared","othIndex","tag","dataViewTag","byteLength","byteOffset","buffer","arrayBufferTag","Uint8Array","boolTag","dateTag","numberTag","errorTag","message","regexpTag","stringTag","mapTag","convert","setTag","symbolTag","symbolValueOf","objProps","getAllKeys","objLength","skipCtor","objValue","objCtor","constructor","othCtor","keys","getSymbols","isKeyable","getNative","isOwn","unmasked","e","nativeObjectToString","MAX_SAFE_INTEGER","reIsUint","type","func","maskSrcKey","Ctor","objectProto","funcToString","isArrayLike","isEqual","funcTag","genTag","asyncTag","proxyTag","stubArray","stubFalse","reRegExpChar","freeGlobal","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","nodeUtil","binding","nodeIsTypedArray","arrayProto","funcProto","coreJsData","toString","uid","exec","IE_PROTO","RegExp","replace","Buffer","Symbol","propertyIsEnumerable","toStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","arg","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","valueOf","symbol","ArrayBuffer","resolve","ctorString","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","_propTypes","_propTypes2","_classnames","_classnames2","_utils","_GridItem","_GridItem2","noop","ReactGridLayout","_React$Component","context","_this","_initialiseProps","componentDidMount","setState","mounted","onLayoutMaybeChanged","state","componentWillReceiveProps","nextProps","newLayoutBase","oldLayout","containerHeight","autoSize","nbRow","containerPaddingY","containerPadding","margin","rowHeight","onDragStart","node","oldDragItem","onDrag","placeholder","activeDrag","onDragStop","_ref3","oldX","onLayoutChange","onResizeStart","_ref4","oldResizeItem","onResize","_ref5","_state","onResizeStop","_ref6","_state2","oldW","_props","maxRows","useCSSTransforms","createElement","className","containerWidth","processGridItem","_props2","draggableCancel","draggableHandle","draggable","resizable","cancel","handle","usePercentages","render","_this2","_props3","style","mergedStyle","Component","displayName","propTypes","PropTypes","number","bool","arrayOf","propName","_componentName","defaultProps","Infinity","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","argType","inner","apply","hasOwn","join","ReactDOM","createCommonjsModule","fn","makeEmptyFunction","invariant","condition","format","f","validateFormat","error","args","argIndex","framesToPop","toObject","val","checkPropTypes","typeSpecs","location","componentName","getStack","typeSpecName","invariant$1","ReactPropTypesSecret$1","ex","warning$1","loggedTypeFailures","findInArray","callback","isNum","isNaN","int","parseInt","dontSetMe","browserPrefixToKey","prop","prefix","kebabToTitleCase","str","shouldCapitalize","toUpperCase","matchesSelector","selector","matchesSelectorFunc","method","matchesSelectorAndParentsTo","baseNode","parentNode","addEvent","event","handler","attachEvent","addEventListener","removeEvent","detachEvent","removeEventListener","outerHeight","clientHeight","computedStyle","ownerDocument","defaultView","getComputedStyle","borderTopWidth","borderBottomWidth","outerWidth","clientWidth","borderLeftWidth","borderRightWidth","innerHeight","paddingTop","paddingBottom","innerWidth","paddingLeft","paddingRight","offsetXYFromParent","evt","offsetParent","isBody","body","offsetParentRect","getBoundingClientRect","clientX","scrollLeft","clientY","scrollTop","createCSSTransform","controlPos","positionOffset","translation","getTranslation","browserPrefix","createSVGTransform","unitSuffix","getTouch","identifier","targetTouches","t","changedTouches","getTouchIdentifier","addUserSelectStyles","doc","styleEl","getElementById","innerHTML","getElementsByTagName","appendChild","addClassName","removeUserSelectStyles","removeClassName","selection","empty","window","getSelection","removeAllRanges","styleHacks","childStyle","touchAction","classList","match","remove","getBoundPosition","cloneBounds","findDOMNode","ownerWindow","boundNode","querySelector","HTMLElement","nodeStyle","boundNodeStyle","offsetLeft","marginLeft","offsetTop","marginTop","right","marginRight","marginBottom","snapToGrid","grid","pendingX","pendingY","round","canDragX","canDragY","getControlPosition","touchIdentifier","draggableCore","touchObj","createCoreData","isStart","lastX","deltaX","deltaY","lastY","createDraggableData","coreData","scale","log","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","emptyFunction_1","invariant_1","warning","printWarning","_len","_key","_len2","_key2","warning_1","propIsEnumerable","objectAssign","test1","getOwnPropertyNames","test2","fromCharCode","test3","split","letter","err","from","symbols","to","ReactPropTypesSecret_1","checkPropTypes_1","factoryWithTypeCheckers","isValidElement","throwOnDirectAccess","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","is","PropTypeError","createChainableTypeChecker","validate","checkType","isRequired","propFullName","secret","ANONYMOUS","cacheKey","manualPropTypeCallCache","manualPropTypeWarningCount","chainedCheckType","createPrimitiveTypeChecker","expectedType","propValue","getPropType","getPreciseType","createArrayOfTypeChecker","typeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","getClassName","createEnumTypeChecker","expectedValues","JSON","stringify","createObjectOfTypeChecker","propType","createUnionTypeChecker","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","createShapeTypeChecker","shapeTypes","createStrictShapeTypeChecker","allKeys","isNode","every","step","iterator","next","done","isSymbol","Date","ReactPropTypes","any","element","instanceOf","objectOf","oneOf","oneOfType","shape","exact","REACT_ELEMENT_TYPE","for","$$typeof","classnames","prefixes","document","documentElement","classCallCheck","createClass","defineProperties","descriptor","protoProps","staticProps","inherits","possibleConstructorReturn","slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","eventsFor","touch","start","move","stop","mouse","dragEventFor","DraggableCore","_temp","_ret","getPrototypeOf","dragging","NaN","handleDragStart","onMouseDown","allowAnyClick","button","thisNode","disabled","Node","coreEvent","onStart","enableUserSelectHack","handleDrag","handleDragStop","preventDefault","_deltaX","_deltaY","_snapToGrid","_snapToGrid2","MouseEvent","createEvent","initMouseEvent","onStop","onMouseUp","onTouchStart","onTouchEnd","cloneElement","only","Draggable","dragged","uiData","newState","_x","_y","slackX","slackY","_getBoundPosition","_getBoundPosition2","newStateX","newStateY","_this$props$position","_x2","_y2","defaultPosition","isElementSVG","SVGElement","_classNames","svgTransform","controlled","transformOpts","defaultClassName","defaultClassNameDragging","defaultClassNameDragged","_objectWithoutProperties","_reactDraggable","_cloneElement","_cloneElement2","Resizable","resizing","slackW","slackH","lockAspectRatio","aspectRatio","runConstraints","minConstraints","maxConstraints","ratio","oldH","resizeHandler","handlerName","widthChanged","heightChanged","_runConstraints","persist","renderResizeHandle","resizeHandle","_this3","draggableOpts","resizeHandles","handleSize","getBreakpointFromWidth","breakpoints","sortBreakpoints","matching","breakpointName","getColsFromBreakpoint","breakpoint","findOrGenerateResponsiveLayout","layouts","lastBreakpoint","breakpointsSorted","breakpointsAbove","slice","utils","Responsive","WidthProvider","emptyFunctionWithReset","ReactPropTypesSecret","resetWarningCache","shim","getShim","elementType","eval","webpackPolyfill","deprecate","paths","_reactResizable","GridItem","calcColWidth","calcPosition","colWidth","calcXY","bounce","calcWH","_props4","createStyle","pos","_props5","mixinDraggable","onDragHandler","mixinResizable","_props6","maxWidth","mins","maxes","onResizeHandler","newPosition","parentRect","clientRect","isDraggableX","isDraggableY","_calcXY","_props7","_calcWH","_props8","newChild","react-draggable","react-draggable-dragging","cssTransforms","ResizableBox","_Resizable","_Resizable2","_responsiveUtils","_ReactGridLayout","_ReactGridLayout2","ResponsiveReactGridLayout","generateInitialState","_extends2","colNo","onWidthChange","newBreakpoint","newCols","onBreakpointChange","lg","md","sm","xs","xxs","_reactDom","_reactDom2","ComposedComponent","_class","_temp2","onWindowResize","_event","offsetWidth","componentWillUnmount","measureBeforeMount"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,SAAAA,QAAA,cACA,kBAAAC,gBAAAC,IACAD,QAAA,qBAAAJ,GACA,gBAAAC,SACAA,QAAA,gBAAAD,EAAAG,QAAA,SAAAA,QAAA,cAEAJ,EAAA,gBAAAC,EAAAD,EAAA,MAAAA,EAAA,WACC,mBAAAO,WAAAC,KAAA,SAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAX,OAGA,IAAAC,GAAAW,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAd,WAUA,OANAS,GAAAE,GAAAI,KAAAd,EAAAD,QAAAC,IAAAD,QAAAU,GAGAT,EAAAa,GAAA,EAGAb,EAAAD,QAvBA,GAAAY,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAlB,EAAAmB,EAAAC,GACAV,EAAAW,EAAArB,EAAAmB,IACAG,OAAAC,eAAAvB,EAAAmB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAA1B,GACA,GAAAmB,GAAAnB,KAAA2B,WACA,WAA2B,MAAA3B,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAS,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,MDgBM,SAAUjC,EAAQD,GE7ExBC,EAAAD,QAAAO,GFmFM,SAAUN,EAAQD,EAASU,GGlEjCT,EAAAD,QAAmBU,EAAQ,OH2FrB,SAAUT,EAAQD,EAASU,GAEjC,YAqCA,SAASyB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQC,QAASD,GI5GhF,QAASE,GAAOC,GAErB,IAAK,GADDC,GAAM,EAAGC,SACJ5B,EAAI,EAAG6B,EAAMH,EAAOI,OAAQ9B,EAAI6B,EAAK7B,KAC5C4B,EAAUF,EAAO1B,GAAG+B,EAAIL,EAAO1B,GAAGgC,GACpBL,IAAKA,EAAMC,EAE3B,OAAOD,GAGF,QAASM,GAAYP,GAE1B,IAAK,GADCQ,GAAYC,MAAMT,EAAOI,QACtB9B,EAAI,EAAG6B,EAAMH,EAAOI,OAAQ9B,EAAI6B,EAAK7B,IAC5CkC,EAAUlC,GAAKoC,EAAgBV,EAAO1B,GAExC,OAAOkC,GAIF,QAASE,GAAgBC,GAC9B,OACEC,EAAGD,EAAWC,EAAGN,EAAGK,EAAWL,EAAGO,EAAGF,EAAWE,EAAGR,EAAGM,EAAWN,EAAG/B,EAAGqC,EAAWrC,EAClFwC,KAAMH,EAAWG,KAAMC,KAAMJ,EAAWI,KAAMC,KAAML,EAAWK,KAAMC,KAAMN,EAAWM,KAAMC,KAAMP,EAAWO,KAC7GC,MAAOC,QAAQT,EAAWQ,OAAQE,OAAQD,QAAQT,EAAWU,QAASC,QAASF,QAAQT,EAAWW,SAElGC,YAAaZ,EAAWY,YAAaC,YAAab,EAAWa,aAQ1D,QAASC,GAAcC,EAAkBC,GAE9C,OAAO,EAAAC,EAAA9B,SAAQ+B,UAAMC,SAASC,IAAIL,EAAG,SAAChD,GAAD,MAAOA,GAAEsD,MAAMH,UAAMC,SAASC,IAAIJ,EAAG,SAACjD,GAAD,MAAOA,GAAEsD,OAM9E,QAASC,GAASC,EAAgBC,GACvC,OAAID,EAAGZ,UAAWa,EAAGb,UACjBY,IAAOC,MACPD,EAAGrB,EAAIqB,EAAGtB,GAAKuB,EAAGtB,OAClBqB,EAAGrB,GAAKsB,EAAGtB,EAAIsB,EAAGvB,OAClBsB,EAAG7B,EAAI6B,EAAG5B,GAAK6B,EAAG9B,MAClB6B,EAAG7B,GAAK8B,EAAG9B,EAAI8B,EAAG7B,OAajB,QAAS8B,GAAQpC,EAAgBqC,GAQtC,IAAK,GAJCC,IAFcC,EAAWvC,GAEhBwC,EAAwBxC,IAEjCyC,EAAMhC,MAAMT,EAAOI,QAEhB9B,EAAI,EAAG6B,EAAMmC,EAAOlC,OAAQ9B,EAAI6B,EAAK7B,IAAK,CACjD,GAAIC,GAAImC,EAAgB4B,EAAOhE,GAG/BmE,GAAIzC,EAAO0C,QAAQJ,EAAOhE,KAAOC,EAGjCA,EAAE4C,OAAQ,EAGZ,MAAOsB,GAMF,QAASE,GAAYC,EAAqBrE,EAAe8D,GAC9D,GAAIA,EAOF,IAHA9D,EAAE8B,EAAIwC,KAAKC,IAAI/C,EAAO6C,GAAcrE,EAAE8B,GAG/B9B,EAAE8B,EAAI,IAAM0C,EAAkBH,EAAarE,IAChDA,EAAE8B,GAMN,KADA,GAAI4B,UACGA,EAAWc,EAAkBH,EAAarE,IAC/CA,EAAE8B,EAAI4B,EAAS5B,EAAI4B,EAAS3B,CAE9B,OAAO/B,GASF,QAASyE,GAAchD,EAAgBiD,GAE5C,IAAK,GADCC,GAAeX,EAAWvC,GACvB1B,EAAI,EAAG6B,EAAMH,EAAOI,OAAQ9B,EAAI6B,EAAK7B,IAAK,CACjD,GAAMC,GAAIyB,EAAO1B,EAQjB,IANIC,EAAEsC,EAAItC,EAAEqC,EAAIqC,EAAOE,OAAM5E,EAAEsC,EAAIoC,EAAOE,KAAO5E,EAAEqC,GAE/CrC,EAAEsC,EAAI,IACRtC,EAAEsC,EAAI,EACNtC,EAAEqC,EAAIqC,EAAOE,MAEV5E,EAAE8C,OAIL,KAAM0B,EAAkBG,EAAc3E,IACpCA,EAAE8B,QALS6C,GAAaE,KAAK7E,GASnC,MAAOyB,GAUF,QAASqD,GAAcrD,EAAgBsD,GAC5C,IAAK,GAAIhF,GAAI,EAAG6B,EAAMH,EAAOI,OAAQ9B,EAAI6B,EAAK7B,IAC5C,GAAI0B,EAAO1B,GAAGA,IAAMgF,EAAI,MAAOtD,GAAO1B,GAYnC,QAASyE,GAAkB/C,EAAgBW,GAChD,IAAK,GAAIrC,GAAI,EAAG6B,EAAMH,EAAOI,OAAQ9B,EAAI6B,EAAK7B,IAC5C,GAAI2D,EAASjC,EAAO1B,GAAIqC,GAAa,MAAOX,GAAO1B,GAIhD,QAASiF,GAAiBvD,EAAgBW,GAC/C,MAAOX,GAAOwD,OAAO,SAACjF,GAAD,MAAO0D,GAAS1D,EAAGoC,KAQnC,QAAS4B,GAAWvC,GACzB,MAAOA,GAAOwD,OAAO,SAACjF,GAAD,MAAOA,GAAE8C,SAazB,QAASoC,GAAYzD,EAAgBzB,EAAesC,EAAYR,EAAYqD,GACjF,GAAInF,EAAE8C,OAAQ,MAAOrB,EAGrB,IAAIzB,EAAE8B,IAAMA,GAAK9B,EAAEsC,IAAMA,EAAG,MAAOb,EAElBK,IAAK9B,EAAE8B,CAQxB,OANiB,gBAANQ,KAAgBtC,EAAEsC,EAAIA,GAChB,gBAANR,KAAgB9B,EAAE8B,EAAIA,GACjC9B,EAAE4C,OAAQ,EAIHnB,EA0CF,QAAS2D,GAA6B3D,EAAgBkD,EAChBU,EAAwBF,GAKnE,GAAIA,EAAc,CAEhB,GAAMG,IACJhD,EAAG+C,EAAW/C,EACdR,EAAGuD,EAAWvD,EACdO,EAAGgD,EAAWhD,EACdN,EAAGsD,EAAWtD,EACdhC,EAAG,KAGL,IADAuF,EAASxD,EAAIwC,KAAK5C,IAAIiD,EAAa7C,EAAIuD,EAAWtD,EAAG,IAChDyC,EAAkB/C,EAAQ6D,GAC7B,MAAOJ,GAAYzD,EAAQ4D,MAAYE,GAAWD,EAASxD,GAM/D,MAAOoD,GAAYzD,EAAQ4D,MAAYE,GAAWF,EAAWvD,EAAI,GAS5D,QAAS0D,GAAKC,GACnB,MAAa,KAANA,EAAY,IAGd,QAASC,GAATC,GAAoE,GAA7CC,GAA6CD,EAA7CC,IAAKC,EAAwCF,EAAxCE,KAAMC,EAAkCH,EAAlCG,MAAOC,EAA2BJ,EAA3BI,OAExCC,eAAyBH,EAAzB,MAAmCD,EAAnC,KACN,QACEK,UAAWD,EACXE,gBAAiBF,EACjBG,aAAcH,EACdI,YAAaJ,EACbK,WAAYL,EACZF,MAAUA,EAAV,KACAC,OAAWA,EAAX,KACAO,SAAU,YAIP,QAASC,GAATC,GACL,OACEZ,IAFqEY,EAA7CZ,IAExB,KACAC,KAHqEW,EAAxCX,KAG7B,KACAC,MAJqEU,EAAlCV,MAInC,KACAC,OALqES,EAA3BT,OAK1C,KACAO,SAAU,YAUP,QAASrC,GAAwBxC,GACtC,SAAUgF,OAAOhF,GAAQiF,KAAK,SAASvD,EAAGC,GACxC,MAAID,GAAErB,EAAIsB,EAAEtB,GAAMqB,EAAErB,IAAMsB,EAAEtB,GAAKqB,EAAEb,EAAIc,EAAEd,EAChC,EACEa,EAAErB,IAAMsB,EAAEtB,GAAKqB,EAAEb,IAAMc,EAAEd,EAE3B,GAED,IAaL,QAASqE,GAA8BC,EAAuBC,EACvBjC,EAAcd,GAC1D8C,EAAgBA,KAGhB,IAAInF,KA+BJ,OA9BA6B,WAAMC,SAASuD,QAAQD,EAAU,SAACE,EAA0BhH,GAE1D,GAAMiH,GAASlC,EAAc8B,EAAeK,OAAOF,EAAMtD,KACzD,IAAIuD,EACFvF,EAAO1B,GAAKoC,EAAgB6E,OACvB,EACAE,GAAgBH,EAAMI,MAAMC,OAC/BC,QAAQC,KAAK,gJAGf,IAAMC,GAAIR,EAAMI,MAAM,cAAgBJ,EAAMI,MAAMC,KAG9CG,IACGL,GACHM,GAAgBD,GAAI,4BAGtB9F,EAAO1B,GAAKoC,OAAoBoF,GAAGxH,EAAGgH,EAAMtD,QAG5ChC,EAAO1B,GAAKoC,GAAiBE,EAAG,EAAGN,EAAG,EAAGO,EAAG,EAAGR,EAAGN,EAAOC,GAAS1B,EAAGkH,OAAOF,EAAMtD,UAMxFhC,EAASgD,EAAchD,GAASmD,KAAMA,IACtCnD,EAASoC,EAAQpC,EAAQqC,GAYpB,QAAS0D,GAAe/F,EAAgBgG,GAC7CA,EAAcA,GAAe,QAC7B,IAAMC,IAAY,IAAK,IAAK,IAAK,IACjC,KAAKxF,MAAMyF,QAAQlG,GAAS,KAAM,IAAImG,OAAMH,EAAc,qBAC1D,KAAK,GAAI1H,GAAI,EAAG6B,EAAMH,EAAOI,OAAQ9B,EAAI6B,EAAK7B,IAAK,CAEjD,IAAK,GADC8H,GAAOpG,EAAO1B,GACX+H,EAAI,EAAGA,EAAIJ,EAAS7F,OAAQiG,IACnC,GAAiC,gBAAtBD,GAAKH,EAASI,IACvB,KAAM,IAAIF,OAAM,oBAAsBH,EAAc,IAAM1H,EAAI,KAAO2H,EAASI,GAAK,qBAGvF,IAAID,EAAK9H,GAAuB,gBAAX8H,GAAK9H,EACxB,KAAM,IAAI6H,OAAM,oBAAsBH,EAAc,IAAM1H,EAAI,wBAEhE,QAAoBwF,KAAhBsC,EAAK/E,QAA+C,iBAAhB+E,GAAK/E,OAC3C,KAAM,IAAI8E,OAAM,oBAAsBH,EAAc,IAAM1H,EAAI,gCAM7D,QAASgI,GAAiBC,EAAYC,GAC3CA,EAAInB,QAAQ,SAACrD,GAAD,MAASuE,GAAGvE,GAAOuE,EAAGvE,GAAKyE,KAAKF,KJjU9C9I,EAAQ4B,YAAa,CAErB,IAAIqH,GAAW3H,OAAO4H,QAAU,SAAUC,GAAU,IAAK,GAAItI,GAAI,EAAGA,EAAIuI,UAAUzG,OAAQ9B,IAAK,CAAE,GAAIwI,GAASD,UAAUvI,EAAI,KAAK,GAAI0D,KAAO8E,GAAc/H,OAAOS,UAAUC,eAAejB,KAAKsI,EAAQ9E,KAAQ4E,EAAO5E,GAAO8E,EAAO9E,IAAY,MAAO4E,GAEvPnJ,GI9EgBsC,SJ+EhBtC,EItEgB8C,cJuEhB9C,EI9DgBiD,kBJ+DhBjD,EIjDgBgE,gBJkDhBhE,EI1CgBwE,WJ2ChBxE,EIxBgB2E,UJyBhB3E,EIDgBkF,cJEhBlF,EIyBgBuF,gBJxBhBvF,EIsDgB4F,gBJrDhB5F,EImEgBsF,oBJlEhBtF,EIwEgB8F,mBJvEhB9F,EIgFgB8E,aJ/EhB9E,EI6FgBgG,cJ5FhBhG,EIoJgBkG,+BJnJhBlG,EImLgBsG,OJlLhBtG,EIsLgBwG,eJrLhBxG,EIoMgBqH,aJnMhBrH,EImNgB+E,0BJlNhB/E,EIuOgByH,gCJtOhBzH,EIoRgBsI,iBJnRhBtI,EIwSgB6I,kBAhbhB,IAAAS,GAAA5I,EAAA,GJ4IIyD,EAAWhC,EAAuBmH,GI3ItCC,EAAA7I,EAAA,GJ+II8I,EAAUrH,EAAuBoH,GIlH/BvB,GAAeyB,GJiiBf,SAAUxJ,EAAQD,EAASU,IKhkBjC,SAAAgJ,EAAAzJ,GA4HA,QAAA0J,GAAAC,EAAAC,GAMA,IALA,GAAAC,IAAA,EACAnH,EAAA,MAAAiH,EAAA,EAAAA,EAAAjH,OACAoH,EAAA,EACAC,OAEAF,EAAAnH,GAAA,CACA,GAAAsH,GAAAL,EAAAE,EACAD,GAAAI,EAAAH,EAAAF,KACAI,EAAAD,KAAAE,GAGA,MAAAD,GAWA,QAAAE,GAAAN,EAAAO,GAKA,IAJA,GAAAL,IAAA,EACAnH,EAAAwH,EAAAxH,OACAyH,EAAAR,EAAAjH,SAEAmH,EAAAnH,GACAiH,EAAAQ,EAAAN,GAAAK,EAAAL,EAEA,OAAAF,GAaA,QAAAS,GAAAT,EAAAC,GAIA,IAHA,GAAAC,IAAA,EACAnH,EAAA,MAAAiH,EAAA,EAAAA,EAAAjH,SAEAmH,EAAAnH,GACA,GAAAkH,EAAAD,EAAAE,KAAAF,GACA,QAGA,UAYA,QAAAU,GAAA3I,EAAA4I,GAIA,IAHA,GAAAT,IAAA,EACAE,EAAAhH,MAAArB,KAEAmI,EAAAnI,GACAqI,EAAAF,GAAAS,EAAAT,EAEA,OAAAE,GAwBA,QAAAQ,GAAAC,EAAAlG,GACA,MAAAkG,GAAAC,IAAAnG,GAWA,QAAAoG,GAAA9I,EAAA0C,GACA,aAAA1C,MAAAwE,GAAAxE,EAAA0C,GAUA,QAAAqG,GAAAtG,GACA,GAAAwF,IAAA,EACAE,EAAAhH,MAAAsB,EAAAuG,KAKA,OAHAvG,GAAAsD,QAAA,SAAAqC,EAAA1F,GACAyF,IAAAF,IAAAvF,EAAA0F,KAEAD,EAwBA,QAAAc,GAAAC,GACA,GAAAjB,IAAA,EACAE,EAAAhH,MAAA+H,EAAAF,KAKA,OAHAE,GAAAnD,QAAA,SAAAqC,GACAD,IAAAF,GAAAG,IAEAD,EA2EA,QAAAgB,GAAAC,GACA,GAAAnB,IAAA,EACAnH,EAAA,MAAAsI,EAAA,EAAAA,EAAAtI,MAGA,KADArC,KAAA4K,UACApB,EAAAnH,GAAA,CACA,GAAAwI,GAAAF,EAAAnB,EACAxJ,MAAAyK,IAAAI,EAAA,GAAAA,EAAA,KAWA,QAAAC,KACA9K,KAAA+K,SAAAC,MAAA,SACAhL,KAAAuK,KAAA,EAaA,QAAAU,GAAAhH,GACA,GAAAyF,GAAA1J,KAAAoK,IAAAnG,UAAAjE,MAAA+K,SAAA9G,EAEA,OADAjE,MAAAuK,MAAAb,EAAA,IACAA,EAYA,QAAAwB,GAAAjH,GACA,GAAAkH,GAAAnL,KAAA+K,QACA,IAAAC,GAAA,CACA,GAAAtB,GAAAyB,EAAAlH,EACA,OAAAyF,KAAA0B,OAAArF,GAAA2D,EAEA,MAAAhI,IAAAjB,KAAA0K,EAAAlH,GAAAkH,EAAAlH,OAAA8B,GAYA,QAAAsF,GAAApH,GACA,GAAAkH,GAAAnL,KAAA+K,QACA,OAAAC,QAAAjF,KAAAoF,EAAAlH,GAAAvC,GAAAjB,KAAA0K,EAAAlH,GAaA,QAAAqH,GAAArH,EAAA0F,GACA,GAAAwB,GAAAnL,KAAA+K,QAGA,OAFA/K,MAAAuK,MAAAvK,KAAAoK,IAAAnG,GAAA,IACAkH,EAAAlH,GAAA+G,QAAAjF,KAAA4D,EAAAyB,GAAAzB,EACA3J,KAiBA,QAAAuL,GAAAZ,GACA,GAAAnB,IAAA,EACAnH,EAAA,MAAAsI,EAAA,EAAAA,EAAAtI,MAGA,KADArC,KAAA4K,UACApB,EAAAnH,GAAA,CACA,GAAAwI,GAAAF,EAAAnB,EACAxJ,MAAAyK,IAAAI,EAAA,GAAAA,EAAA,KAWA,QAAAW,KACAxL,KAAA+K,YACA/K,KAAAuK,KAAA,EAYA,QAAAkB,GAAAxH,GACA,GAAAkH,GAAAnL,KAAA+K,SACAvB,EAAAkC,EAAAP,EAAAlH,EAEA,SAAAuF,EAAA,KAIAA,GADA2B,EAAA9I,OAAA,EAEA8I,EAAAQ,MAEAC,GAAAnL,KAAA0K,EAAA3B,EAAA,KAEAxJ,KAAAuK,MACA,GAYA,QAAAsB,GAAA5H,GACA,GAAAkH,GAAAnL,KAAA+K,SACAvB,EAAAkC,EAAAP,EAAAlH,EAEA,OAAAuF,GAAA,MAAAzD,GAAAoF,EAAA3B,GAAA,GAYA,QAAAsC,GAAA7H,GACA,MAAAyH,GAAA1L,KAAA+K,SAAA9G,IAAA,EAaA,QAAA8H,GAAA9H,EAAA0F,GACA,GAAAwB,GAAAnL,KAAA+K,SACAvB,EAAAkC,EAAAP,EAAAlH,EAQA,OANAuF,GAAA,KACAxJ,KAAAuK,KACAY,EAAA9F,MAAApB,EAAA0F,KAEAwB,EAAA3B,GAAA,GAAAG,EAEA3J,KAiBA,QAAAgM,GAAArB,GACA,GAAAnB,IAAA,EACAnH,EAAA,MAAAsI,EAAA,EAAAA,EAAAtI,MAGA,KADArC,KAAA4K,UACApB,EAAAnH,GAAA,CACA,GAAAwI,GAAAF,EAAAnB,EACAxJ,MAAAyK,IAAAI,EAAA,GAAAA,EAAA,KAWA,QAAAoB,KACAjM,KAAAuK,KAAA,EACAvK,KAAA+K,UACAmB,KAAA,GAAAxB,GACA1G,IAAA,IAAAmI,IAAAZ,GACAa,OAAA,GAAA1B,IAaA,QAAA2B,GAAApI,GACA,GAAAyF,GAAA4C,EAAAtM,KAAAiE,GAAA,OAAAA,EAEA,OADAjE,MAAAuK,MAAAb,EAAA,IACAA,EAYA,QAAA6C,GAAAtI,GACA,MAAAqI,GAAAtM,KAAAiE,GAAA7C,IAAA6C,GAYA,QAAAuI,GAAAvI,GACA,MAAAqI,GAAAtM,KAAAiE,GAAAmG,IAAAnG,GAaA,QAAAwI,GAAAxI,EAAA0F,GACA,GAAAwB,GAAAmB,EAAAtM,KAAAiE,GACAsG,EAAAY,EAAAZ,IAIA,OAFAY,GAAAV,IAAAxG,EAAA0F,GACA3J,KAAAuK,MAAAY,EAAAZ,QAAA,IACAvK,KAkBA,QAAA0M,GAAA7C,GACA,GAAAL,IAAA,EACAnH,EAAA,MAAAwH,EAAA,EAAAA,EAAAxH,MAGA,KADArC,KAAA+K,SAAA,GAAAiB,KACAxC,EAAAnH,GACArC,KAAA2M,IAAA9C,EAAAL,IAcA,QAAAoD,GAAAjD,GAEA,MADA3J,MAAA+K,SAAAN,IAAAd,EAAAyB,IACApL,KAYA,QAAA6M,GAAAlD,GACA,MAAA3J,MAAA+K,SAAAX,IAAAT,GAcA,QAAAmD,GAAAnC,GACA,GAAAQ,GAAAnL,KAAA+K,SAAA,GAAAQ,GAAAZ,EACA3K,MAAAuK,KAAAY,EAAAZ,KAUA,QAAAwC,KACA/M,KAAA+K,SAAA,GAAAQ,GACAvL,KAAAuK,KAAA,EAYA,QAAAyC,GAAA/I,GACA,GAAAkH,GAAAnL,KAAA+K,SACArB,EAAAyB,EAAA,OAAAlH,EAGA,OADAjE,MAAAuK,KAAAY,EAAAZ,KACAb,EAYA,QAAAuD,GAAAhJ,GACA,MAAAjE,MAAA+K,SAAA3J,IAAA6C,GAYA,QAAAiJ,GAAAjJ,GACA,MAAAjE,MAAA+K,SAAAX,IAAAnG,GAaA,QAAAkJ,GAAAlJ,EAAA0F,GACA,GAAAwB,GAAAnL,KAAA+K,QACA,IAAAI,YAAAI,GAAA,CACA,GAAA6B,GAAAjC,EAAAJ,QACA,KAAAoB,IAAAiB,EAAA/K,OAAAgL,GAAA,EAGA,MAFAD,GAAA/H,MAAApB,EAAA0F,IACA3J,KAAAuK,OAAAY,EAAAZ,KACAvK,IAEAmL,GAAAnL,KAAA+K,SAAA,GAAAiB,GAAAoB,GAIA,MAFAjC,GAAAV,IAAAxG,EAAA0F,GACA3J,KAAAuK,KAAAY,EAAAZ,KACAvK,KAkBA,QAAAsN,GAAA3D,EAAA4D,GACA,GAAAC,GAAArF,GAAAwB,GACA8D,GAAAD,GAAAE,GAAA/D,GACAgE,GAAAH,IAAAC,GAAAG,GAAAjE,GACAkE,GAAAL,IAAAC,IAAAE,GAAAG,GAAAnE,GACAoE,EAAAP,GAAAC,GAAAE,GAAAE,EACAnE,EAAAqE,EAAA/D,EAAAL,EAAAtH,OAAAoF,WACApF,EAAAqH,EAAArH,MAEA,QAAA4B,KAAA0F,IACA4D,IAAA7L,GAAAjB,KAAAkJ,EAAA1F,IACA8J,IAEA,UAAA9J,GAEA0J,IAAA,UAAA1J,GAAA,UAAAA,IAEA4J,IAAA,UAAA5J,GAAA,cAAAA,GAAA,cAAAA,IAEA+J,GAAA/J,EAAA5B,KAEAqH,EAAArE,KAAApB,EAGA,OAAAyF,GAWA,QAAAgC,GAAApC,EAAArF,GAEA,IADA,GAAA5B,GAAAiH,EAAAjH,OACAA,KACA,GAAA4L,GAAA3E,EAAAjH,GAAA,GAAA4B,GACA,MAAA5B,EAGA,UAcA,QAAA6L,GAAA3M,EAAA4M,EAAAC,GACA,GAAA1E,GAAAyE,EAAA5M,EACA,OAAA4G,IAAA5G,GAAAmI,EAAAE,EAAAF,EAAA0E,EAAA7M,IAUA,QAAA8M,GAAA1E,GACA,aAAAA,MACA5D,KAAA4D,EAAA2E,GAAAC,GAEAC,SAAAxN,QAAA2I,GACA8E,GAAA9E,GACA+E,GAAA/E,GAUA,QAAAgF,GAAAhF,GACA,MAAAiF,IAAAjF,IAAA0E,EAAA1E,IAAAkF,GAiBA,QAAAC,GAAAnF,EAAAoF,EAAAC,EAAAC,EAAAC,GACA,MAAAvF,KAAAoF,IAGA,MAAApF,GAAA,MAAAoF,IAAAH,GAAAjF,KAAAiF,GAAAG,GACApF,OAAAoF,MAEAI,EAAAxF,EAAAoF,EAAAC,EAAAC,EAAAH,EAAAI,IAiBA,QAAAC,GAAA5N,EAAAwN,EAAAC,EAAAC,EAAAG,EAAAF,GACA,GAAAG,GAAAlH,GAAA5G,GACA+N,EAAAnH,GAAA4G,GACAQ,EAAAF,EAAAG,GAAAC,GAAAlO,GACAmO,EAAAJ,EAAAE,GAAAC,GAAAV,EAEAQ,MAAAV,GAAAc,GAAAJ,EACAG,KAAAb,GAAAc,GAAAD,CAEA,IAAAE,GAAAL,GAAAI,GACAE,EAAAH,GAAAC,GACAG,EAAAP,GAAAG,CAEA,IAAAI,GAAAlC,GAAArM,GAAA,CACA,IAAAqM,GAAAmB,GACA,QAEAM,IAAA,EACAO,GAAA,EAEA,GAAAE,IAAAF,EAEA,MADAV,OAAA,GAAApC,IACAuC,GAAAvB,GAAAvM,GACAwO,EAAAxO,EAAAwN,EAAAC,EAAAC,EAAAG,EAAAF,GACAc,EAAAzO,EAAAwN,EAAAQ,EAAAP,EAAAC,EAAAG,EAAAF,EAEA,MAAAF,EAAAiB,IAAA,CACA,GAAAC,GAAAN,GAAAlO,GAAAjB,KAAAc,EAAA,eACA4O,EAAAN,GAAAnO,GAAAjB,KAAAsO,EAAA,cAEA,IAAAmB,GAAAC,EAAA,CACA,GAAAC,GAAAF,EAAA3O,EAAAoI,QAAApI,EACA8O,EAAAF,EAAApB,EAAApF,QAAAoF,CAGA,OADAG,OAAA,GAAApC,IACAsC,EAAAgB,EAAAC,EAAArB,EAAAC,EAAAC,IAGA,QAAAY,IAGAZ,MAAA,GAAApC,IACAwD,EAAA/O,EAAAwN,EAAAC,EAAAC,EAAAG,EAAAF,IAWA,QAAAqB,GAAA5G,GACA,SAAA6G,GAAA7G,IAAA8G,GAAA9G,MAGA+G,GAAA/G,GAAAgH,GAAAC,IACAC,KAAAC,GAAAnH,IAUA,QAAAoH,GAAApH,GACA,MAAAiF,IAAAjF,IACAqH,GAAArH,EAAAtH,WAAA4O,GAAA5C,EAAA1E,IAUA,QAAAuH,GAAA3P,GACA,IAAA4P,GAAA5P,GACA,MAAA6P,IAAA7P,EAEA,IAAAmI,KACA,QAAAzF,KAAAjD,QAAAO,GACAG,GAAAjB,KAAAc,EAAA0C,IAAA,eAAAA,GACAyF,EAAArE,KAAApB,EAGA,OAAAyF,GAgBA,QAAAqG,GAAAzG,EAAAyF,EAAAC,EAAAC,EAAAG,EAAAF,GACA,GAAAmC,GAAArC,EAAAiB,GACAqB,EAAAhI,EAAAjH,OACAkP,EAAAxC,EAAA1M,MAEA,IAAAiP,GAAAC,KAAAF,GAAAE,EAAAD,GACA,QAGA,IAAAE,GAAAtC,EAAA9N,IAAAkI,EACA,IAAAkI,GAAAtC,EAAA9N,IAAA2N,GACA,MAAAyC,IAAAzC,CAEA,IAAAvF,IAAA,EACAE,GAAA,EACA+H,EAAAzC,EAAA0C,GAAA,GAAAhF,OAAA3G,EAMA,KAJAmJ,EAAAzE,IAAAnB,EAAAyF,GACAG,EAAAzE,IAAAsE,EAAAzF,KAGAE,EAAA8H,GAAA,CACA,GAAAK,GAAArI,EAAAE,GACAoI,EAAA7C,EAAAvF,EAEA,IAAAyF,EACA,GAAA4C,GAAAR,EACApC,EAAA2C,EAAAD,EAAAnI,EAAAuF,EAAAzF,EAAA4F,GACAD,EAAA0C,EAAAC,EAAApI,EAAAF,EAAAyF,EAAAG,EAEA,QAAAnJ,KAAA8L,EAAA,CACA,GAAAA,EACA,QAEAnI,IAAA,CACA,OAGA,GAAA+H,GACA,IAAA1H,EAAAgF,EAAA,SAAA6C,EAAAE,GACA,IAAA5H,EAAAuH,EAAAK,KACAH,IAAAC,GAAAxC,EAAAuC,EAAAC,EAAA5C,EAAAC,EAAAC,IACA,MAAAuC,GAAApM,KAAAyM,KAEW,CACXpI,GAAA,CACA,YAEK,IACLiI,IAAAC,IACAxC,EAAAuC,EAAAC,EAAA5C,EAAAC,EAAAC,GACA,CACAxF,GAAA,CACA,QAKA,MAFAwF,GAAA,OAAA5F,GACA4F,EAAA,OAAAH,GACArF,EAoBA,QAAAsG,GAAAzO,EAAAwN,EAAAgD,EAAA/C,EAAAC,EAAAG,EAAAF,GACA,OAAA6C,GACA,IAAAC,IACA,GAAAzQ,EAAA0Q,YAAAlD,EAAAkD,YACA1Q,EAAA2Q,YAAAnD,EAAAmD,WACA,QAEA3Q,KAAA4Q,OACApD,IAAAoD,MAEA,KAAAC,IACA,QAAA7Q,EAAA0Q,YAAAlD,EAAAkD,aACA7C,EAAA,GAAAiD,IAAA9Q,GAAA,GAAA8Q,IAAAtD,IAKA,KAAAuD,IACA,IAAAC,IACA,IAAAC,IAGA,MAAAvE,KAAA1M,GAAAwN,EAEA,KAAA0D,IACA,MAAAlR,GAAAV,MAAAkO,EAAAlO,MAAAU,EAAAmR,SAAA3D,EAAA2D,OAEA,KAAAC,IACA,IAAAC,IAIA,MAAArR,IAAAwN,EAAA,EAEA,KAAA8D,IACA,GAAAC,GAAAxI,CAEA,KAAAyI,IACA,GAAA1B,GAAArC,EAAAiB,EAGA,IAFA6C,MAAAtI,GAEAjJ,EAAAgJ,MAAAwE,EAAAxE,OAAA8G,EACA,QAGA,IAAAG,GAAAtC,EAAA9N,IAAAG,EACA,IAAAiQ,EACA,MAAAA,IAAAzC,CAEAC,IAAA0C,GAGAxC,EAAAzE,IAAAlJ,EAAAwN,EACA,IAAArF,GAAAqG,EAAA+C,EAAAvR,GAAAuR,EAAA/D,GAAAC,EAAAC,EAAAG,EAAAF,EAEA,OADAA,GAAA,OAAA3N,GACAmI,CAEA,KAAAsJ,IACA,GAAAC,GACA,MAAAA,IAAAxS,KAAAc,IAAA0R,GAAAxS,KAAAsO,GAGA,SAgBA,QAAAuB,GAAA/O,EAAAwN,EAAAC,EAAAC,EAAAG,EAAAF,GACA,GAAAmC,GAAArC,EAAAiB,GACAiD,EAAAC,EAAA5R,GACA6R,EAAAF,EAAA7Q,MAIA,IAAA+Q,GAHAD,EAAApE,GACA1M,SAEAgP,EACA,QAGA,KADA,GAAA7H,GAAA4J,EACA5J,KAAA,CACA,GAAAvF,GAAAiP,EAAA1J,EACA,MAAA6H,EAAApN,IAAA8K,GAAArN,GAAAjB,KAAAsO,EAAA9K,IACA,SAIA,GAAAuN,GAAAtC,EAAA9N,IAAAG,EACA,IAAAiQ,GAAAtC,EAAA9N,IAAA2N,GACA,MAAAyC,IAAAzC,CAEA,IAAArF,IAAA,CACAwF,GAAAzE,IAAAlJ,EAAAwN,GACAG,EAAAzE,IAAAsE,EAAAxN,EAGA,KADA,GAAA8R,GAAAhC,IACA7H,EAAA4J,GAAA,CACAnP,EAAAiP,EAAA1J,EACA,IAAA8J,GAAA/R,EAAA0C,GACA2N,EAAA7C,EAAA9K,EAEA,IAAAgL,EACA,GAAA4C,GAAAR,EACApC,EAAA2C,EAAA0B,EAAArP,EAAA8K,EAAAxN,EAAA2N,GACAD,EAAAqE,EAAA1B,EAAA3N,EAAA1C,EAAAwN,EAAAG,EAGA,UAAAnJ,KAAA8L,EACAyB,IAAA1B,GAAAxC,EAAAkE,EAAA1B,EAAA5C,EAAAC,EAAAC,GACA2C,GACA,CACAnI,GAAA,CACA,OAEA2J,MAAA,eAAApP,GAEA,GAAAyF,IAAA2J,EAAA,CACA,GAAAE,GAAAhS,EAAAiS,YACAC,EAAA1E,EAAAyE,WAGAD,IAAAE,GACA,eAAAlS,IAAA,eAAAwN,MACA,kBAAAwE,oBACA,kBAAAE,sBACA/J,GAAA,GAKA,MAFAwF,GAAA,OAAA3N,GACA2N,EAAA,OAAAH,GACArF,EAUA,QAAAyJ,GAAA5R,GACA,MAAA2M,GAAA3M,EAAAmS,GAAAC,IAWA,QAAArH,GAAAtI,EAAAC,GACA,GAAAkH,GAAAnH,EAAA+G,QACA,OAAA6I,IAAA3P,GACAkH,EAAA,gBAAAlH,GAAA,iBACAkH,EAAAnH,IAWA,QAAA6P,GAAAtS,EAAA0C,GACA,GAAA0F,GAAAU,EAAA9I,EAAA0C,EACA,OAAAsM,GAAA5G,SAAA5D,GAUA,QAAA0I,IAAA9E,GACA,GAAAmK,GAAApS,GAAAjB,KAAAkJ,EAAA6E,IACAuD,EAAApI,EAAA6E,GAEA,KACA7E,EAAA6E,QAAAzI,EACA,IAAAgO,IAAA,EACG,MAAAC,IAEH,GAAAtK,GAAAuK,GAAAxT,KAAAkJ,EAQA,OAPAoK,KACAD,EACAnK,EAAA6E,IAAAuD,QAEApI,GAAA6E,KAGA9E,EA6DA,QAAAsE,IAAArE,EAAAtH,GAEA,SADAA,EAAA,MAAAA,EAAA6R,GAAA7R,KAEA,gBAAAsH,IAAAwK,GAAAtD,KAAAlH,KACAA,GAAA,GAAAA,EAAA,MAAAA,EAAAtH,EAUA,QAAAuR,IAAAjK,GACA,GAAAyK,SAAAzK,EACA,iBAAAyK,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EACA,cAAAzK,EACA,OAAAA,EAUA,QAAA8G,IAAA4D,GACA,QAAAC,SAAAD,GAUA,QAAAlD,IAAAxH,GACA,GAAA4K,GAAA5K,KAAA6J,WAGA,OAAA7J,MAFA,kBAAA4K,MAAA9S,WAAA+S,IAYA,QAAA9F,IAAA/E,GACA,MAAAsK,IAAAxT,KAAAkJ,GAUA,QAAAmH,IAAAuD,GACA,SAAAA,EAAA,CACA,IACA,MAAAI,IAAAhU,KAAA4T,GACK,MAAAL,IACL,IACA,MAAAK,GAAA,GACK,MAAAL,KAEL,SAmCA,QAAA/F,IAAAtE,EAAAoF,GACA,MAAApF,KAAAoF,GAAApF,OAAAoF,MA4EA,QAAA2F,IAAA/K,GACA,aAAAA,GAAAqH,GAAArH,EAAAtH,UAAAqO,GAAA/G,GAkDA,QAAAgL,IAAAhL,EAAAoF,GACA,MAAAD,GAAAnF,EAAAoF,GAoBA,QAAA2B,IAAA/G,GACA,IAAA6G,GAAA7G,GACA,QAIA,IAAAoI,GAAA1D,EAAA1E,EACA,OAAAoI,IAAA6C,IAAA7C,GAAA8C,IAAA9C,GAAA+C,IAAA/C,GAAAgD,GA6BA,QAAA/D,IAAArH,GACA,sBAAAA,IACAA,GAAA,GAAAA,EAAA,MAAAA,GAAAuK,GA4BA,QAAA1D,IAAA7G,GACA,GAAAyK,SAAAzK,EACA,cAAAA,IAAA,UAAAyK,GAAA,YAAAA,GA2BA,QAAAxF,IAAAjF,GACA,aAAAA,GAAA,gBAAAA,GAkDA,QAAA+J,IAAAnS,GACA,MAAAmT,IAAAnT,GAAA+L,EAAA/L,GAAA2P,EAAA3P,GAqBA,QAAAyT,MACA,SAgBA,QAAAC,MACA,SA1yDA,GAAA5H,IAAA,IAGAjC,GAAA,4BAGA6E,GAAA,EACAyB,GAAA,EAGAwC,GAAA,iBAGArF,GAAA,qBACAW,GAAA,iBACAsF,GAAA,yBACAxC,GAAA,mBACAC,GAAA,gBACAE,GAAA,iBACAmC,GAAA,oBACAC,GAAA,6BACAhC,GAAA,eACAL,GAAA,kBACAjE,GAAA,gBACAoB,GAAA,kBAEAoF,GAAA,iBACApC,GAAA,kBACAI,GAAA,eACAH,GAAA,kBACAI,GAAA,kBACA1E,GAAA,qBAGA8D,GAAA,uBACAJ,GAAA,oBAeAkD,GAAA,sBAGAtE,GAAA,8BAGAuD,GAAA,mBAGAlD,KACAA,IAxBA,yBAwBAA,GAvBA,yBAwBAA,GAvBA,sBAuBAA,GAtBA,uBAuBAA,GAtBA,uBAsBAA,GArBA,uBAsBAA,GArBA,8BAqBAA,GApBA,wBAqBAA,GApBA,yBAoBA,EACAA,GAAApC,IAAAoC,GAAAzB,IACAyB,GAAAmB,IAAAnB,GAAAqB,IACArB,GAAAe,IAAAf,GAAAsB,IACAtB,GAAAwB,IAAAxB,GAAA2D,IACA3D,GAAA4B,IAAA5B,GAAAuB,IACAvB,GAAAtB,IAAAsB,GAAA0B,IACA1B,GAAA8B,IAAA9B,GAAA2B,IACA3B,GAxCA,qBAwCA,CAGA,IAAAkE,IAAA,gBAAA/L,SAAApI,iBAAAoI,EAGAgM,GAAA,gBAAArV,kBAAAiB,iBAAAjB,KAGAP,GAAA2V,IAAAC,IAAAC,SAAA,iBAGAC,GAAA,gBAAA5V,UAAA6V,UAAA7V,EAGA8V,GAAAF,IAAA,gBAAA3V,UAAA4V,UAAA5V,EAGA8V,GAAAD,OAAA9V,UAAA4V,GAGAI,GAAAD,IAAAN,GAAAhM,QAGAwM,GAAA,WACA,IACA,MAAAD,QAAAE,SAAAF,GAAAE,QAAA,QACG,MAAA5B,QAIH6B,GAAAF,OAAA7H,aA4KAgI,GAAApT,MAAAjB,UACAsU,GAAAV,SAAA5T,UACA+S,GAAAxT,OAAAS,UAGAuU,GAAAxW,GAAA,sBAGAiV,GAAAsB,GAAAE,SAGAvU,GAAA8S,GAAA9S,eAGA4S,GAAA,WACA,GAAA4B,GAAA,SAAAC,KAAAH,OAAAtC,MAAAsC,GAAAtC,KAAA0C,UAAA,GACA,OAAAF,GAAA,iBAAAA,EAAA,MAQAjC,GAAAO,GAAAyB,SAGAtF,GAAA0F,OAAA,IACA5B,GAAAhU,KAAAiB,IAAA4U,QAAApB,GAAA,QACAoB,QAAA,uEAIAC,GAAAd,GAAAjW,GAAA+W,WAAAxQ,GACAyQ,GAAAhX,GAAAgX,OACAnE,GAAA7S,GAAA6S,WACAoE,GAAAjC,GAAAiC,qBACA7K,GAAAkK,GAAAlK,OACA4C,GAAAgI,MAAAE,gBAAA3Q,GAGA4Q,GAAA3V,OAAA4V,sBACAC,GAAAN,MAAA3I,aAAA7H,GACAqL,GAnEA,SAAAiD,EAAA5N,GACA,gBAAAqQ,GACA,MAAAzC,GAAA5N,EAAAqQ,MAiEA9V,OAAA0S,KAAA1S,QAGA+V,GAAAlD,EAAArU,GAAA,YACA2M,GAAA0H,EAAArU,GAAA,OACAwX,GAAAnD,EAAArU,GAAA,WACAyX,GAAApD,EAAArU,GAAA,OACA0X,GAAArD,EAAArU,GAAA,WACAwL,GAAA6I,EAAA7S,OAAA,UAGAmW,GAAArG,GAAAiG,IACAK,GAAAtG,GAAA3E,IACAkL,GAAAvG,GAAAkG,IACAM,GAAAxG,GAAAmG,IACAM,GAAAzG,GAAAoG,IAGAM,GAAAhB,MAAA/U,cAAAsE,GACAkN,GAAAuE,MAAAC,YAAA1R,EAkGA2E,GAAAjJ,UAAAmJ,MAAAE,EACAJ,EAAAjJ,UAAA,OAAAwJ,EACAP,EAAAjJ,UAAAL,IAAA8J,EACAR,EAAAjJ,UAAA2I,IAAAiB,EACAX,EAAAjJ,UAAAgJ,IAAAa,EA+GAC,EAAA9J,UAAAmJ,MAAAY,EACAD,EAAA9J,UAAA,OAAAgK,EACAF,EAAA9J,UAAAL,IAAAyK,EACAN,EAAA9J,UAAA2I,IAAA0B,EACAP,EAAA9J,UAAAgJ,IAAAsB,EAiGAC,EAAAvK,UAAAmJ,MAAAqB,EACAD,EAAAvK,UAAA,OAAA4K,EACAL,EAAAvK,UAAAL,IAAAmL,EACAP,EAAAvK,UAAA2I,IAAAoC,EACAR,EAAAvK,UAAAgJ,IAAAgC,EAiDAC,EAAAjL,UAAAkL,IAAAD,EAAAjL,UAAA4D,KAAAuH,EACAF,EAAAjL,UAAA2I,IAAAyC,EAgGAC,EAAArL,UAAAmJ,MAAAmC,EACAD,EAAArL,UAAA,OAAAuL,EACAF,EAAArL,UAAAL,IAAA6L,EACAH,EAAArL,UAAA2I,IAAA8C,EACAJ,EAAArL,UAAAgJ,IAAA0C,CAuhBA,IAAAwG,IAAAgD,GAAA,SAAApV,GACA,aAAAA,MAGAA,EAAAP,OAAAO,GACA8H,EAAAsN,GAAApV,GAAA,SAAAmW,GACA,MAAAjB,IAAAhW,KAAAc,EAAAmW,OANA1C,GAiBAvF,GAAApB,GAGA0I,IAAAtH,GAAA,GAAAsH,IAAA,GAAAY,aAAA,MAAA3F,IACA7F,IAAAsD,GAAA,GAAAtD,MAAA0G,IACAmE,IAzzCA,oBAyzCAvH,GAAAuH,GAAAY,YACAX,IAAAxH,GAAA,GAAAwH,MAAAlE,IACAmE,IApzCA,oBAozCAzH,GAAA,GAAAyH,QACAzH,GAAA,SAAA9F,GACA,GAAAD,GAAA2E,EAAA1E,GACA4K,EAAA7K,GAAAiG,GAAAhG,EAAA6J,gBAAAzN,GACA8R,EAAAtD,EAAAzD,GAAAyD,GAAA,EAEA,IAAAsD,EACA,OAAAA,GACA,IAAAV,IAAA,MAAAnF,GACA,KAAAoF,IAAA,MAAAvE,GACA,KAAAwE,IAAA,MAr0CA,kBAs0CA,KAAAC,IAAA,MAAAvE,GACA,KAAAwE,IAAA,MAh0CA,mBAm0CA,MAAA7N,IA8IA,IAAAgE,IAAAiB,EAAA,WAA8C,MAAA7F,eAAoB6F,EAAA,SAAAhF,GAClE,MAAAiF,IAAAjF,IAAAjI,GAAAjB,KAAAkJ,EAAA,YACA8M,GAAAhW,KAAAkJ,EAAA,WA0BAxB,GAAAzF,MAAAyF,QAgDAyF,GAAAiJ,IAAA5B,GAuKAnH,GAAA+H,GAhiDA,SAAAxB,GACA,gBAAA1K,GACA,MAAA0K,GAAA1K,KA8hDAkM,IAAA9E,CAyEApR,GAAAD,QAAAiV,KLokB6BlU,KAAKf,EAASU,EAAoB,IAAKA,EAAoB,IAAIT,KAItF,SAAUA,EAAQD,EAASU,GAEjC,YA6BA,SAASyB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQC,QAASD,GAEvF,QAASgW,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BnY,EAAMU,GAAQ,IAAKV,EAAQ,KAAM,IAAIoY,gBAAe,4DAAgE,QAAO1X,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BV,EAAPU,EAElO,QAAS2X,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIL,WAAU,iEAAoEK,GAAeD,GAAS5W,UAAYT,OAAOuX,OAAOD,GAAcA,EAAW7W,WAAa+R,aAAe7J,MAAO0O,EAAUlX,YAAY,EAAOqX,UAAU,EAAMtX,cAAc,KAAeoX,IAAYtX,OAAOyX,eAAiBzX,OAAOyX,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAhCje5Y,EAAQ4B,YAAa,CAErB,IAAIqH,GAAW3H,OAAO4H,QAAU,SAAUC,GAAU,IAAK,GAAItI,GAAI,EAAGA,EAAIuI,UAAUzG,OAAQ9B,IAAK,CAAE,GAAIwI,GAASD,UAAUvI,EAAI,KAAK,GAAI0D,KAAO8E,GAAc/H,OAAOS,UAAUC,eAAejB,KAAKsI,EAAQ9E,KAAQ4E,EAAO5E,GAAO8E,EAAO9E,IAAY,MAAO4E,IMr4EvPI,EAAA7I,EAAA,GNy4EI8I,EAAUrH,EAAuBoH,GMx4ErC0P,EAAAvY,EAAA,GN44EIwY,EAAc/W,EAAuB8W,GM34EzC3P,EAAA5I,EAAA,GN+4EIyD,EAAWhC,EAAuBmH,GM94EtC6P,EAAAzY,EAAA,GNk5EI0Y,EAAejX,EAAuBgX,GMj5E1CE,EAAA3Y,EAAA,GAEA4Y,EAAA5Y,EAAA,INq5EI6Y,EAAapX,EAAuBmX,GMn5ElCE,EAAO,aA+CQC,ENw3EC,SAAUC,GMlvE9B,QAAAD,GAAYxR,EAAc0R,GAAoBvB,EAAA9X,KAAAmZ,EAAA,IAAAG,GAAApB,EAAAlY,KAC5CoZ,EAAA3Y,KAAAT,KAAM2H,EAAO0R,GAD+B,OAAAE,GAAA9Y,KAAA6Y,IAE5C,EAAAP,EAAAxQ,kBAAA+Q,GAAwB,cAAe,SAAU,aAAc,gBAAiB,WAAY,iBAFhDA,EN4lF9C,MAzWAlB,GAAUe,EAAiBC,GAc3BD,EAAgB1X,UM5vEhB+X,kBN4vE8C,WM3vE5CxZ,KAAKyZ,UAAUC,SAAS,IAGxB1Z,KAAK2Z,qBAAqB3Z,KAAK4Z,MAAM3X,OAAQjC,KAAK2H,MAAM1F,SN+vE1DkX,EAAgB1X,UM5vEhBoY,0BN4vEsD,SM5vE5BC,GACxB,GAAIC,SAcJ,KAZK,EAAAlW,EAAA9B,SAAQ+X,EAAU7X,OAAQjC,KAAK2H,MAAM1F,SAOhC,EAAA8W,EAAArV,eAAc1D,KAAK2H,MAAMN,SAAUyS,EAAUzS,YACrD0S,EAAgB/Z,KAAK4Z,MAAM3X,QAP3B8X,EAAgBD,EAAU7X,OAWxB8X,EAAe,CACjB,GAAMtX,IAAY,EAAAsW,EAAA5R,+BAA8B4S,EAAeD,EAAUzS,SACzByS,EAAU1U,KAAM0U,EAAUxV,iBACpE0V,EAAYha,KAAK4Z,MAAM3X,MAC7BjC,MAAKyZ,UAAUxX,OAAQQ,IACvBzC,KAAK2Z,qBAAqBlX,EAAWuX,KNqwEzCb,EAAgB1X,UM7vEhBwY,gBN6vE4C,WM5vE1C,GAAKja,KAAK2H,MAAMuS,SAAhB,CACA,GAAMC,IAAQ,EAAApB,EAAA/W,QAAOhC,KAAK4Z,MAAM3X,QAC1BmY,EAAoBpa,KAAK2H,MAAM0S,iBAAmBra,KAAK2H,MAAM0S,iBAAiB,GAAKra,KAAK2H,MAAM2S,OAAO,EAC3G,OAAOH,GAAQna,KAAK2H,MAAM4S,WAAaJ,EAAQ,GAAKna,KAAK2H,MAAM2S,OAAO,GAAyB,EAApBF,EAAwB,ON0wErGjB,EAAgB1X,UM/vEhB+Y,YN+vEwC,SM/vE5Bja,EAAUuC,EAAUR,EN+vEsC6D,GM/vEF,GAAzB6N,GAAyB7N,EAAzB6N,EAAGyG,EAAsBtU,EAAtBsU,KACrCxY,EAAUjC,KAAK4Z,MAAf3X,OACHzB,GAAI,EAAAuY,EAAAzT,eAAcrD,EAAQ1B,EACzBC,KAELR,KAAKyZ,UAAUiB,aAAa,EAAA3B,EAAApW,iBAAgBnC,GAAIwZ,UAAWha,KAAK4Z,MAAM3X,SAEtEjC,KAAK2H,MAAM6S,YAAYvY,EAAQzB,EAAGA,EAAG,KAAMwT,EAAGyG,KN+wEhDtB,EAAgB1X,UMpwEhBkZ,ONowEmC,SMpwE5Bpa,EAAUuC,EAAUR,ENowEiC0E,GMpwEG,GAAzBgN,GAAyBhN,EAAzBgN,EAAGyG,EAAsBzT,EAAtByT,KAChCC,EAAe1a,KAAK4Z,MAApBc,YACFzY,EAAUjC,KAAK4Z,MAAf3X,OACDzB,GAAI,EAAAuY,EAAAzT,eAAcrD,EAAQ1B,EAC9B,IAAKC,EAAL,CAGA,GAAIoa,IACF/X,EAAGrC,EAAEqC,EAAGN,EAAG/B,EAAE+B,EAAGO,EAAGtC,EAAEsC,EAAGR,EAAG9B,EAAE8B,EAAGsY,aAAa,EAAMra,EAAGA,EAGxD0B,IAAS,EAAA8W,EAAArT,aAAYzD,EAAQzB,EAAGsC,EAAGR,GAAG,GAEtCtC,KAAK2H,MAAMgT,OAAO1Y,EAAQyY,EAAala,EAAGoa,EAAa5G,EAAGyG,GAC1Dza,KAAKyZ,UAAWoB,WAAYD,MNoxE9BzB,EAAgB1X,UMzwEhBqZ,WNywEuC,SMzwE5Bva,EAAUuC,EAAUR,ENywEqCyY,GMzwED,GAAzB/G,GAAyB+G,EAAzB/G,EAAGyG,EAAsBM,EAAtBN,KACpCC,EAAe1a,KAAK4Z,MAApBc,YACFzY,EAAUjC,KAAK4Z,MAAf3X,OACCzB,GAAI,EAAAuY,EAAAzT,eAAcrD,EAAQ1B,EAChC,IAAKC,EAAL,CAGA,GAAMwa,GAAOxa,EAAEsC,CACfb,IAAS,EAAA8W,EAAArT,aAAYzD,EAAQzB,EAAGsC,EAAGR,GAAG,GAClCoY,EAAYpY,IAAMA,IAAK,EAAAyW,EAAA/T,mBAAkB/C,EAAQzB,KACnDA,EAAEsC,EAAIkY,EAIR,IAAMvY,IAAY,EAAAsW,EAAA1U,SAAQpC,EAAQjC,KAAK2H,MAAMrD,iBACtC0V,EAAaha,KAAK4Z,MAAlBI,SACPha,MAAKyZ,UACHoB,WAAY,KACZ5Y,OAAQQ,EACRiY,YAAa,KACbV,UAAW,OAGbha,KAAK2H,MAAMmT,WAAW7Y,EAAQyY,EAAala,EAAG,KAAMwT,EAAGyG,GACvDza,KAAK2Z,qBAAqBlX,EAAWuX,KNgxEvCb,EAAgB1X,UM7wEhBkY,qBN6wEiD,SM7wE5BlX,EAAmBuX,GACjCA,IAAWA,EAAYha,KAAK4Z,MAAM3X,SAClC,EAAA4B,EAAA9B,SAAQiY,EAAWvX,IACtBzC,KAAK2H,MAAMsT,eAAexY,INixE9B0W,EAAgB1X,UM7wEhByZ,cN6wE0C,SM7wE5B3a,EAAUsC,EAAUN,EN6wEwC4Y,GM7wEF,GAA3BnH,GAA2BmH,EAA3BnH,EAAGyG,EAAwBU,EAAxBV,KACvCxY,EAAUjC,KAAK4Z,MAAf3X,OACHzB,GAAI,EAAAuY,EAAAzT,eAAcrD,EAAQ1B,EACzBC,KAELR,KAAKyZ,UACH2B,eAAe,EAAArC,EAAApW,iBAAgBnC,GAC/BwZ,UAAWha,KAAK4Z,MAAM3X,SAGxBjC,KAAK2H,MAAMuT,cAAcjZ,EAAQzB,EAAGA,EAAG,KAAMwT,EAAGyG,KNmxElDtB,EAAgB1X,UMhxEhB4Z,SNgxEqC,SMhxE5B9a,EAAUsC,EAAUN,ENgxEmC+Y,GMhxEG,GAA3BtH,GAA2BsH,EAA3BtH,EAAGyG,EAAwBa,EAAxBb,KAAwBc,EACjCvb,KAAK4Z,MAA9B3X,EAD0DsZ,EAC1DtZ,OAAQmZ,EADkDG,EAClDH,cACX5a,GAAI,EAAAuY,EAAAzT,eAAcrD,EAAQ1B,EAC9B,IAAKC,EAAL,CAGA,GAAIoa,IACF/X,EAAGA,EAAGN,EAAGA,EAAGO,EAAGtC,EAAEsC,EAAGR,EAAG9B,EAAE8B,EAAGgB,QAAQ,EAAM/C,EAAGA,EAG/CP,MAAK2H,MAAM0T,SAASpZ,EAAQmZ,EAAe5a,EAAGoa,EAAa5G,EAAGyG,GAG9Dza,KAAKyZ,UAAWoB,WAAYD,MNwxE9BzB,EAAgB1X,UMrxEhB+Z,aNqxEyC,SMrxE5Bjb,EAAUsC,EAAUN,ENqxEuCkZ,GMrxED,GAA3BzH,GAA2ByH,EAA3BzH,EAAGyG,EAAwBgB,EAAxBhB,KAAwBiB,EACrC1b,KAAK4Z,MAA9B3X,EAD8DyZ,EAC9DzZ,OAAQmZ,EADsDM,EACtDN,cACX5a,GAAI,EAAAuY,EAAAzT,eAAcrD,EAAQ1B,GAC1Bob,EAAOnb,EAAEqC,CAEbrC,GAAEqC,EAAIA,GACF,EAAAkW,EAAA/T,mBAAkB/C,EAAQzB,KAC5BA,EAAEqC,EAAI8Y,EAIR,IAAMlZ,IAAY,EAAAsW,EAAA1U,SAAQpC,EAAQjC,KAAK2H,MAAMrD,iBACtC0V,EAAaha,KAAK4Z,MAAlBI,SACPha,MAAKyZ,UACHoB,WAAY,KACZ5Y,OAAQQ,EACR2Y,cAAe,KACfpB,UAAW,OAGbha,KAAK2H,MAAM6T,aAAavZ,EAAQmZ,EAAe5a,EAAG,KAAMwT,EAAGyG,GAC3Dza,KAAK2Z,qBAAqBlX,EAAWuX,INoyEvCb,EAAgB1X,UM7xEhBmZ,YN6xEwC,WM7xEN,GACzBC,GAAc7a,KAAK4Z,MAAnBiB,UACP,KAAKA,EAAY,MAAO,KAFQ,IAAAe,GAGsD5b,KAAK2H,MAApFrB,EAHyBsV,EAGzBtV,MAAOlB,EAHkBwW,EAGlBxW,KAAMkV,EAHYsB,EAGZtB,OAAQD,EAHIuB,EAGJvB,iBAAkBE,EAHdqB,EAGcrB,UAAWsB,EAHzBD,EAGyBC,QAASC,EAHlCF,EAGkCE,gBAGlE,OACE5S,GAAAnH,QAAAga,cAAC9C,EAAAlX,SACCc,EAAGgY,EAAWhY,EACdN,EAAGsY,EAAWtY,EACdO,EAAG+X,EAAW/X,EACdR,EAAGuY,EAAWvY,EACd/B,EAAGsa,EAAWta,EACdyb,UAAU,yBACVC,eAAgB3V,EAChBlB,KAAMA,EACNkV,OAAQA,EACRD,iBAAkBA,GAAoBC,EACtCuB,QAASA,EACTtB,UAAWA,EACX/W,aAAa,EACbC,aAAa,EACbqY,iBAAkBA,GAClB5S,EAAAnH,QAAAga,cAAA,cNkzEN5C,EAAgB1X,UMxyEhBya,gBNwyE4C,SMxyE5B3U,GACd,GAAKA,EAAMtD,IAAX,CACA,GAAMzD,IAAI,EAAAuY,EAAAzT,eAActF,KAAK4Z,MAAM3X,OAAQwF,OAAOF,EAAMtD,KACxD,KAAKzD,EAAG,MAAO,KAH6C,IAAA2b,GAMjBnc,KAAK2H,MAFzCrB,EAJqD6V,EAIrD7V,MAAOlB,EAJ8C+W,EAI9C/W,KAAMkV,EAJwC6B,EAIxC7B,OAAQD,EAJgC8B,EAIhC9B,iBAAkBE,EAJc4B,EAId5B,UACvCsB,EALqDM,EAKrDN,QAASrY,EAL4C2Y,EAK5C3Y,YAAaC,EAL+B0Y,EAK/B1Y,YAAaqY,EALkBK,EAKlBL,iBACnCM,EANqDD,EAMrDC,gBAAiBC,EANoCF,EAMpCE,gBACjB3C,EAAW1Z,KAAK4Z,MAAhBF,QAGD4C,EAAYjZ,SAAS7C,EAAE8C,QAAUE,IAAgBhD,EAAEgD,aAAgC,MAAjBhD,EAAEgD,cACpE+Y,EAAYlZ,SAAS7C,EAAE8C,QAAUG,IAAgBjD,EAAEiD,aAAgC,MAAjBjD,EAAEiD,aAE1E,OACEyF,GAAAnH,QAAAga,cAAC9C,EAAAlX,SACCka,eAAgB3V,EAChBlB,KAAMA,EACNkV,OAAQA,EACRD,iBAAkBA,GAAoBC,EACtCuB,QAASA,EACTtB,UAAWA,EACXiC,OAAQJ,EACRK,OAAQJ,EACRvB,WAAY9a,KAAK8a,WACjBN,YAAaxa,KAAKwa,YAClBG,OAAQ3a,KAAK2a,OACbO,cAAelb,KAAKkb,cACpBG,SAAUrb,KAAKqb,SACfG,aAAcxb,KAAKwb,aACnBhY,YAAa8Y,EACb7Y,YAAa8Y,EACbT,iBAAkBA,GAAoBpC,EACtCgD,gBAAiBhD,EAEjB7W,EAAGrC,EAAEqC,EACLN,EAAG/B,EAAE+B,EACLO,EAAGtC,EAAEsC,EACLR,EAAG9B,EAAE8B,EACL/B,EAAGC,EAAED,EACL0C,KAAMzC,EAAEyC,KACRF,KAAMvC,EAAEuC,KACRG,KAAM1C,EAAE0C,KACRF,KAAMxC,EAAEwC,KACRG,KAAM3C,EAAE2C,KACRG,OAAQ9C,EAAE8C,OACVC,QAAS/C,EAAE+C,SAEVgE,KNuzEP4R,EAAgB1X,UMlzEhBkb,ONkzEmC,WMlzE1B,GAAAC,GAAA5c,KAAA6c,EACoB7c,KAAK2H,MAAzBqU,EADAa,EACAb,UAAWc,EADXD,EACWC,MAEZC,KACJxW,OAAQvG,KAAKia,mBACV6C,EAGL,OACE5T,GAAAnH,QAAAga,cAAA,OAAKC,WAAW,EAAAlD,EAAA/W,SAAW,oBAAqBia,GAAYc,MAAOC,GAG/DjZ,UAAMC,SAASC,IAAIhE,KAAK2H,MAAMN,SAAU,SAACE,GAAD,MAAWqV,GAAKV,gBAAgB3U,KAEzEvH,KAAK4a,gBN4zELzB,GMluFoCrV,UAAMkZ,UAA9B7D,GAEZ8D,YAAc,kBAFF9D,EAIZ+D,WAILlB,UAAWmB,UAAU/Q,OACrB0Q,MAAOK,UAAU5b,OAKjB+E,MAAO6W,UAAUC,OAGjBlD,SAAUiD,UAAUE,KAEpBjY,KAAM+X,UAAUC,OAGhBhB,gBAAiBe,UAAU/Q,OAE3BiQ,gBAAiBc,UAAU/Q,OAG3B9H,gBAAiB6Y,UAAUE,KAI3Bpb,OAAQ,SAAU0F,GAChB,GAAI1F,GAAS0F,EAAM1F,WAEJ8D,KAAX9D,IACJ,EAAA8W,EAAA/Q,gBAAe/F,EAAQ,WAQzBqY,OAAQ6C,UAAUG,QAAQH,UAAUC,QAEpC/C,iBAAkB8C,UAAUG,QAAQH,UAAUC,QAE9C7C,UAAW4C,UAAUC,OAMrBvB,QAASsB,UAAUC,OAKnB5Z,YAAa2Z,UAAUE,KACvB5Z,YAAa0Z,UAAUE,KAEvBvB,iBAAkBqB,UAAUE,KAO5BpC,eAAgBkC,UAAU9I,KAI1BmG,YAAa2C,UAAU9I,KAEvBsG,OAAQwC,UAAU9I,KAElByG,WAAYqC,UAAU9I,KAEtB6G,cAAeiC,UAAU9I,KAEzBgH,SAAU8B,UAAU9I,KAEpBmH,aAAc2B,UAAU9I,KAOxBhN,SAAU,SAAUM,EAAO4V,EAAUC,GACnC,GAAInW,GAAWM,EAAM4V,GAGjB7J,IACJ5P,WAAMC,SAASuD,QAAQD,EAAU,SAAUE,GACzC,GAAImM,EAAKnM,EAAMtD,KACb,KAAM,IAAImE,OAAM,wBAA2Bb,EAAMtD,IAAM,wDAEzDyP,GAAKnM,EAAMtD,MAAO,MAlGLkV,EAuGZsE,cACLvD,UAAU,EACV9U,KAAM,GACN4W,UAAW,GACXzB,UAAW,IACXsB,QAAS6B,IACTzb,UACAqY,QAAS,GAAI,IACb9W,aAAa,EACbC,aAAa,EACbqY,kBAAkB,EAClBxX,iBAAiB,EACjB2W,eAAgB/B,EAChBsB,YAAatB,EACbyB,OAAQzB,EACR4B,WAAY5B,EACZgC,cAAehC,EACfmC,SAAUnC,EACVsC,aAActC,ENouFlB,IAAIK,GAAmB,WACrBvZ,KMluFA4Z,OACEiB,WAAY,KACZ5Y,QAAQ,EAAA8W,EAAA5R,+BAA8BnH,KAAK2H,MAAM1F,OAAQjC,KAAK2H,MAAMN,SAC9BrH,KAAK2H,MAAMvC,KAAMpF,KAAK2H,MAAMrD,iBAClEoV,SAAS,EACTgB,YAAa,KACbV,UAAW,KACXoB,cAAe,MNquFnB1b,GAAQqC,QMx2FaoX,GN42Ff,SAAUxZ,EAAQD,EAASU,GOp6FjC,GAAAud,GAAAC;;;;;CAOA,WACA,YAIA,SAAAC,KAGA,OAFAC,MAEAvd,EAAA,EAAiBA,EAAAuI,UAAAzG,OAAsB9B,IAAA,CACvC,GAAAuW,GAAAhO,UAAAvI,EACA,IAAAuW,EAAA,CAEA,GAAAiH,SAAAjH,EAEA,eAAAiH,GAAA,WAAAA,EACAD,EAAAzY,KAAAyR,OACI,IAAApU,MAAAyF,QAAA2O,MAAAzU,OAAA,CACJ,GAAA2b,GAAAH,EAAAI,MAAA,KAAAnH,EACAkH,IACAF,EAAAzY,KAAA2Y,OAEI,eAAAD,EACJ,OAAA9Z,KAAA6S,GACAoH,EAAAzd,KAAAqW,EAAA7S,IAAA6S,EAAA7S,IACA6Z,EAAAzY,KAAApB,IAMA,MAAA6Z,GAAAK,KAAA,KA3BA,GAAAD,MAAgBxc,mBA8BhB,KAAA/B,KAAAD,SACAme,EAAA9b,QAAA8b,EACAle,EAAAD,QAAAme,IAGEF,SAEC5X,MAFsB6X,EAAA,WACzB,MAAAC,IACGI,MAAAve,EAAAie,MAAAhe,EAAAD,QAAAke,QPg7FG,SAAUje,EAAQD,EAASU,IQ/9FjC,SAAAgJ,EAAA3J,GAC6DE,EAAAD,QAAAD,EAA4BW,EAAQ,GAAcA,EAAQ,KAGtHJ,EAAA,SAAAoe,EAAAta,GAAmC,YAKpC,SAAAua,GAAAC,EAAA3e,GACA,MAAAA,IAAmBD,YAAc4e,EAAA3e,IAAAD,SAAAC,EAAAD,QAYjC,QAAA6e,GAAAzH,GACA,kBACA,MAAAA,IAqDA,QAAA0H,GAAAC,EAAAC,EAAA/a,EAAAC,EAAAjD,EAAAC,EAAAoT,EAAA2K,GAGA,GAFAC,EAAAF,IAEAD,EAAA,CACA,GAAAI,EACA,QAAA9Y,KAAA2Y,EACAG,EAAA,GAAAzW,OAAA,qIACM,CACN,GAAA0W,IAAAnb,EAAAC,EAAAjD,EAAAC,EAAAoT,EAAA2K,GACAI,EAAA,CACAF,GAAA,GAAAzW,OAAAsW,EAAApI,QAAA,iBACA,MAAAwI,GAAAC,QAEAF,EAAAhe,KAAA,sBAIA,KADAge,GAAAG,YAAA,EACAH,GAmEA,QAAAI,GAAAC,GACA,UAAAA,OAAAnZ,KAAAmZ,EACA,SAAAjH,WAAA,wDAGA,OAAAjX,QAAAke,GAuGA,QAAAC,GAAAC,EAAAvV,EAAAwV,EAAAC,EAAAC,GAEA,OAAAC,KAAAJ,GACA,GAAAA,EAAA1d,eAAA8d,GAAA,CACA,GAAAX,EAIA,KAGAY,GAAA,kBAAAL,GAAAI,GAAA,gHAAmGF,GAAA,cAAAD,EAAAG,QAAAJ,GAAAI,IACnGX,EAAAO,EAAAI,GAAA3V,EAAA2V,EAAAF,EAAAD,EAAA,KAAAK,IACU,MAAAC,GACVd,EAAAc,EAGA,GADAC,IAAAf,eAAAzW,OAAA,2RAAmGkX,GAAA,cAAAD,EAAAG,QAAAX,IACnGA,YAAAzW,UAAAyW,EAAAnM,UAAAmN,KAAA,CAGAA,GAAAhB,EAAAnM,UAAA,CAEA,IAAAxD,GAAAqQ,MAAA,EAEAK,KAAA,yBAAAP,EAAAR,EAAAnM,QAAA,MAAAxD,IAAA,MAqmBA,QAAA4Q,GAAAxW,EAAAyW,GACA,OAAAxf,GAAA,EAAA8B,EAAAiH,EAAAjH,OAAyC9B,EAAA8B,EAAY9B,IACrD,GAAAwf,EAAA9B,MAAA8B,GAAAzW,EAAA/I,KAAA+I,IAAA,MAAAA,GAAA/I,GAIA,QAAAmQ,GAAA2D,GACA,wBAAAA,IAAA,sBAAArT,OAAAS,UAAAwU,SAAAxV,KAAA4T,GAGA,QAAA2L,GAAA/Z,GACA,sBAAAA,KAAAga,MAAAha,GAGA,QAAAia,GAAAvc,GACA,MAAAwc,UAAAxc,EAAA,IAGA,QAAAyc,GAAAzY,EAAA4V,EAAA+B,GACA,GAAA3X,EAAA4V,GACA,UAAAnV,OAAA,gBAAAmV,EAAA,cAAA+B,EAAA,4CAwBA,QAAAe,GAAAC,EAAAC,GACA,MAAAA,GAAA,GAAAA,EAAAC,EAAAF,KAGA,QAAAE,GAAAC,GAGA,OAFA/b,GAAA,GACAgc,GAAA,EACAngB,EAAA,EAAkBA,EAAAkgB,EAAApe,OAAgB9B,IAClCmgB,GACAhc,GAAA+b,EAAAlgB,GAAAogB,cACAD,GAAA,GACM,MAAAD,EAAAlgB,GACNmgB,GAAA,EAEAhc,GAAA+b,EAAAlgB,EAGA,OAAAmE,GA+HA,QAAAkc,GAAApY,EAAAqY,GAUA,MATAC,MACAA,GAAAhB,GAAA,wGAAAiB,GAEA,MAAArQ,GAAAlI,EAAAuY,SAMArQ,EAAAlI,EAAAsY,MAGAtY,EAAAsY,IAAAD,GAIA,QAAAG,GAAAxY,EAAAqY,EAAAI,GACA,GAAAxG,GAAAjS,CACA,IACA,GAAAoY,EAAAnG,EAAAoG,GAAA,QACA,IAAApG,IAAAwG,EAAA,QACAxG,KAAAyG,iBACIzG,EAEJ,UAGA,QAAA0G,GAAA3Y,EAAA4Y,EAAAC,GACA7Y,IAGAA,EAAA8Y,YACA9Y,EAAA8Y,YAAA,KAAAF,EAAAC,GACI7Y,EAAA+Y,iBACJ/Y,EAAA+Y,iBAAAH,EAAAC,GAAA,GAGA7Y,EAAA,KAAA4Y,GAAAC,GAIA,QAAAG,GAAAhZ,EAAA4Y,EAAAC,GACA7Y,IAGAA,EAAAiZ,YACAjZ,EAAAiZ,YAAA,KAAAL,EAAAC,GACI7Y,EAAAkZ,oBACJlZ,EAAAkZ,oBAAAN,EAAAC,GAAA,GAGA7Y,EAAA,KAAA4Y,GAAA,MAIA,QAAAO,GAAAlH,GAGA,GAAAlU,GAAAkU,EAAAmH,aACAC,EAAApH,EAAAqH,cAAAC,YAAAC,iBAAAvH,EAGA,OAFAlU,IAAA2Z,EAAA2B,EAAAI,gBACA1b,GAAA2Z,EAAA2B,EAAAK,mBAIA,QAAAC,GAAA1H,GAGA,GAAAnU,GAAAmU,EAAA2H,YACAP,EAAApH,EAAAqH,cAAAC,YAAAC,iBAAAvH,EAGA,OAFAnU,IAAA4Z,EAAA2B,EAAAQ,iBACA/b,GAAA4Z,EAAA2B,EAAAS,kBAGA,QAAAC,GAAA9H,GACA,GAAAlU,GAAAkU,EAAAmH,aACAC,EAAApH,EAAAqH,cAAAC,YAAAC,iBAAAvH,EAGA,OAFAlU,IAAA2Z,EAAA2B,EAAAW,YACAjc,GAAA2Z,EAAA2B,EAAAY,eAIA,QAAAC,GAAAjI,GACA,GAAAnU,GAAAmU,EAAA2H,YACAP,EAAApH,EAAAqH,cAAAC,YAAAC,iBAAAvH,EAGA,OAFAnU,IAAA4Z,EAAA2B,EAAAc,aACArc,GAAA4Z,EAAA2B,EAAAe,cAKA,QAAAC,GAAAC,EAAuEC,GACvE,GAAAC,GAAAD,MAAAjB,cAAAmB,KACAC,EAAAF,GAAoC3c,KAAA,EAAAD,IAAA,GAAkB2c,EAAAI,uBAKtD,QAAWrgB,EAHXggB,EAAAM,QAAAL,EAAAM,WAAAH,EAAA7c,KAGW/D,EAFXwgB,EAAAQ,QAAAP,EAAAQ,UAAAL,EAAA9c,KAKA,QAAAod,GAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAH,EAAAC,EAAA,KACA,OAAAziB,OAA2Bof,EAAA,YAAAwD,IAAAF,GAG3B,QAAAG,GAAAL,EAAAC,GAEA,MADAE,GAAAH,EAAAC,EAAA,IAGA,QAAAE,GAAA5c,EAAA0c,EAAAK,GACA,GAAAjhB,GAAAkE,EAAAlE,EACAR,EAAA0E,EAAA1E,EAEAqhB,EAAA,aAAA7gB,EAAAihB,EAAA,IAAAzhB,EAAAyhB,EAAA,GACA,IAAAL,EAAA,CAGAC,EAAA,cAFA,oBAAAD,GAAA5gB,EAAA4gB,EAAA5gB,EAAA4gB,EAAA5gB,EAAAihB,IAEA,MADA,oBAAAL,GAAAphB,EAAAohB,EAAAphB,EAAAohB,EAAAphB,EAAAyhB,IACA,IAAAJ,EAEA,MAAAA,GAGA,QAAAK,GAAAhQ,EAAAiQ,GACA,MAAAjQ,GAAAkQ,eAAApE,EAAA9L,EAAAkQ,cAAA,SAAAC,GACA,MAAAF,KAAAE,EAAAF,cACIjQ,EAAAoQ,gBAAAtE,EAAA9L,EAAAoQ,eAAA,SAAAD,GACJ,MAAAF,KAAAE,EAAAF,aAIA,QAAAI,GAAArQ,GACA,MAAAA,GAAAkQ,eAAAlQ,EAAAkQ,cAAA,GAAAlQ,EAAAkQ,cAAA,GAAAD,WACAjQ,EAAAoQ,gBAAApQ,EAAAoQ,eAAA,GAAApQ,EAAAoQ,eAAA,GAAAH,eAAA,GAQA,QAAAK,GAAAC,GACA,GAAAA,EAAA,CACA,GAAAC,GAAAD,EAAAE,eAAA,2BACAD,KACAA,EAAAD,EAAAxI,cAAA,SACAyI,EAAApQ,KAAA,WACAoQ,EAAAjf,GAAA,2BACAif,EAAAE,UAAA,wFACAF,EAAAE,WAAA,mFACAH,EAAAI,qBAAA,WAAAC,YAAAJ,IAEAD,EAAAtB,MAAA4B,EAAAN,EAAAtB,KAAA,0CAGA,QAAA6B,GAAAP,GACA,IACAA,KAAAtB,MAAA8B,EAAAR,EAAAtB,KAAA,yCAEAsB,EAAAS,UAEAT,EAAAS,UAAAC,QAEAC,OAAAC,eAAAC,kBAEI,MAAApR,KAKJ,QAAAqR,KACA,GAAAC,GAAAxc,UAAAzG,OAAA,OAAA0D,KAAA+C,UAAA,GAAAA,UAAA,KAIA,OAAAH,KACA4c,YAAA,QACID,GAGJ,QAAAT,GAAArc,EAAAwT,GACAxT,EAAAgd,UACAhd,EAAAgd,UAAA7Y,IAAAqP,GAEAxT,EAAAwT,UAAAyJ,MAAA,GAAApP,QAAA,YAAA2F,EAAA,cACAxT,EAAAwT,WAAA,IAAAA,GAKA,QAAA+I,GAAAvc,EAAAwT,GACAxT,EAAAgd,UACAhd,EAAAgd,UAAAE,OAAA1J,GAEAxT,EAAAwT,UAAAxT,EAAAwT,UAAA1F,QAAA,GAAAD,QAAA,YAAA2F,EAAA,mBASA,QAAA2J,GAAArJ,EAAAxZ,EAAAR,GAEA,IAAAga,EAAA3U,MAAAzC,OAAA,OAAApC,EAAAR,EAGA,IAAA4C,GAAAoX,EAAA3U,MAAAzC,MAEAA,GAAA,gBAAAA,KAAA0gB,EAAA1gB,EACA,IAAAuV,GAAAoL,EAAAvJ,EAEA,oBAAApX,GAAA,CACA,GAAA4c,GAAArH,EAAAqH,cAEAgE,EAAAhE,EAAAC,YACAgE,MAAA,EAMA,OAJAA,EADA,WAAA7gB,EACAuV,EAAAyG,WAEAY,EAAAkE,cAAA9gB,aAEA4gB,GAAAG,aACA,SAAA7d,OAAA,oBAAAlD,EAAA,+BAEA,IAAAghB,GAAAJ,EAAA9D,iBAAAvH,GACA0L,EAAAL,EAAA9D,iBAAA+D,EAEA7gB,IACAmB,MAAAoU,EAAA2L,WAAAlG,EAAAiG,EAAAxD,aAAAzC,EAAAgG,EAAAG,YACAjgB,KAAAqU,EAAA6L,UAAApG,EAAAiG,EAAA3D,YAAAtC,EAAAgG,EAAAK,WACAC,MAAA9D,EAAAqD,GAAA5D,EAAA1H,KAAA2L,WAAAlG,EAAAiG,EAAAvD,cAAA1C,EAAAgG,EAAAO,aACAzkB,OAAAugB,EAAAwD,GAAApE,EAAAlH,KAAA6L,UAAApG,EAAAiG,EAAA1D,eAAAvC,EAAAgG,EAAAQ,eAYA,MAPA1G,GAAA9a,EAAAshB,SAAA1jB,EAAAgC,KAAAC,IAAAjC,EAAAoC,EAAAshB,QACAxG,EAAA9a,EAAAlD,UAAAM,EAAAwC,KAAAC,IAAAzC,EAAA4C,EAAAlD,SAGAge,EAAA9a,EAAAmB,QAAAvD,EAAAgC,KAAA5C,IAAAY,EAAAoC,EAAAmB,OACA2Z,EAAA9a,EAAAkB,OAAA9D,EAAAwC,KAAA5C,IAAAI,EAAA4C,EAAAkB,OAEAtD,EAAAR,GAGA,QAAAqkB,GAAAC,EAAAC,EAAAC,GAGA,OAFAhiB,KAAAiiB,MAAAF,EAAAD,EAAA,IAAAA,EAAA,GACA9hB,KAAAiiB,MAAAD,EAAAF,EAAA,IAAAA,EAAA,IAIA,QAAAI,GAAA1K,GACA,eAAAA,EAAA3U,MAAAxE,MAAA,MAAAmZ,EAAA3U,MAAAxE,KAGA,QAAA8jB,GAAA3K,GACA,eAAAA,EAAA3U,MAAAxE,MAAA,MAAAmZ,EAAA3U,MAAAxE,KAIA,QAAA+jB,GAAAlT,EAAAmT,EAAAC,GACA,GAAAC,GAAA,gBAAAF,GAAAnD,EAAAhQ,EAAAmT,GAAA,IACA,oBAAAA,KAAAE,EAAA,WACA,IAAA5M,GAAAoL,EAAAuB,GAEArE,EAAAqE,EAAAzf,MAAAob,cAAAtI,EAAAsI,cAAAtI,EAAAqH,cAAAmB,IACA,OAAAJ,GAAAwE,GAAArT,EAAA+O,GAIA,QAAAuE,GAAAhL,EAAAxZ,EAAAR,GACA,GAAAsX,GAAA0C,EAAA1C,MACA2N,GAAAvH,EAAApG,EAAA4N,OACA/M,EAAAoL,EAAAvJ,EAEA,OAAAiL,IAGA9M,OACAgN,OAAA,EAAAC,OAAA,EACAF,MAAA1kB,EAAA6kB,MAAArlB,EACAQ,IAAAR,MAKAmY,OACAgN,OAAA3kB,EAAA8W,EAAA4N,MAAAE,OAAAplB,EAAAsX,EAAA+N,MACAH,MAAA5N,EAAA4N,MAAAG,MAAA/N,EAAA+N,MACA7kB,IAAAR,KAMA,QAAAslB,GAAAtL,EAAAuL,GACA,GAAAC,GAAAxL,EAAA3U,MAAAmgB,KACA,QACArN,KAAAoN,EAAApN,KACA3X,EAAAwZ,EAAA1C,MAAA9W,EAAA+kB,EAAAJ,OAAAK,EACAxlB,EAAAga,EAAA1C,MAAAtX,EAAAulB,EAAAH,OAAAI,EACAL,OAAAI,EAAAJ,OAAAK,EACAJ,OAAAG,EAAAH,OAAAI,EACAN,MAAAlL,EAAA1C,MAAA9W,EACA6kB,MAAArL,EAAA1C,MAAAtX,GAKA,QAAAsjB,GAAA1gB,GACA,OACAmB,KAAAnB,EAAAmB,KACAD,IAAAlB,EAAAkB,IACAogB,MAAAthB,EAAAshB,MACAxkB,OAAAkD,EAAAlD,QAIA,QAAA6jB,GAAAvJ,GACA,GAAA7B,GAAA2D,EAAAyH,YAAAvJ,EACA,KAAA7B,EACA,SAAArS,OAAA,2CAGA,OAAAqS,GAIA,QAAAsN,MA54CA3J,OAAA1c,eAAA,WAAA0c,EAAA,QAAAA,EACAta,OAAApC,eAAA,WAAAoC,EAAA,QAAAA,CA0BA,IAAAkkB,GAAA,YAEAA,GAAAC,YAAA1J,EACAyJ,EAAAE,iBAAA3J,GAAA,GACAyJ,EAAAG,gBAAA5J,GAAA,GACAyJ,EAAAI,gBAAA7J,EAAA,MACAyJ,EAAAK,gBAAA,WACA,MAAAroB,OAEAgoB,EAAAM,oBAAA,SAAAxR,GACA,MAAAA,GAGA,IAAAyR,GAAAP,EAqBApJ,EAAA,SAAAF,IAGAE,GAAA,SAAAF,GACA,OAAA3Y,KAAA2Y,EACA,SAAAtW,OAAA,gDA0BA,IAAAogB,GAAAhK,EASAiK,EAAAF,EAGAG,EAAA,SAAAhK,GACA,OAAAiK,GAAA7f,UAAAzG,OAAAyc,EAAApc,MAAAimB,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAuFA,EAAAD,EAAaC,IACpG9J,EAAA8J,EAAA,GAAA9f,UAAA8f,EAGA,IAAA7J,GAAA,EACArM,EAAA,YAAAgM,EAAApI,QAAA,iBACA,MAAAwI,GAAAC,MAEA,oBAAAlX,UACAA,QAAAgX,MAAAnM,EAEA,KAIA,SAAAtK,OAAAsK,GACM,MAAA5P,KAGN2lB,GAAA,SAAAhK,EAAAC,GACA,OAAA3Y,KAAA2Y,EACA,SAAAtW,OAAA,4EAGA,QAAAsW,EAAA/Z,QAAA,iCAIA8Z,EAAA,CACA,OAAAoK,GAAA/f,UAAAzG,OAAAyc,EAAApc,MAAAmmB,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAA6FA,EAAAD,EAAeC,IAC5GhK,EAAAgK,EAAA,GAAAhgB,UAAAggB,EAGAJ,GAAAzK,UAAAlY,IAAA2Y,GAAAzX,OAAA6X,KAKA,IAAAiK,GAAAN,EAQA7R,EAAA5V,OAAA4V,sBACAlV,EAAAV,OAAAS,UAAAC,eACAsnB,EAAAhoB,OAAAS,UAAAgV,qBAsDAwS,EA5CA,WACA,IACA,IAAAjoB,OAAA4H,OACA,QAMA,IAAAsgB,GAAA,GAAAzhB,QAAA,MAEA,IADAyhB,EAAA,QACA,MAAAloB,OAAAmoB,oBAAAD,GAAA,GACA,QAKA,QADAE,MACA7oB,EAAA,EAAkBA,EAAA,GAAQA,IAC1B6oB,EAAA,IAAA3hB,OAAA4hB,aAAA9oB,KAKA,mBAHAS,OAAAmoB,oBAAAC,GAAAplB,IAAA,SAAA3C,GACA,MAAA+nB,GAAA/nB,KAEA8c,KAAA,IACA,QAIA,IAAAmL,KAIA,OAHA,uBAAAC,MAAA,IAAAjiB,QAAA,SAAAkiB,GACAF,EAAAE,OAGA,yBADAxoB,OAAA0S,KAAA1S,OAAA4H,UAAmC0gB,IAAAnL,KAAA,IAMhC,MAAAsL,GAEH,aAIAzoB,OAAA4H,OAAA,SAAAC,EAAAE,GAKA,OAJA2gB,GAEAC,EADAC,EAAA3K,EAAApW,GAGAjH,EAAA,EAAiBA,EAAAkH,UAAAzG,OAAsBT,IAAA,CACvC8nB,EAAA1oB,OAAA8H,UAAAlH,GAEA,QAAAqC,KAAAylB,GACAhoB,EAAAjB,KAAAipB,EAAAzlB,KACA2lB,EAAA3lB,GAAAylB,EAAAzlB,GAIA,IAAA2S,EAAA,CACA+S,EAAA/S,EAAA8S,EACA,QAAAnpB,GAAA,EAAmBA,EAAAopB,EAAAtnB,OAAoB9B,IACvCyoB,EAAAvoB,KAAAipB,EAAAC,EAAAppB,MACAqpB,EAAAD,EAAAppB,IAAAmpB,EAAAC,EAAAppB,MAMA,MAAAqpB,IAYAC,GAFA,+CAKApK,GAAA+I,EACA5I,GAAAmJ,EACArJ,GAAAmK,GACAhK,MA6CAiK,GAAA3K,EAEA4K,GAAA,SAAAC,EAAAC,GAmBA,QAAAC,GAAAC,GACA,GAAAC,GAAAD,IAAAE,GAAAF,EAAAE,IAAAF,EAAAG,GACA,sBAAAF,GACA,MAAAA,GAiFA,QAAAG,GAAAznB,EAAAR,GAEA,MAAAQ,KAAAR,EAGA,IAAAQ,GAAA,EAAAA,GAAA,EAAAR,EAGAQ,OAAAR,MAYA,QAAAkoB,GAAA9X,GACA1S,KAAA0S,UACA1S,KAAAkP,MAAA,GAKA,QAAAub,GAAAC,GAKA,QAAAC,GAAAC,EAAAjjB,EAAA4V,EAAA+B,EAAAD,EAAAwL,EAAAC,GAIA,GAHAxL,KAAAyL,EACAF,KAAAtN,EAEAuN,IAAAjB,GACA,GAAAI,EAEAzB,GACA,EACA,yLAIU,uBAAA3gB,SAAA,CAEV,GAAAmjB,GAAA1L,EAAA,IAAA/B,GAEA0N,EAAAD,IAEAE,EAAA,IAEAnC,GACA,EACA,8SAKA8B,EACAvL,GAEA2L,EAAAD,IAAA,EACAE,KAIA,aAAAvjB,EAAA4V,GACAqN,EAEA,GAAAJ,GADA,OAAA7iB,EAAA4V,GACA,OAAA8B,EAAA,KAAAwL,EAAA,+BAAAvL,EAAA,8BAEA,OAAAD,EAAA,KAAAwL,EAAA,+BAAAvL,EAAA,oCAEA,KAEAoL,EAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GAhDA,GAAAI,MACAC,EAAA,EAmDAC,EAAAR,EAAAjiB,KAAA,QAGA,OAFAyiB,GAAAP,WAAAD,EAAAjiB,KAAA,SAEAyiB,EAGA,QAAAC,GAAAC,GACA,QAAAX,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,EAAAC,GACA,GAAAQ,GAAA3jB,EAAA4V,EAEA,IADAgO,EAAAD,KACAD,EAMA,UAAAb,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,cAFAW,EAAAF,GAEA,kBAAAhM,EAAA,gBAAA+L,EAAA,KAEA,aAEA,MAAAZ,GAAAC,GAOA,QAAAe,GAAAC,GACA,QAAAhB,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,qBAAAa,GACA,UAAAlB,GAAA,aAAAK,EAAA,mBAAAvL,EAAA,kDAEA,IAAAgM,GAAA3jB,EAAA4V,EACA,KAAA7a,MAAAyF,QAAAmjB,GAAA,CAEA,UAAAd,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,cADAU,EAAAD,GACA,kBAAAhM,EAAA,yBAEA,OAAA/e,GAAA,EAAsBA,EAAA+qB,EAAAjpB,OAAsB9B,IAAA,CAC5C,GAAAse,GAAA6M,EAAAJ,EAAA/qB,EAAA+e,EAAAD,EAAAwL,EAAA,IAAAtqB,EAAA,IAAAspB,GACA,IAAAhL,YAAAzW,OACA,MAAAyW,GAGA,YAEA,MAAA4L,GAAAC,GAeA,QAAAiB,GAAAC,GACA,QAAAlB,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,KAAAljB,EAAA4V,YAAAqO,IAAA,CACA,GAAAC,GAAAD,EAAA/qB,MAAAkqB,CAEA,WAAAP,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,cADAiB,EAAAnkB,EAAA4V,IACA,kBAAA+B,EAAA,4BAAAuM,EAAA,MAEA,YAEA,MAAApB,GAAAC,GAGA,QAAAqB,GAAAC,GAMA,QAAAtB,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GAEA,OADAS,GAAA3jB,EAAA4V,GACAhd,EAAA,EAAsBA,EAAAyrB,EAAA3pB,OAA2B9B,IACjD,GAAAgqB,EAAAe,EAAAU,EAAAzrB,IACA,WAKA,WAAAiqB,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,eAAAS,EAAA,kBAAAhM,EAAA,sBADA2M,KAAAC,UAAAF,GACA,KAdA,MAAAtpB,OAAAyF,QAAA6jB,GAgBAvB,EAAAC,IAfA3B,GAAA,wEACAR,EAAAH,iBAiBA,QAAA+D,GAAAT,GACA,QAAAhB,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,qBAAAa,GACA,UAAAlB,GAAA,aAAAK,EAAA,mBAAAvL,EAAA,mDAEA,IAAAgM,GAAA3jB,EAAA4V,GACA6O,EAAAb,EAAAD,EACA,eAAAc,EACA,UAAA5B,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,cAAAuB,EAAA,kBAAA9M,EAAA,yBAEA,QAAArb,KAAAqnB,GACA,GAAAA,EAAA5pB,eAAAuC,GAAA,CACA,GAAA4a,GAAA6M,EAAAJ,EAAArnB,EAAAqb,EAAAD,EAAAwL,EAAA,IAAA5mB,EAAA4lB,GACA,IAAAhL,YAAAzW,OACA,MAAAyW,GAIA,YAEA,MAAA4L,GAAAC,GAGA,QAAA2B,GAAAC,GAoBA,QAAA5B,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,OAAAtqB,GAAA,EAAsBA,EAAA+rB,EAAAjqB,OAAgC9B,IAAA,CAEtD,UAAAgsB,EADAD,EAAA/rB,IACAoH,EAAA4V,EAAA+B,EAAAD,EAAAwL,EAAAhB,IACA,YAIA,UAAAW,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,kBAAAvL,EAAA,MA3BA,IAAA5c,MAAAyF,QAAAmkB,GAEA,MADAvD,IAAA,4EACAR,EAAAH,eAGA,QAAA7nB,GAAA,EAAoBA,EAAA+rB,EAAAjqB,OAAgC9B,IAAA,CACpD,GAAAgsB,GAAAD,EAAA/rB,EACA,sBAAAgsB,GAQA,MAPAxD,IACA,EACA,6GAEAyD,EAAAD,GACAhsB,GAEAgoB,EAAAH,gBAcA,MAAAqC,GAAAC,GAaA,QAAA+B,GAAAC,GACA,QAAAhC,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,GAAAS,GAAA3jB,EAAA4V,GACA6O,EAAAb,EAAAD,EACA,eAAAc,EACA,UAAA5B,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,cAAAuB,EAAA,kBAAA9M,EAAA,wBAEA,QAAArb,KAAAyoB,GAAA,CACA,GAAAH,GAAAG,EAAAzoB,EACA,IAAAsoB,EAAA,CAGA,GAAA1N,GAAA0N,EAAAjB,EAAArnB,EAAAqb,EAAAD,EAAAwL,EAAA,IAAA5mB,EAAA4lB,GACA,IAAAhL,EACA,MAAAA,IAGA,YAEA,MAAA4L,GAAAC,GAGA,QAAAiC,GAAAD,GACA,QAAAhC,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,GAAAS,GAAA3jB,EAAA4V,GACA6O,EAAAb,EAAAD,EACA,eAAAc,EACA,UAAA5B,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,cAAAuB,EAAA,kBAAA9M,EAAA,wBAIA,IAAAsN,GAAA3D,KAAoCthB,EAAA4V,GAAAmP,EACpC,QAAAzoB,KAAA2oB,GAAA,CACA,GAAAL,GAAAG,EAAAzoB,EACA,KAAAsoB,EACA,UAAA/B,GACA,WAAAnL,EAAA,KAAAwL,EAAA,UAAA5mB,EAAA,kBAAAqb,EAAA,mBACA2M,KAAAC,UAAAvkB,EAAA4V,GAAA,WACA,iBAAA0O,KAAAC,UAAAlrB,OAAA0S,KAAAgZ,GAAA,WAGA,IAAA7N,GAAA0N,EAAAjB,EAAArnB,EAAAqb,EAAAD,EAAAwL,EAAA,IAAA5mB,EAAA4lB,GACA,IAAAhL,EACA,MAAAA,GAGA,YAGA,MAAA4L,GAAAC,GAGA,QAAAmC,GAAAvB,GACA,aAAAA,IACA,aACA,aACA,gBACA,QACA,eACA,OAAAA,CACA,cACA,GAAA5oB,MAAAyF,QAAAmjB,GACA,MAAAA,GAAAwB,MAAAD,EAEA,WAAAvB,GAAAtB,EAAAsB,GACA,QAGA,IAAAlB,GAAAF,EAAAoB,EACA,KAAAlB,EAqBA,QApBA,IACA2C,GADAC,EAAA5C,EAAA3pB,KAAA6qB,EAEA,IAAAlB,IAAAkB,EAAA3gB,SACA,OAAAoiB,EAAAC,EAAAC,QAAAC,MACA,IAAAL,EAAAE,EAAApjB,OACA,aAKA,QAAAojB,EAAAC,EAAAC,QAAAC,MAAA,CACA,GAAAriB,GAAAkiB,EAAApjB,KACA,IAAAkB,IACAgiB,EAAAhiB,EAAA,IACA,SASA,QACA,SACA,UAIA,QAAAsiB,GAAAf,EAAAd,GAEA,iBAAAc,IAKA,WAAAd,EAAA,kBAKA,kBAAA9U,SAAA8U,YAAA9U,SAQA,QAAA+U,GAAAD,GACA,GAAAc,SAAAd,EACA,OAAA5oB,OAAAyF,QAAAmjB,GACA,QAEAA,YAAAjV,QAIA,SAEA8W,EAAAf,EAAAd,GACA,SAEAc,EAKA,QAAAZ,GAAAF,GACA,YAAAA,GAAA,OAAAA,EACA,SAAAA,CAEA,IAAAc,GAAAb,EAAAD,EACA,eAAAc,EAAA,CACA,GAAAd,YAAA8B,MACA,YACQ,IAAA9B,YAAAjV,QACR,eAGA,MAAA+V,GAKA,QAAAI,GAAA7iB,GACA,GAAAyK,GAAAoX,EAAA7hB,EACA,QAAAyK,GACA,YACA,aACA,YAAAA,CACA,eACA,WACA,aACA,WAAAA,CACA,SACA,MAAAA,IAKA,QAAA0X,GAAAR,GACA,MAAAA,GAAA9X,aAAA8X,EAAA9X,YAAA3S,KAGAyqB,EAAA9X,YAAA3S,KAFAkqB,EAjgBA,GAAAV,GAAA,kBAAA7T,gBAAAwW,SACA1C,EAAA,aAsEAS,EAAA,gBAIAsC,GACA/jB,MAAA8hB,EAAA,SACA/N,KAAA+N,EAAA,WACA/W,KAAA+W,EAAA,YACAhO,OAAAgO,EAAA,UACA7pB,OAAA6pB,EAAA,UACAhf,OAAAgf,EAAA,UACA1T,OAAA0T,EAAA,UAEAkC,IAyHA,WACA,MAAA7C,GAAAlC,EAAAH,oBAzHA9K,QAAAmO,EACA8B,QAgJA,WACA,QAAA7C,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,GAAAS,GAAA3jB,EAAA4V,EACA,KAAAyM,EAAAsB,GAAA,CAEA,UAAAd,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,cADAU,EAAAD,GACA,kBAAAhM,EAAA,sCAEA,YAEA,MAAAmL,GAAAC,MAxJA8C,WAAA7B,EACAlR,KAkPA,WACA,QAAAiQ,GAAA/iB,EAAA4V,EAAA+B,EAAAD,EAAAwL,GACA,MAAAgC,GAAAllB,EAAA4V,IAGA,KAFA,GAAAiN,GAAA,WAAAnL,EAAA,KAAAwL,EAAA,kBAAAvL,EAAA,4BAIA,MAAAmL,GAAAC,MAxPA+C,SAAAtB,EACAuB,MAAA3B,EACA4B,UAAAtB,EACAuB,MAAAnB,EACAoB,MAAAlB,EA4aA,OA3YAnC,GAAA/oB,UAAA2G,MAAA3G,UAwYA4rB,EAAAlO,eAAA2K,GACAuD,EAAAlQ,UAAAkQ,EAEAA,GAGAnQ,GAAAmB,EAAA,SAAA1e,GASA,GAAAmuB,GAAA,kBAAAtX,SACAA,OAAAuX,KACAvX,OAAAuX,IAAA,kBACA,MAEA/D,EAAA,SAAAzoB,GACA,sBAAAA,IACA,OAAAA,GACAA,EAAAysB,WAAAF,EAMAnuB,GAAAD,QAAAqqB,GAAAC,GADA,KAKAiE,GAAA5P,EAAA,SAAA1e;;;;;CAQA,WAIA,QAAAke,KAGA,OAFAC,MAEAvd,EAAA,EAAkBA,EAAAuI,UAAAzG,OAAsB9B,IAAA,CACxC,GAAAuW,GAAAhO,UAAAvI,EACA,IAAAuW,EAAA,CAEA,GAAAiH,SAAAjH,EAEA,eAAAiH,GAAA,WAAAA,EACAD,EAAAzY,KAAAyR,OACK,IAAApU,MAAAyF,QAAA2O,GACLgH,EAAAzY,KAAAwY,EAAAI,MAAA,KAAAnH,QACK,eAAAiH,EACL,OAAA9Z,KAAA6S,GACAoH,EAAAzd,KAAAqW,EAAA7S,IAAA6S,EAAA7S,IACA6Z,EAAAzY,KAAApB,IAMA,MAAA6Z,GAAAK,KAAA,KAxBA,GAAAD,MAAiBxc,cA2BjB/B,GAAAD,QACAC,EAAAD,QAAAme,EAOAqH,OAAArH,kBA8BAqQ,IAAA,yBA2CArK,GA1CA,WACA,GAAAvD,GAAAxX,UAAAzG,OAAA,OAAA0D,KAAA+C,UAAA,GAAAA,UAAA,cAKA,uBAAAoc,aAAA,KAAAA,OAAAiJ,SAAA,QAEA,IAAArR,GAAAoI,OAAAiJ,SAAAC,gBAAAtR,KAEA,IAAAwD,IAAAxD,GAAA,QAEA,QAAAvc,GAAA,EAAkBA,EAAA2tB,GAAA7rB,OAAqB9B,IACvC,GAAA8f,EAAAC,EAAA4N,GAAA3tB,KAAAuc,GAAA,MAAAoR,IAAA3tB,EAGA,aA4BA8tB,GAAA,SAAAtW,EAAAC,GACA,KAAAD,YAAAC,IACA,SAAAC,WAAA,sCAIAqW,GAAA,WACA,QAAAC,GAAA1lB,EAAAlB,GACA,OAAApH,GAAA,EAAoBA,EAAAoH,EAAAtF,OAAkB9B,IAAA,CACtC,GAAAiuB,GAAA7mB,EAAApH,EACAiuB,GAAArtB,WAAAqtB,EAAArtB,aAAA,EACAqtB,EAAAttB,cAAA,EACA,SAAAstB,OAAAhW,UAAA,GACAxX,OAAAC,eAAA4H,EAAA2lB,EAAAvqB,IAAAuqB,IAIA,gBAAAxW,EAAAyW,EAAAC,GAGA,MAFAD,IAAAF,EAAAvW,EAAAvW,UAAAgtB,GACAC,GAAAH,EAAAvW,EAAA0W,GACA1W,MAIA/W,GAAA,SAAAa,EAAAmC,EAAA0F,GAYA,MAXA1F,KAAAnC,GACAd,OAAAC,eAAAa,EAAAmC,GACA0F,QACAxI,YAAA,EACAD,cAAA,EACAsX,UAAA,IAGA1W,EAAAmC,GAAA0F,EAGA7H,GAGA6G,GAAA3H,OAAA4H,QAAA,SAAAC,GACA,OAAAtI,GAAA,EAAkBA,EAAAuI,UAAAzG,OAAsB9B,IAAA,CACxC,GAAAwI,GAAAD,UAAAvI,EAEA,QAAA0D,KAAA8E,GACA/H,OAAAS,UAAAC,eAAAjB,KAAAsI,EAAA9E,KACA4E,EAAA5E,GAAA8E,EAAA9E,IAKA,MAAA4E,IAGA8lB,GAAA,SAAAtW,EAAAC,GACA,qBAAAA,IAAA,OAAAA,EACA,SAAAL,WAAA,iEAAAK,GAGAD,GAAA5W,UAAAT,OAAAuX,OAAAD,KAAA7W,WACA+R,aACA7J,MAAA0O,EACAlX,YAAA,EACAqX,UAAA,EACAtX,cAAA,KAGAoX,IAAAtX,OAAAyX,eAAAzX,OAAAyX,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,IAGAsW,GAAA,SAAA7uB,EAAAU,GACA,IAAAV,EACA,SAAAoY,gBAAA,4DAGA,QAAA1X,GAAA,gBAAAA,IAAA,kBAAAA,GAAAV,EAAAU,GAGAouB,GAAA,WACA,QAAAC,GAAAC,EAAAxuB,GACA,GAAAyuB,MACAC,GAAA,EACAC,GAAA,EACAC,MAAAppB,EAEA,KACA,OAAAqpB,GAAAC,EAAAN,EAAAvY,OAAAwW,cAAgDiC,GAAAG,EAAAC,EAAApC,QAAAC,QAChD8B,EAAA3pB,KAAA+pB,EAAAzlB,QAEApJ,GAAAyuB,EAAA3sB,SAAA9B,GAH+E0uB,GAAA,IAKzE,MAAAxF,GACNyF,GAAA,EACAC,EAAA1F,EACM,QACN,KACAwF,GAAAI,EAAA,QAAAA,EAAA,SACQ,QACR,GAAAH,EAAA,KAAAC,IAIA,MAAAH,GAGA,gBAAAD,EAAAxuB,GACA,GAAAmC,MAAAyF,QAAA4mB,GACA,MAAAA,EACM,IAAAvY,OAAAwW,WAAAhsB,QAAA+tB,GACN,MAAAD,GAAAC,EAAAxuB,EAEA,UAAA0X,WAAA,4DAQA6I,GAAA,GAqVAwO,IACAC,OACAC,MAAA,aACAC,KAAA,YACAC,KAAA,YAEAC,OACAH,MAAA,YACAC,KAAA,YACAC,KAAA,YAKAE,GAAAN,GAAAK,MA+CAE,GAAA,SAAAzW,GAGA,QAAAyW,KACA,GAAA1pB,GAEA2pB,EAAAxW,EAAAyW,CAEA1B,IAAAruB,KAAA6vB,EAEA,QAAAlH,GAAA7f,UAAAzG,OAAAyc,EAAApc,MAAAimB,GAAAC,EAAA,EAAoEA,EAAAD,EAAaC,IACjF9J,EAAA8J,GAAA9f,UAAA8f,EAGA,OAAAkH,GAAAxW,EAAAsV,GAAA5uB,MAAAmG,EAAA0pB,EAAAnX,WAAA1X,OAAAgvB,eAAAH,IAAApvB,KAAAwd,MAAA9X,GAAAnG,MAAAiH,OAAA6X,KAAAxF,EAAAM,OACAqW,UAAA,EAEAzI,MAAA0I,IAAAvI,MAAAuI,IACA/I,gBAAA,MACM7N,EAAA6W,gBAAA,SAAAnc,GAKN,GAHAsF,EAAA3R,MAAAyoB,YAAApc,IAGAsF,EAAA3R,MAAA0oB,eAAA,gBAAArc,GAAAsc,QAAA,IAAAtc,EAAAsc,OAAA,QAGA,IAAAC,GAAAnS,EAAAyH,YAAAvM,EACA,KAAAiX,MAAAzO,gBAAAyO,EAAAzO,cAAAmB,KACA,SAAA7a,OAAA,4CAEA,IAAA0Z,GAAAyO,EAAAzO,aAIA,MAAAxI,EAAA3R,MAAA6oB,YAAAxc,EAAAnL,iBAAAiZ,GAAAC,YAAA0O,OAAAnX,EAAA3R,MAAA8U,SAAAuE,EAAAhN,EAAAnL,OAAAyQ,EAAA3R,MAAA8U,OAAA8T,IAAAjX,EAAA3R,MAAA6U,QAAAwE,EAAAhN,EAAAnL,OAAAyQ,EAAA3R,MAAA6U,OAAA+T,IAAA,CAOA,GAAApJ,GAAA9C,EAAArQ,EACAsF,GAAAG,UAAuB0N,mBAGvB,IAAArgB,GAAAogB,EAAAlT,EAAAmT,EAAA7N,EACA,UAAAxS,EAAA,CACA,GAAAhE,GAAAgE,EAAAhE,EACAR,EAAAwE,EAAAxE,EAIAouB,EAAApJ,EAAAhO,EAAAxW,EAAAR,EAGAylB,GAAA,UAAAzO,EAAA3R,MAAAgpB,UAEA,IADArX,EAAA3R,MAAAgpB,QAAA3c,EAAA0c,KAKApX,EAAA3R,MAAAipB,sBAAAtM,EAAAxC,GAKAxI,EAAAG,UACAwW,UAAA,EAEAzI,MAAA1kB,EACA6kB,MAAArlB,IAMA6e,EAAAW,EAAA8N,GAAAH,KAAAnW,EAAAuX,YACA1P,EAAAW,EAAA8N,GAAAF,KAAApW,EAAAwX,oBACMxX,EAAAuX,WAAA,SAAA7c,GAGN,cAAAA,EAAAI,MAAAJ,EAAA+c,gBAGA,IAAAjqB,GAAAogB,EAAAlT,EAAAsF,EAAAM,MAAAuN,gBAAA7N,EACA,UAAAxS,EAAA,CACA,GAAAhE,GAAAgE,EAAAhE,EACAR,EAAAwE,EAAAxE,CAIA,IAAAI,MAAAyF,QAAAmR,EAAA3R,MAAAif,MAAA,CACA,GAAAoK,GAAAluB,EAAAwW,EAAAM,MAAA4N,MACAyJ,EAAA3uB,EAAAgX,EAAAM,MAAA+N,MAEAuJ,EAAAvK,EAAArN,EAAA3R,MAAAif,KAAAoK,EAAAC,GAEAE,EAAAtC,GAAAqC,EAAA,EAKA,IAHAF,EAAAG,EAAA,GACAF,EAAAE,EAAA,IAEAH,IAAAC,EAAA,MACAnuB,GAAAwW,EAAAM,MAAA4N,MAAAwJ,EAAA1uB,EAAAgX,EAAAM,MAAA+N,MAAAsJ,EAGA,GAAAP,GAAApJ,EAAAhO,EAAAxW,EAAAR,EAIA,SADAgX,EAAA3R,MAAAgT,OAAA3G,EAAA0c,GAgBApX,EAAAG,UACA+N,MAAA1kB,EACA6kB,MAAArlB,QAhBA,KAEAgX,EAAAwX,eAAA,GAAAM,YAAA,YACU,MAAA3H,GAEV,GAAArI,GAAA+M,SAAAkD,YAAA,cAGAjQ,GAAAkQ,eAAA,gBAAApM,OAAA,8BACA5L,EAAAwX,eAAA1P,MASM9H,EAAAwX,eAAA,SAAA9c,GACN,GAAAsF,EAAAM,MAAAqW,SAAA,CAEA,GAAAnpB,GAAAogB,EAAAlT,EAAAsF,EAAAM,MAAAuN,gBAAA7N,EACA,UAAAxS,EAAA,CACA,GAAAhE,GAAAgE,EAAAhE,EACAR,EAAAwE,EAAAxE,EAEAouB,EAAApJ,EAAAhO,EAAAxW,EAAAR,GAEAiuB,EAAAnS,EAAAyH,YAAAvM,EACAiX,IAEAjX,EAAA3R,MAAAipB,sBAAA9L,EAAAyL,EAAAzO,eAIAxI,EAAAG,UACAwW,UAAA,EACAzI,MAAA0I,IACAvI,MAAAuI,MAIA5W,EAAA3R,MAAA4pB,OAAAvd,EAAA0c,GAEAH,IACA/O,EAAA+O,EAAAzO,cAAA8N,GAAAH,KAAAnW,EAAAuX,YACArP,EAAA+O,EAAAzO,cAAA8N,GAAAF,KAAApW,EAAAwX,oBAEMxX,EAAA8W,YAAA,SAAApc,GAGN,MAFA4b,IAAAN,GAAAK,MAEArW,EAAA6W,gBAAAnc,IACMsF,EAAAkY,UAAA,SAAAxd,GAGN,MAFA4b,IAAAN,GAAAK,MAEArW,EAAAwX,eAAA9c,IACMsF,EAAAmY,aAAA,SAAAzd,GAIN,MAFA4b,IAAAN,GAAAC,MAEAjW,EAAA6W,gBAAAnc,IACMsF,EAAAoY,WAAA,SAAA1d,GAIN,MAFA4b,IAAAN,GAAAC,MAEAjW,EAAAwX,eAAA9c,IAnKA+b,EAoKMD,EAAAlB,GAAAtV,EAAAyW,GAuCN,MAxNApB,IAAAkB,EAAAzW,GAoLAkV,GAAAuB,IACA5rB,IAAA,uBACA0F,MAAA,WAGA,GAAA4mB,GAAAnS,EAAAyH,YAAA7lB,KACA,IAAAuwB,EAAA,CACA,GAAAzO,GAAAyO,EAAAzO,aAEAN,GAAAM,EAAAwN,GAAAK,MAAAF,KAAAzvB,KAAA6wB,YACArP,EAAAM,EAAAwN,GAAAC,MAAAE,KAAAzvB,KAAA6wB,YACArP,EAAAM,EAAAwN,GAAAK,MAAAD,KAAA1vB,KAAA8wB,gBACAtP,EAAAM,EAAAwN,GAAAC,MAAAG,KAAA1vB,KAAA8wB,gBACA9wB,KAAA2H,MAAAipB,sBAAA9L,EAAAhD,OAOA7d,IAAA,SACA0F,MAAA,WAGA,MAAA7F,GAAA6tB,aAAA7tB,EAAAC,SAAA6tB,KAAA5xB,KAAA2H,MAAAN,WACAyV,MAAAuI,EAAArlB,KAAA2H,MAAAN,SAAAM,MAAAmV,OAIAsT,YAAApwB,KAAAowB,YACAqB,aAAAzxB,KAAAyxB,aACAD,UAAAxxB,KAAAwxB,UACAE,WAAA1xB,KAAA0xB,iBAIA7B,GACE/rB,EAAAkZ,UAEF6S,IAAA5S,YAAA,gBACA4S,GAAA3S,WAOAmT,cAAAnT,GAAAG,KAMAmT,SAAAtT,GAAAG,KAOAuT,qBAAA1T,GAAAG,KAMA0F,aAAA,SAAApb,EAAA4V,GACA,GAAA5V,EAAA4V,IAAA,IAAA5V,EAAA4V,GAAAhI,SACA,SAAAnN,OAAA,iDAOAwe,KAAA1J,GAAAI,QAAAJ,GAAAE,QAMA0K,MAAA5K,GAAAE,OAsBAX,OAAAS,GAAA9Q,OAsBAoQ,OAAAU,GAAA9Q,OAMAukB,QAAAzT,GAAA7I,KAMAsG,OAAAuC,GAAA7I,KAMAkd,OAAArU,GAAA7I,KAMA+b,YAAAlT,GAAA7I,KAKA2H,UAAAoE,EACAtD,MAAAsD,EACA3Z,UAAA2Z,GAEAyP,GAAApS,cACA4S,eAAA,EACA7T,OAAA,KACAgU,UAAA,EACAI,sBAAA,EACA7N,aAAA,KACAtG,OAAA,KACAmK,KAAA,KACAngB,UAAA,KACAkqB,QAAA,aACAhW,OAAA,aACA4W,OAAA,aACAnB,YAAA,aA+BA,IAAAyB,IAAA,SAAAzY,GAGA,QAAAyY,GAAAlqB,GACA0mB,GAAAruB,KAAA6xB,EAEA,IAAAvY,GAAAsV,GAAA5uB,MAAA6xB,EAAAnZ,WAAA1X,OAAAgvB,eAAA6B,IAAApxB,KAAAT,KAAA2H,GA4GA,OA1GA2R,GAAAkB,YAAA,SAAAxG,EAAA6T,GAKA,QAFAvO,EAAA3R,MAAAgpB,QAAA3c,EAAA4T,EAAAtO,EAAAuO,IAEA,QAEAvO,GAAAG,UAAuBwW,UAAA,EAAA6B,SAAA,KAGvBxY,EAAAqB,OAAA,SAAA3G,EAAA6T,GACA,IAAAvO,EAAAM,MAAAqW,SAAA,QAEA,IAAA8B,GAAAnK,EAAAtO,EAAAuO,GAEAmK,GACAlvB,EAAAivB,EAAAjvB,EACAR,EAAAyvB,EAAAzvB,EAIA,IAAAgX,EAAA3R,MAAAzC,OAAA,CAEA,GAAA+sB,GAAAD,EAAAlvB,EACAovB,EAAAF,EAAA1vB,CAMA0vB,GAAAlvB,GAAAwW,EAAAM,MAAAuY,OACAH,EAAA1vB,GAAAgX,EAAAM,MAAAwY,MAIA,IAAAC,GAAA1M,EAAArM,EAAA0Y,EAAAlvB,EAAAkvB,EAAA1vB,GACAgwB,EAAAzD,GAAAwD,EAAA,GACAE,EAAAD,EAAA,GACAE,EAAAF,EAAA,EAEAN,GAAAlvB,EAAAyvB,EACAP,EAAA1vB,EAAAkwB,EAGAR,EAAAG,OAAA7Y,EAAAM,MAAAuY,QAAAF,EAAAD,EAAAlvB,GACAkvB,EAAAI,OAAA9Y,EAAAM,MAAAwY,QAAAF,EAAAF,EAAA1vB,GAGAyvB,EAAAjvB,EAAAkvB,EAAAlvB,EACAivB,EAAAzvB,EAAA0vB,EAAA1vB,EACAyvB,EAAAtK,OAAAuK,EAAAlvB,EAAAwW,EAAAM,MAAA9W,EACAivB,EAAArK,OAAAsK,EAAA1vB,EAAAgX,EAAAM,MAAAtX,EAKA,QADAgX,EAAA3R,MAAAgT,OAAA3G,EAAA+d,GACA,QAEAzY,GAAAG,SAAAuY,IAGA1Y,EAAAwB,WAAA,SAAA9G,EAAA6T,GACA,IAAAvO,EAAAM,MAAAqW,SAAA,QAIA,SADA3W,EAAA3R,MAAA4pB,OAAAvd,EAAA4T,EAAAtO,EAAAuO,IACA,QAEA,IAAAmK,IACA/B,UAAA,EACAkC,OAAA,EACAC,OAAA,EAMA,IADA/uB,QAAAiW,EAAA3R,MAAAb,UACA,CACA,GAAA2rB,GAAAnZ,EAAA3R,MAAAb,SACA4rB,EAAAD,EAAA3vB,EACA6vB,EAAAF,EAAAnwB,CAEA0vB,GAAAlvB,EAAA4vB,EACAV,EAAA1vB,EAAAqwB,EAGArZ,EAAAG,SAAAuY,IAGA1Y,EAAAM,OAEAqW,UAAA,EAGA6B,SAAA,EAGAhvB,EAAA6E,EAAAb,SAAAa,EAAAb,SAAAhE,EAAA6E,EAAAirB,gBAAA9vB,EACAR,EAAAqF,EAAAb,SAAAa,EAAAb,SAAAxE,EAAAqF,EAAAirB,gBAAAtwB,EAGA6vB,OAAA,EAAAC,OAAA,EAGAS,cAAA,GAEAvZ,EAwFA,MAzMAqV,IAAAkD,EAAAzY,GAoHAkV,GAAAuD,IACA5tB,IAAA,qBACA0F,MAAA,YACA3J,KAAA2H,MAAAb,UAAA9G,KAAA2H,MAAAgT,QAAA3a,KAAA2H,MAAA4pB,QAEA1pB,QAAAC,KAAA,gOAIA7D,IAAA,oBACA0F,MAAA,eAEA,KAAAub,OAAA4N,YAAA1U,EAAAyH,YAAA7lB,eAAAklB,QAAA4N,YACA9yB,KAAAyZ,UAAwBoZ,cAAA,OAIxB5uB,IAAA,4BACA0F,MAAA,SAAAmQ,IAEAA,EAAAhT,UAAA9G,KAAA2H,MAAAb,UAAAgT,EAAAhT,SAAAhE,IAAA9C,KAAA2H,MAAAb,SAAAhE,GAAAgX,EAAAhT,SAAAxE,IAAAtC,KAAA2H,MAAAb,SAAAxE,GACAtC,KAAAyZ,UAAwB3W,EAAAgX,EAAAhT,SAAAhE,EAAAR,EAAAwX,EAAAhT,SAAAxE,OAIxB2B,IAAA,uBACA0F,MAAA,WACA3J,KAAAyZ,UAAsBwW,UAAA,OAGtBhsB,IAAA,SACA0F,MAAA,WACA,GAAAopB,GAEAjW,KACAkW,EAAA,KAGAC,EAAA5vB,QAAArD,KAAA2H,MAAAb,UACAwV,GAAA2W,GAAAjzB,KAAA4Z,MAAAqW,SAEAnpB,EAAA9G,KAAA2H,MAAAb,UAAA9G,KAAA2H,MAAAirB,gBACAM,GAEApwB,EAAAkkB,EAAAhnB,OAAAsc,EAAAtc,KAAA4Z,MAAA9W,EAAAgE,EAAAhE,EAGAR,EAAA2kB,EAAAjnB,OAAAsc,EAAAtc,KAAA4Z,MAAAtX,EAAAwE,EAAAxE,EAIAtC,MAAA4Z,MAAAiZ,aACAG,EAAAlP,EAAAoP,EAAAlzB,KAAA2H,MAAA+b,gBAMA5G,EAAA0G,EAAA0P,EAAAlzB,KAAA2H,MAAA+b,eAGA,IAAA9H,GAAA5b,KAAA2H,MACAwrB,EAAAvX,EAAAuX,iBACAC,EAAAxX,EAAAwX,yBACAC,EAAAzX,EAAAyX,wBAGAhsB,EAAAvD,EAAAC,SAAA6tB,KAAA5xB,KAAA2H,MAAAN,UAGA2U,EAAAiS,GAAA5mB,EAAAM,MAAAqU,WAAA,GAAAmX,GAAAJ,KAAqG9xB,GAAA8xB,EAAAK,EAAApzB,KAAA4Z,MAAAqW,UAAAhvB,GAAA8xB,EAAAM,EAAArzB,KAAA4Z,MAAAkY,SAAAiB,GAIrG,OAAAjvB,GAAAiY,cACA8T,GACAlnB,MAAoB3I,KAAA2H,OAAegpB,QAAA3wB,KAAAwa,YAAAG,OAAA3a,KAAA2a,OAAA4W,OAAAvxB,KAAA8a,aACnChX,EAAA6tB,aAAAtqB,GACA2U,YACAc,MAAAnU,MAA6BtB,EAAAM,MAAAmV,SAC7BrW,UAAAusB,SAKAnB,GACE/tB,EAAAkZ,UAqIF,OAnIA6U,IAAA5U,YAAA,YACA4U,GAAA3U,UAAAvU,MAAkCknB,GAAA3S,WAelC/Z,KAAA+Z,GAAAwQ,OAAA,wBA4BAxoB,OAAAgY,GAAAyQ,WAAAzQ,GAAA0Q,OACAvnB,KAAA6W,GAAAE,OACAoJ,MAAAtJ,GAAAE,OACAhX,IAAA8W,GAAAE,OACApb,OAAAkb,GAAAE,SACIF,GAAA9Q,OAAA8Q,GAAAwQ,QAAA,MAEJyF,iBAAAjW,GAAA9Q,OACAgnB,yBAAAlW,GAAA9Q,OACAinB,wBAAAnW,GAAA9Q,OAmBAwmB,gBAAA1V,GAAA0Q,OACA9qB,EAAAoa,GAAAE,OACA9a,EAAA4a,GAAAE,SAEAsG,eAAAxG,GAAA0Q,OACA9qB,EAAAoa,GAAAyQ,WAAAzQ,GAAAE,OAAAF,GAAA9Q,SACA9J,EAAA4a,GAAAyQ,WAAAzQ,GAAAE,OAAAF,GAAA9Q,WAuBAtF,SAAAoW,GAAA0Q,OACA9qB,EAAAoa,GAAAE,OACA9a,EAAA4a,GAAAE,SAMApB,UAAAoE,EACAtD,MAAAsD,EACA3Z,UAAA2Z,IAEAyR,GAAApU,aAAA9U,MAAqCknB,GAAApS,cACrCta,KAAA,OACA+B,QAAA,EACAiuB,iBAAA,kBACAC,yBAAA,2BACAC,wBAAA,0BACAT,iBAAqB9vB,EAAA,EAAAR,EAAA,GACrBwE,SAAA,KACAghB,MAAA,IAOA+J,GAAA9vB,QAAA8vB,GACAA,GAAAhC,iBAEAgC,MRy+FM,SAAUlyB,EAAQD,GS9oKxBC,EAAAD,QAAAQ,GTopKM,SAAUP,EAAQD,EAASU,GAEjC,YUloKA,SAAAyB,GAAAC,GAAsC,MAAAA,MAAAR,WAAAQ,GAAuCC,QAAAD,GAE7E,QAAAwxB,GAAAxxB,EAAA4R,GAA8C,GAAA7K,KAAiB,QAAAtI,KAAAuB,GAAqB4R,EAAA/O,QAAApE,IAAA,GAAoCS,OAAAS,UAAAC,eAAAjB,KAAAqB,EAAAvB,KAA6DsI,EAAAtI,GAAAuB,EAAAvB,GAAsB,OAAAsI,GAE3M,QAAAiP,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAAC,GAAAnY,EAAAU,GAAiD,IAAAV,EAAa,SAAAoY,gBAAA,4DAAyF,QAAA1X,GAAA,gBAAAA,IAAA,kBAAAA,GAAAV,EAAAU,EAEvJ,QAAA2X,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAL,WAAA,iEAAAK,GAAuGD,GAAA5W,UAAAT,OAAAuX,OAAAD,KAAA7W,WAAyE+R,aAAe7J,MAAA0O,EAAAlX,YAAA,EAAAqX,UAAA,EAAAtX,cAAA,KAA6EoX,IAAAtX,OAAAyX,eAAAzX,OAAAyX,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,GA1BrX5Y,EAAA4B,YAAA,CAEA,IAAAqH,GAAA3H,OAAA4H,QAAA,SAAAC,GAAmD,OAAAtI,GAAA,EAAgBA,EAAAuI,UAAAzG,OAAsB9B,IAAA,CAAO,GAAAwI,GAAAD,UAAAvI,EAA2B,QAAA0D,KAAA8E,GAA0B/H,OAAAS,UAAAC,eAAAjB,KAAAsI,EAAA9E,KAAyD4E,EAAA5E,GAAA8E,EAAA9E,IAAiC,MAAA4E,IAE/OI,EAAa7I,EAAQ,GAErB8I,EAAArH,EAAAoH,GAEA0P,EAAiBvY,EAAQ,GAEzBwY,EAAA/W,EAAA8W,GAEA4a,EAAsBnzB,EAAQ,GAE9BozB,EAAoBpzB,EAAQ,IAE5BqzB,EAAA5xB,EAAA2xB,GAYAE,EAAA,SAAAta,GAGA,QAAAsa,KACA,GAAA5D,GAAAxW,EAAAyW,CAEAjY,GAAA9X,KAAA0zB,EAEA,QAAA/K,GAAA7f,UAAAzG,OAAAyc,EAAApc,MAAAimB,GAAAC,EAAA,EAAmEA,EAAAD,EAAaC,IAChF9J,EAAA8J,GAAA9f,UAAA8f,EAGA,OAAAkH,GAAAxW,EAAApB,EAAAlY,KAAAoZ,EAAA3Y,KAAAwd,MAAA7E,GAAApZ,MAAAiH,OAAA6X,KAAAxF,EAAAM,OACA+Z,UAAA,EACArtB,MAAAgT,EAAA3R,MAAArB,MAAAC,OAAA+S,EAAA3R,MAAApB,OACAqtB,OAAA,EAAAC,OAAA,GAHA9D,EAIKD,EAAA5X,EAAAoB,EAAAyW,GAiML,MAhNA3X,GAAAsb,EAAAta,GAkBAsa,EAAAjyB,UAAAoY,0BAAA,SAAAC,GAEA9Z,KAAA4Z,MAAA+Z,UAAA7Z,EAAAxT,QAAAtG,KAAA2H,MAAArB,OAAAwT,EAAAvT,SAAAvG,KAAA2H,MAAApB,QACAvG,KAAAyZ,UACAnT,MAAAwT,EAAAxT,MACAC,OAAAuT,EAAAvT,UAKAmtB,EAAAjyB,UAAAqyB,gBAAA,SAAAxtB,EAAAC,EAAAwtB,GAGA,MAFAxtB,GAAAD,EAAAytB,EACAztB,EAAAC,EAAAwtB,GACAztB,EAAAC,IAMAmtB,EAAAjyB,UAAAuyB,eAAA,SAAA1tB,EAAAC,GACA,GAAAJ,IAAAnG,KAAA2H,MAAAssB,eAAAj0B,KAAA2H,MAAAusB,gBACAnvB,EAAAoB,EAAA,GACAjE,EAAAiE,EAAA,EAGA,IAAAnG,KAAA2H,MAAAmsB,gBAAA,CACA,GAAAK,GAAAn0B,KAAA4Z,MAAAtT,MAAAtG,KAAA4Z,MAAArT,MACAA,GAAAD,EAAA6tB,EACA7tB,EAAAC,EAAA4tB,EAGA,IAAApvB,IAAA7C,EAAA,OAAAoE,EAAAC,EAEA,IAAAoV,GAAArV,EACA8tB,EAAA7tB,EAMAgV,EAAAvb,KAAA4Z,MACAga,EAAArY,EAAAqY,OACAC,EAAAtY,EAAAsY,MAqBA,OAnBAvtB,IAAAstB,EACArtB,GAAAstB,EAEA9uB,IACAuB,EAAAxB,KAAA5C,IAAA6C,EAAA,GAAAuB,GACAC,EAAAzB,KAAA5C,IAAA6C,EAAA,GAAAwB,IAEArE,IACAoE,EAAAxB,KAAAC,IAAA7C,EAAA,GAAAoE,GACAC,EAAAzB,KAAAC,IAAA7C,EAAA,GAAAqE,IAIAqtB,GAAAjY,EAAArV,EACAutB,GAAAO,EAAA7tB,EACAqtB,IAAA5zB,KAAA4Z,MAAAga,QAAAC,IAAA7zB,KAAA4Z,MAAAia,QACA7zB,KAAAyZ,UAAqBma,SAAAC,YAGrBvtB,EAAAC,IAWAmtB,EAAAjyB,UAAA4yB,cAAA,SAAAC,EAAAnxB,GACA,GAAAyZ,GAAA5c,IAEA,iBAAAgU,EAAAhN,GACA,GAAAyT,GAAAzT,EAAAyT,KACAgN,EAAAzgB,EAAAygB,OACAC,EAAA1gB,EAAA0gB,OAIAV,GAAA,SAAApK,EAAAjV,MAAAxE,MAAA,MAAAyZ,EAAAjV,MAAAxE,QAAA,cAAAwB,QAAAxB,GACA8jB,GAAA,SAAArK,EAAAjV,MAAAxE,MAAA,MAAAyZ,EAAAjV,MAAAxE,QAAA,cAAAwB,QAAAxB,EAGA6jB,IAAA,MAAA7jB,IAAAd,OAAA,KACAolB,MAEAR,GAAA,MAAA9jB,EAAA,KACAukB,KAIA,IAAAphB,GAAAsW,EAAAhD,MAAAtT,OAAA0gB,EAAAS,EAAA,GACAlhB,EAAAqW,EAAAhD,MAAArT,QAAA0gB,EAAAS,EAAA,GAGA6M,EAAAjuB,IAAAsW,EAAAhD,MAAAtT,MACAkuB,EAAAjuB,IAAAqW,EAAAhD,MAAArT,MACA,iBAAA+tB,GAAAC,GAAAC,EAAA,CAGA,GAAAC,GAAA7X,EAAAoX,eAAA1tB,EAAAC,EAEAD,GAAAmuB,EAAA,GACAluB,EAAAkuB,EAAA,EACA,IAAAzC,KACA,sBAAAsC,EACAtC,EAAA2B,UAAA,MACO,qBAAAW,EACPtC,EAAA2B,UAAA,EACA3B,EAAA4B,OAAA5B,EAAA6B,OAAA,MACO,CAEP,GAAAvtB,IAAAsW,EAAAhD,MAAAtT,OAAAC,IAAAqW,EAAAhD,MAAArT,OAAA,MACAyrB,GAAA1rB,QACA0rB,EAAAzrB,SAGA,kBAAAqW,GAAAjV,MAAA2sB,IAGA,kBAAAtgB,GAAA0gB,SAAA1gB,EAAA0gB,UACA9X,EAAAnD,SAAAuY,EAAA,WACA,MAAApV,GAAAjV,MAAA2sB,GAAAtgB,GAA+CyG,OAAAlQ,MAAoBjE,QAAAC,UAA+BkW,OAAAtZ,OAGlGyZ,EAAAnD,SAAAuY,MAKA0B,EAAAjyB,UAAAkzB,mBAAA,SAAAC,GACA,GAAAnY,GAAAzc,KAAA2H,MAAA8U,MAEA,OAAAA,GACA,kBAAAA,GACAA,EAAAmY,GAEAnY,EAEAvT,EAAAnH,QAAAga,cAAA,QAAkDC,UAAA,iDAAA4Y,KAGlDlB,EAAAjyB,UAAAkb,OAAA,WACA,GAAAkY,GAAA70B,KAGA4b,EAAA5b,KAAA2H,MACAN,EAAAuU,EAAAvU,SACAytB,EAAAlZ,EAAAkZ,cAWAC,GAVAnZ,EAAAtV,MACAsV,EAAArV,OACAqV,EAAAoZ,WACApZ,EAAAkY,gBACAlY,EAAAzY,KACAyY,EAAAqY,eACArY,EAAAsY,eACAtY,EAAAP,SACAO,EAAAJ,aACAI,EAAAV,cACAU,EAAAmZ,eACApzB,EAAA2xB,EAAA1X,GAAA,gLAEAI,EAAAra,EAAAqa,UAAAra,EAAAqa,UAAA,oCAMA,UAAAyX,EAAA1xB,SAAAsF,EAAAsB,KAA4DhH,GAC5Dqa,YACA3U,YAAAM,MAAAN,SAAA0tB,EAAA/wB,IAAA,SAAAzB,GACA,MAAA2G,GAAAnH,QAAAga,cACAwX,EAAA1D,cACAlnB,KAAqBmsB,GACrB7wB,IAAA,mBAAA1B,EACAgvB,OAAAsD,EAAAR,cAAA,eAAA9xB,GACAouB,QAAAkE,EAAAR,cAAA,gBAAA9xB,GACAoY,OAAAka,EAAAR,cAAA,WAAA9xB,KAEAsyB,EAAAF,mBAAApyB,WAMAmxB,GACCxqB,EAAAnH,QAAAib,UAED0W,GAAAxW,WAMA7V,SAAAuR,EAAA7W,QAAAwrB,QAAA3C,WAGAtkB,MAAAsS,EAAA7W,QAAAqb,OAAAwN,WACArkB,OAAAqS,EAAA7W,QAAAqb,OAAAwN,WAOAnO,OAAA7D,EAAA7W,QAAAwrB,QAGAyH,WAAApc,EAAA7W,QAAAuH,MAYAyrB,cAAAnc,EAAA7W,QAAAub,QAAA1E,EAAA7W,QAAA2rB,OAAA,uCAGAoG,gBAAAlb,EAAA7W,QAAAsb,KAOAla,KAAAyV,EAAA7W,QAAA2rB,OAAA,wBAGAuG,eAAArb,EAAA7W,QAAAub,QAAA1E,EAAA7W,QAAAqb,QACA8W,eAAAtb,EAAA7W,QAAAub,QAAA1E,EAAA7W,QAAAqb,QAGA5B,aAAA5C,EAAA7W,QAAAsS,KACA6G,cAAAtC,EAAA7W,QAAAsS,KACAgH,SAAAzC,EAAA7W,QAAAsS,KAGAygB,cAAAlc,EAAA7W,QAAAR,QAEAmyB,EAAAjW,cACAuX,YAAA,OACAlB,iBAAA,EACA3wB,KAAA,OACA8wB,gBAAA,OACAC,gBAAAxW,SACAqX,eAAA,OAEAr1B,EAAAqC,QAAA2xB,GV2pKM,SAAU/zB,EAAQD,EAASU,GAEjC,YW/7KO,SAAS60B,GAAuBC,EAA0B5uB,GAG/D,IAAK,GAFC/B,GAAS4wB,EAAgBD,GAC3BE,EAAW7wB,EAAO,GACbhE,EAAI,EAAG6B,EAAMmC,EAAOlC,OAAQ9B,EAAI6B,EAAK7B,IAAK,CACjD,GAAM80B,GAAiB9wB,EAAOhE,EAC1B+F,GAAQ4uB,EAAYG,KAAiBD,EAAWC,GAEtD,MAAOD,GAUF,QAASE,GAAsBC,EAAwBnwB,GAC5D,IAAKA,EAAKmwB,GACR,KAAM,IAAIntB,OAAM,0DAA4DmtB,EAAa,eAE3F,OAAOnwB,GAAKmwB,GAiBP,QAASC,GAA+BC,EAA2BP,EAC3BK,EAAwBG,EACxBtwB,EAAcd,GAE3D,GAAImxB,EAAQF,GAAa,OAAO,EAAAxc,EAAAvW,aAAYizB,EAAQF,GAKpD,KAAK,GAHDtzB,GAASwzB,EAAQC,GACfC,EAAoBR,EAAgBD,GACpCU,EAAmBD,EAAkBE,MAAMF,EAAkBhxB,QAAQ4wB,IAClEh1B,EAAI,EAAG6B,EAAMwzB,EAAiBvzB,OAAQ9B,EAAI6B,EAAK7B,IAAK,CAC3D,GAAMqD,GAAIgyB,EAAiBr1B,EAC3B,IAAIk1B,EAAQ7xB,GAAI,CACd3B,EAASwzB,EAAQ7xB,EACjB,QAIJ,MADA3B,IAAS,EAAA8W,EAAAvW,aAAYP,QACd,EAAA8W,EAAA1U,UAAQ,EAAA0U,EAAA9T,eAAchD,GAASmD,KAAMA,IAAQd,GAU/C,QAAS6wB,GAAgBD,GAE9B,MAD4Bl0B,QAAO0S,KAAKwhB,GAC5BhuB,KAAK,SAASvD,EAAGC,GAC3B,MAAOsxB,GAAYvxB,GAAKuxB,EAAYtxB,KX83KxClE,EAAQ4B,YAAa,EACrB5B,EWn8KgBu1B,yBXo8KhBv1B,EWn7KgB41B,wBXo7KhB51B,EW/5KgB81B,iCXg6KhB91B,EWr4KgBy1B,iBA/EhB,IAAApc,GAAA3Y,EAAA,IXwiLM,SAAUT,EAAQD,EAASU,GAEjC,YY5iLAT,GAAOD,QAAUE,EAAQ,GAAyBmC,QAClDpC,EAAOD,QAAQo2B,MAAQl2B,EAAQ,GAC/BD,EAAOD,QAAQq2B,WAAan2B,EAAQ,IAAmCmC,QACvEpC,EAAOD,QAAQq2B,WAAWD,MAAQl2B,EAAQ,GAC1CD,EAAOD,QAAQs2B,cAAgBp2B,EAAQ,IAAkCmC,SZmjLnE,SAAUpC,EAAQD,EAASU,GAEjC,Ya9iLA,SAAA4nB,MACA,QAAAiO,MAHA,GAAAC,GAA2B91B,EAAQ,GAInC61B,GAAAE,kBAAAnO,EAEAroB,EAAAD,QAAA,WACA,QAAA02B,GAAAzuB,EAAA4V,EAAA+B,EAAAD,EAAAwL,EAAAC,GACA,GAAAA,IAAAoL,EAAA,CAIA,GAAAzM,GAAA,GAAArhB,OACA,kLAKA,MADAqhB,GAAA5oB,KAAA,sBACA4oB,GAGA,QAAA4M,KACA,MAAAD,GAFAA,EAAAxL,WAAAwL,CAMA,IAAA/I,IACA/jB,MAAA8sB,EACA/Y,KAAA+Y,EACA/hB,KAAA+hB,EACAhZ,OAAAgZ,EACA70B,OAAA60B,EACAhqB,OAAAgqB,EACA1e,OAAA0e,EAEA9I,IAAA8I,EACA9Y,QAAA+Y,EACA9I,QAAA6I,EACAE,YAAAF,EACA5I,WAAA6I,EACA5b,KAAA2b,EACA3I,SAAA4I,EACA3I,MAAA2I,EACA1I,UAAA0I,EACAzI,MAAAyI,EACAxI,MAAAwI,EAEAlX,eAAA8W,EACAE,kBAAAnO,EAKA,OAFAqF,GAAAlQ,UAAAkQ,EAEAA,IbgkLM,SAAU1tB,EAAQD,EAASU,GAEjC,YcrnLAT,GAAAD,QAFA,gDdwoLM,SAAUC,EAAQD,GejpLxB,GAAAqI,EAGAA,GAAA,WACA,MAAA/H,QAGA,KAEA+H,KAAAsN,SAAA,qBAAAkhB,MAAA,QACC,MAAAviB,GAED,gBAAAkR,UACAnd,EAAAmd,QAOAvlB,EAAAD,QAAAqI,GfwpLM,SAAUpI,EAAQD,GgB5qLxBC,EAAAD,QAAA,SAAAC,GAoBA,MAnBAA,GAAA62B,kBACA72B,EAAA82B,UAAA,aACA92B,EAAA+2B,SAEA/2B,EAAA0H,WAAA1H,EAAA0H,aACArG,OAAAC,eAAAtB,EAAA,UACAwB,YAAA,EACAC,IAAA,WACA,MAAAzB,GAAAa,KAGAQ,OAAAC,eAAAtB,EAAA,MACAwB,YAAA,EACAC,IAAA,WACA,MAAAzB,GAAAY,KAGAZ,EAAA62B,gBAAA,GAEA72B,IhBorLM,SAAUA,EAAQD,EAASU,GAEjC,YAyBA,SAASyB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQC,QAASD,GAEvF,QAASgW,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BnY,EAAMU,GAAQ,IAAKV,EAAQ,KAAM,IAAIoY,gBAAe,4DAAgE,QAAO1X,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BV,EAAPU,EAElO,QAAS2X,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIL,WAAU,iEAAoEK,GAAeD,GAAS5W,UAAYT,OAAOuX,OAAOD,GAAcA,EAAW7W,WAAa+R,aAAe7J,MAAO0O,EAAUlX,YAAY,EAAOqX,UAAU,EAAMtX,cAAc,KAAeoX,IAAYtX,OAAOyX,eAAiBzX,OAAOyX,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GA5Bje5Y,EAAQ4B,YAAa,CAErB,IAAIqH,GAAW3H,OAAO4H,QAAU,SAAUC,GAAU,IAAK,GAAItI,GAAI,EAAGA,EAAIuI,UAAUzG,OAAQ9B,IAAK,CAAE,GAAIwI,GAASD,UAAUvI,EAAI,KAAK,GAAI0D,KAAO8E,GAAc/H,OAAOS,UAAUC,eAAejB,KAAKsI,EAAQ9E,KAAQ4E,EAAO5E,GAAO8E,EAAO9E,IAAY,MAAO4E,IiB9sLvPI,EAAA7I,EAAA,GjBktLI8I,EAAUrH,EAAuBoH,GiBjtLrC0P,EAAAvY,EAAA,GjBqtLIwY,EAAc/W,EAAuB8W,GiBptLzC4a,EAAAnzB,EAAA,GACAu2B,EAAAv2B,EAAA,IACA2Y,EAAA3Y,EAAA,GACAyY,EAAAzY,EAAA,GjB2tLI0Y,EAAejX,EAAuBgX,GiBnqLrB+d,EjBgrLN,SAAUxd,GAGvB,QAASwd,KACP,GAAI9G,GAAOxW,EAAOyW,CAElBjY,GAAgB9X,KAAM42B,EAEtB,KAAK,GAAIjO,GAAO7f,UAAUzG,OAAQyc,EAAOpc,MAAMimB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC3E9J,EAAK8J,GAAQ9f,UAAU8f,EAGzB,OAAekH,GAASxW,EAAQpB,EAA2BlY,KAAMoZ,EAAiB3Y,KAAKwd,MAAM7E,GAAmBpZ,MAAMiH,OAAO6X,KAAiBxF,EiBpmLhJM,OACE+Z,SAAU,KACV1D,SAAU,KACVjU,UAAW,IjBimLJ+T,EAIJD,EAAQ5X,EAA2BoB,EAAOyW,GAwX/C,MAvYA3X,GAAUwe,EAAUxd,GAmBpBwd,EAASn1B,UiBrmLTo1B,ajBqmLkC,WiBrmLX,GAAAjb,GACoC5b,KAAK2H,MAAvD2S,EADcsB,EACdtB,OAAQD,EADMuB,EACNvB,iBAAkB4B,EADZL,EACYK,eAAgB7W,EAD5BwW,EAC4BxW,IACjD,QAAQ6W,EAAkB3B,EAAO,IAAMlV,EAAO,GAA6B,EAAtBiV,EAAiB,IAAWjV,GjBwnLnFwxB,EAASn1B,UiB5mLTq1B,ajB4mLkC,SiB5mLrBh0B,EAAWR,EAAWO,EAAWN,EAAWqX,GAA0B,GAAAuC,GACnCnc,KAAK2H,MAA5C2S,EAD0E6B,EAC1E7B,OAAQD,EADkE8B,EAClE9B,iBAAkBE,EADgD4B,EAChD5B,UAC3Bwc,EAAW/2B,KAAK62B,eAEhBnyB,GACJ2B,KAAMvB,KAAKiiB,OAAOgQ,EAAWzc,EAAO,IAAMxX,EAAIuX,EAAiB,IAC/DjU,IAAKtB,KAAKiiB,OAAOxM,EAAYD,EAAO,IAAMhY,EAAI+X,EAAiB,IAI/D/T,MAAOzD,IAAM6a,IAAW7a,EAAIiC,KAAKiiB,MAAMgQ,EAAWl0B,EAAIiC,KAAK5C,IAAI,EAAGW,EAAI,GAAKyX,EAAO,IAClF/T,OAAQhE,IAAMmb,IAAWnb,EAAIuC,KAAKiiB,MAAMxM,EAAYhY,EAAIuC,KAAK5C,IAAI,EAAGK,EAAI,GAAK+X,EAAO,IAatF,OAVIV,IAASA,EAAM+Z,WACjBjvB,EAAI4B,MAAQxB,KAAKiiB,MAAMnN,EAAM+Z,SAASrtB,OACtC5B,EAAI6B,OAASzB,KAAKiiB,MAAMnN,EAAM+Z,SAASptB,SAGrCqT,GAASA,EAAMqW,WACjBvrB,EAAI0B,IAAMtB,KAAKiiB,MAAMnN,EAAMqW,SAAS7pB,KACpC1B,EAAI2B,KAAOvB,KAAKiiB,MAAMnN,EAAMqW,SAAS5pB,OAGhC3B,GjB2nLTkyB,EAASn1B,UiBlnLTu1B,OjBknL4B,SiBlnLrB5wB,EAAaC,GAAsC,GAAAwW,GACC7c,KAAK2H,MAAvD2S,EADiDuC,EACjDvC,OAAQlV,EADyCyX,EACzCzX,KAAMmV,EADmCsC,EACnCtC,UAAW1X,EADwBga,EACxBha,EAAGN,EADqBsa,EACrBta,EAAGsZ,EADkBgB,EAClBhB,QAASob,EADSpa,EACToa,OACzCF,EAAW/2B,KAAK62B,eASlB/zB,EAAIgC,KAAKiiB,OAAO1gB,EAAOiU,EAAO,KAAOyc,EAAWzc,EAAO,KACvDhY,EAAIwC,KAAKiiB,OAAO3gB,EAAMkU,EAAO,KAAOC,EAAYD,EAAO,IAU3D,OAPe,SAAX2c,GAAgC,MAAXA,IACvBn0B,EAAIgC,KAAK5C,IAAI4C,KAAKC,IAAIjC,EAAGsC,EAAOvC,GAAI,IAEvB,SAAXo0B,GAAgC,MAAXA,IACvB30B,EAAIwC,KAAK5C,IAAI4C,KAAKC,IAAIzC,EAAGuZ,EAAUtZ,GAAI,KAGjCO,IAAGR,MjBqoLbs0B,EAASn1B,UiB5nLTy1B,OjB4nL4B,SAAgB/wB,GiB5nLqC,GAAzEI,GAAyEJ,EAAzEI,OAAQD,EAAiEH,EAAjEG,MAAiE6wB,EAC9Bn3B,KAAK2H,MAA/C2S,EADwE6c,EACxE7c,OAAQuB,EADgEsb,EAChEtb,QAASzW,EADuD+xB,EACvD/xB,KAAMmV,EADiD4c,EACjD5c,UAAWzX,EADsCq0B,EACtCr0B,EAAGR,EADmC60B,EACnC70B,EACtCy0B,EAAW/2B,KAAK62B,eAKlBh0B,EAAIiC,KAAKiiB,OAAOzgB,EAAQgU,EAAO,KAAOyc,EAAWzc,EAAO,KACxD/X,EAAIuC,KAAKiiB,OAAOxgB,EAAS+T,EAAO,KAAOC,EAAYD,EAAO,IAK9D,OAFAzX,GAAIiC,KAAK5C,IAAI4C,KAAKC,IAAIlC,EAAGuC,EAAOtC,GAAI,GACpCP,EAAIuC,KAAK5C,IAAI4C,KAAKC,IAAIxC,EAAGsZ,EAAUvZ,GAAI,IAC/BO,IAAGN,MjBopLbq0B,EAASn1B,UiBvoLT21B,YjBuoLiC,SiBvoLrBC,GAAyC,GAAAC,GACQt3B,KAAK2H,MAAzD+U,EAD4C4a,EAC5C5a,eAAgBT,EAD4Bqb,EAC5Brb,eAAgBH,EADYwb,EACZxb,iBAEnCgB,QAgBJ,OAdIhB,GACFgB,GAAQ,EAAA/D,EAAA7S,cAAamxB,IAIrBva,GAAQ,EAAA/D,EAAAhS,YAAWswB,GAGf3a,IACFI,EAAMzW,MAAO,EAAA0S,EAAA/S,MAAKqxB,EAAIhxB,KAAO4V,GAC7Ba,EAAMxW,OAAQ,EAAAyS,EAAA/S,MAAKqxB,EAAI/wB,MAAQ2V,KAI5Ba,GjBqpLT8Z,EAASn1B,UiB7oLT81B,ejB6oLoC,SiB7oLrBhwB,GACb,MACE2B,GAAAnH,QAAAga,cAACwX,EAAA1D,eACCc,QAAS3wB,KAAKw3B,cAAc,eAC5B7c,OAAQ3a,KAAKw3B,cAAc,UAC3BjG,OAAQvxB,KAAKw3B,cAAc,cAC3B/a,OAAQzc,KAAK2H,MAAM8U,OACnBD,OAAQ,2BAA6Bxc,KAAK2H,MAAM6U,OAAS,IAAMxc,KAAK2H,MAAM6U,OAAS,KAClFjV,IjB0pLPqvB,EAASn1B,UiB/oLTg2B,ejB+oLoC,SiB/oLrBlwB,EAA0BT,GAAuC,GAAA4wB,GACpC13B,KAAK2H,MAAxCvC,EADuEsyB,EACvEtyB,KAAMtC,EADiE40B,EACjE50B,EAAGC,EAD8D20B,EAC9D30B,KAAME,EADwDy0B,EACxDz0B,KAAMD,EADkD00B,EAClD10B,KAAME,EAD4Cw0B,EAC5Cx0B,KAG5By0B,EAAW33B,KAAK82B,aAAa,EAAG,EAAG1xB,EAAOtC,EAAG,GAAGwD,MAGhDsxB,EAAO53B,KAAK82B,aAAa,EAAG,EAAG/zB,EAAME,GACrC40B,EAAQ73B,KAAK82B,aAAa,EAAG,EAAG9zB,EAAME,GACtC+wB,GAAkB2D,EAAKtxB,MAAOsxB,EAAKrxB,QACnC2tB,GAAkBpvB,KAAKC,IAAI8yB,EAAMvxB,MAAOqxB,GAAW7yB,KAAKC,IAAI8yB,EAAMtxB,OAAQmX,KAChF,OACExU,GAAAnH,QAAAga,cAAC4a,EAAAjD,WACCptB,MAAOQ,EAASR,MAChBC,OAAQO,EAASP,OACjB0tB,eAAgBA,EAChBC,eAAgBA,EAChB1Y,aAAcxb,KAAK83B,gBAAgB,gBACnC5c,cAAelb,KAAK83B,gBAAgB,iBACpCzc,SAAUrb,KAAK83B,gBAAgB,aAC9BvwB,IjBqqLPqvB,EAASn1B,UiBxpLT+1B,cjBwpLmC,SiBxpLrBlD,GAAoB,GAAA1X,GAAA5c,IAChC,OAAO,UAACgU,EAADhN,GAAiE,GAAtDyT,GAAsDzT,EAAtDyT,KAAMgN,EAAgDzgB,EAAhDygB,OAAQC,EAAwC1gB,EAAxC0gB,OACxBrG,EAAUzE,EAAKjV,MAAM2sB,EAC3B,IAAKjT,EAAL,CAEA,GAAM0W,IAAgC3xB,IAAK,EAAGC,KAAM,EAGpD,QAAQiuB,GACN,IAAK,cAEH,GAAM0D,GAAavd,EAAKsI,aAAaI,wBAC/B8U,EAAaxd,EAAK0I,uBACxB4U,GAAY1xB,KAAO4xB,EAAW5xB,KAAO2xB,EAAW3xB,KAAOoU,EAAKsI,aAAaM,WACzE0U,EAAY3xB,IAAM6xB,EAAW7xB,IAAM4xB,EAAW5xB,IAAMqU,EAAKsI,aAAaQ,UACtE3G,EAAKnD,UAAUwW,SAAU8H,GACzB,MAEF,KAAK,SACH,GAAMG,GAAmC,SAApBtb,EAAKjV,MAAMxE,MAAuC,MAApByZ,EAAKjV,MAAMxE,KACxDg1B,EAAmC,SAApBvb,EAAKjV,MAAMxE,MAAuC,MAApByZ,EAAKjV,MAAMxE,IAC9D,KAAKyZ,EAAKhD,MAAMqW,SAAU,KAAM,IAAI7nB,OAAM,oCAC1C2vB,GAAY1xB,KAAO6xB,EAAetb,EAAKhD,MAAMqW,SAAS5pB,KAAOohB,EAAS7K,EAAKhD,MAAMqW,SAAS5pB,KAC1F0xB,EAAY3xB,IAAM+xB,EAAevb,EAAKhD,MAAMqW,SAAS7pB,IAAMshB,EAAS9K,EAAKhD,MAAMqW,SAAS7pB,IACxFwW,EAAKnD,UAAUwW,SAAU8H,GACzB,MACF,KAAK,aACH,IAAKnb,EAAKhD,MAAMqW,SAAU,KAAM,IAAI7nB,OAAM,uCAC1C2vB,GAAY1xB,KAAOuW,EAAKhD,MAAMqW,SAAS5pB,KACvC0xB,EAAY3xB,IAAMwW,EAAKhD,MAAMqW,SAAS7pB,IACtCwW,EAAKnD,UAAUwW,SAAU,MACzB,MACF,SACE,KAAM,IAAI7nB,OAAM,uDAAyDksB,GAhCP,GAAA8D,GAmCvDxb,EAAKoa,OAAOe,EAAY3xB,IAAK2xB,EAAY1xB,MAAjDvD,EAnC+Ds1B,EAmC/Dt1B,EAAGR,EAnC4D81B,EAmC5D91B,CAEV+e,GAAQ5gB,KAAKmc,EAAMA,EAAKjV,MAAMpH,EAAGuC,EAAGR,GAAI0R,IAAGyG,OAAMsd,mBjB+qLrDnB,EAASn1B,UiBnqLTq2B,gBjBmqLqC,SiBnqLrBxD,GAAqB,GAAAO,GAAA70B,IACnC,OAAO,UAACgU,EAAD+G,GAAgE,GAArDN,GAAqDM,EAArDN,KAAMlQ,EAA+CwQ,EAA/CxQ,KAChB8W,EAAUwT,EAAKltB,MAAM2sB,EAC3B,IAAKjT,EAAL,CAFqE,GAAAgX,GAGxBxD,EAAKltB,MAA3CvC,EAH8DizB,EAG9DjzB,KAAMtC,EAHwDu1B,EAGxDv1B,EAAGvC,EAHqD83B,EAGrD93B,EAAGyC,EAHkDq1B,EAGlDr1B,KAAMD,EAH4Cs1B,EAG5Ct1B,KAAMG,EAHsCm1B,EAGtCn1B,KAAMD,EAHgCo1B,EAGhCp1B,KAHgCq1B,EAMxDzD,EAAKqC,OAAO3sB,GAApB1H,EANgEy1B,EAMhEz1B,EAAGN,EAN6D+1B,EAM7D/1B,CAGRM,GAAIiC,KAAKC,IAAIlC,EAAGuC,EAAOtC,GAEvBD,EAAIiC,KAAK5C,IAAIW,EAAG,GAGhBA,EAAIiC,KAAK5C,IAAI4C,KAAKC,IAAIlC,EAAGG,GAAOD,GAChCR,EAAIuC,KAAK5C,IAAI4C,KAAKC,IAAIxC,EAAGW,GAAOD,GAEhC4xB,EAAKpb,UAAUka,SAA0B,iBAAhBW,EAAiC,KAAO/pB,IAEjE8W,EAAQ5gB,KAAKo0B,EAAMt0B,EAAGsC,EAAGN,GAAIyR,IAAGyG,OAAMlQ,YjBwrL1CqsB,EAASn1B,UiBprLTkb,OjBorL4B,WiBprLR,GAAA4b,GAC+Cv4B,KAAK2H,MAA/D7E,EADWy1B,EACXz1B,EAAGR,EADQi2B,EACRj2B,EAAGO,EADK01B,EACL11B,EAAGN,EADEg2B,EACFh2B,EAAGiB,EADD+0B,EACC/0B,YAAaC,EADd80B,EACc90B,YAAaqY,EAD3Byc,EAC2Bzc,iBAEvCub,EAAMr3B,KAAK82B,aAAah0B,EAAGR,EAAGO,EAAGN,EAAGvC,KAAK4Z,OACzCrS,EAAQzD,UAAMC,SAAS6tB,KAAK5xB,KAAK2H,MAAMN,UAGzCmxB,EAAW10B,UAAM6tB,aAAapqB,GAChCyU,WAAW,EAAAlD,EAAA/W,SAAW,kBAAmBwF,EAAMI,MAAMqU,UAAWhc,KAAK2H,MAAMqU,WACzE1Y,OAAQtD,KAAK2H,MAAMrE,OACnBqwB,SAAUtwB,QAAQrD,KAAK4Z,MAAM+Z,UAC7B8E,kBAAmBj1B,EACnBk1B,2BAA4Br1B,QAAQrD,KAAK4Z,MAAMqW,UAC/C0I,cAAe7c,IAGjBgB,WAAW9c,KAAK2H,MAAMmV,MAAUvV,EAAMI,MAAMmV,MAAU9c,KAAKo3B,YAAYC,KASzE,OALI5zB,KAAa+0B,EAAWx4B,KAAKy3B,eAAee,EAAUnB,IAGtD7zB,IAAag1B,EAAWx4B,KAAKu3B,eAAeiB,IAEzCA,GjB+rLF5B,GiBxjM6B9yB,UAAMkZ,UAAvB4Z,GAEZ1Z,WAEL7V,SAAU8V,UAAUoQ,QAGpBnoB,KAAM+X,UAAUC,OAAOwN,WACvB3O,eAAgBkB,UAAUC,OAAOwN,WACjCrQ,UAAW4C,UAAUC,OAAOwN,WAC5BtQ,OAAQ6C,UAAU7T,MAAMshB,WACxB/O,QAASsB,UAAUC,OAAOwN,WAC1BvQ,iBAAkB8C,UAAU7T,MAAMshB,WAGlC9nB,EAAGqa,UAAUC,OAAOwN,WACpBtoB,EAAG6a,UAAUC,OAAOwN,WACpB/nB,EAAGsa,UAAUC,OAAOwN,WACpBroB,EAAG4a,UAAUC,OAAOwN,WAGpB7nB,KAAM,SAAU4E,EAAO4V,GACrB,GAAM5T,GAAQhC,EAAM4V,EACpB,OAAqB,gBAAV5T,GAA2B,GAAIvB,OAAM,uBAC5CuB,EAAQhC,EAAM9E,GAAK8G,EAAQhC,EAAM3E,KAAa,GAAIoF,OAAM,gDAA5D,IAGFpF,KAAM,SAAU2E,EAAO4V,GACrB,GAAM5T,GAAQhC,EAAM4V,EACpB,OAAqB,gBAAV5T,GAA2B,GAAIvB,OAAM,uBAC5CuB,EAAQhC,EAAM9E,GAAK8G,EAAQhC,EAAM5E,KAAa,GAAIqF,OAAM,iDAA5D,IAGFnF,KAAM,SAAU0E,EAAO4V,GACrB,GAAM5T,GAAQhC,EAAM4V,EACpB,OAAqB,gBAAV5T,GAA2B,GAAIvB,OAAM,wBAC5CuB,EAAQhC,EAAMpF,GAAKoH,EAAQhC,EAAMzE,KAAa,GAAIkF,OAAM,mDAA5D,IAGFlF,KAAM,SAAUyE,EAAO4V,GACrB,GAAM5T,GAAQhC,EAAM4V,EACpB,OAAqB,gBAAV5T,GAA2B,GAAIvB,OAAM,wBAC5CuB,EAAQhC,EAAMpF,GAAKoH,EAAQhC,EAAM1E,KAAa,GAAImF,OAAM,oDAA5D,IAIF7H,EAAG4c,UAAU/Q,OAAOwe,WAGpB9P,WAAYqC,UAAU9I,KACtBmG,YAAa2C,UAAU9I,KACvBsG,OAAQwC,UAAU9I,KAClBmH,aAAc2B,UAAU9I,KACxB6G,cAAeiC,UAAU9I,KACzBgH,SAAU8B,UAAU9I,KAGpB7Q,YAAa2Z,UAAUE,KAAKuN,WAC5BnnB,YAAa0Z,UAAUE,KAAKuN,WAC5BtnB,OAAQ6Z,UAAUE,KAClB9Z,QAAS4Z,UAAUE,KAGnBvB,iBAAkBqB,UAAUE,KAAKuN,WAGjC5O,UAAWmB,UAAU/Q,OAErBqQ,OAAQU,UAAU/Q,OAElBoQ,OAAQW,UAAU/Q,OAGlBjJ,KAAMga,UAAUuQ,OAAO,OAAQ,IAAK,IAAK,SACzCuJ,OAAQ9Z,UAAUuQ,OAAO,OAAQ,IAAK,IAAK,UA1E1BkJ,EA6EZnZ,cACLzB,UAAW,GACXQ,OAAQ,GACRC,OAAQ,GACRxZ,KAAM,EACNF,KAAM,EACNG,KAAMwa,IACN1a,KAAM0a,IACNva,KAAM,QjB0jMVzD,EAAQqC,QiB/oMa60B,GjBmpMf,SAAUj3B,EAAQD,EAASU,GAEjC,YkBltMAT,GAAAD,QAAA,WACA,SAAA0I,OAAA,mFAGAzI,EAAAD,QAAAg0B,UAA2BtzB,EAAQ,GAAmB2B,QACtDpC,EAAAD,QAAAk5B,aAA8Bx4B,EAAQ,IAAsB2B,SlBytMtD,SAAUpC,EAAQD,EAASU,GAEjC,YmB/tMA,IAAAuI,GAAA3H,OAAA4H,QAAA,SAAAC,GAAmD,OAAAtI,GAAA,EAAgBA,EAAAuI,UAAAzG,OAAsB9B,IAAA,CAAO,GAAAwI,GAAAD,UAAAvI,EAA2B,QAAA0D,KAAA8E,GAA0B/H,OAAAS,UAAAC,eAAAjB,KAAAsI,EAAA9E,KAAyD4E,EAAA5E,GAAA8E,EAAA9E,IAAiC,MAAA4E,IAE/OI,EAAa7I,EAAQ,GAErB8I,EAEA,SAAApH,GAAsC,MAAAA,MAAAR,WAAAQ,GAAuCC,QAAAD,IAF7EmH,EAKAtJ,GAAAD,QAAA,SAAA6tB,EAAA5lB,GAOA,MANAA,GAAAmV,OAAAyQ,EAAA5lB,MAAAmV,QACAnV,EAAAmV,MAAAnU,KAA6B4kB,EAAA5lB,MAAAmV,MAAAnV,EAAAmV,QAE7BnV,EAAAqU,WAAAuR,EAAA5lB,MAAAqU,YACArU,EAAAqU,UAAAuR,EAAA5lB,MAAAqU,UAAA,IAAArU,EAAAqU,WAEA9S,EAAAnH,QAAA4vB,aAAApE,EAAA5lB,KnBuuMM,SAAUhI,EAAQD,EAASU,GAEjC,YoBzuMA,SAAAyB,GAAAC,GAAsC,MAAAA,MAAAR,WAAAQ,GAAuCC,QAAAD,GAE7E,QAAAwxB,GAAAxxB,EAAA4R,GAA8C,GAAA7K,KAAiB,QAAAtI,KAAAuB,GAAqB4R,EAAA/O,QAAApE,IAAA,GAAoCS,OAAAS,UAAAC,eAAAjB,KAAAqB,EAAAvB,KAA6DsI,EAAAtI,GAAAuB,EAAAvB,GAAsB,OAAAsI,GAE3M,QAAAiP,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE3F,QAAAC,GAAAnY,EAAAU,GAAiD,IAAAV,EAAa,SAAAoY,gBAAA,4DAAyF,QAAA1X,GAAA,gBAAAA,IAAA,kBAAAA,GAAAV,EAAAU,EAEvJ,QAAA2X,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAL,WAAA,iEAAAK,GAAuGD,GAAA5W,UAAAT,OAAAuX,OAAAD,KAAA7W,WAAyE+R,aAAe7J,MAAA0O,EAAAlX,YAAA,EAAAqX,UAAA,EAAAtX,cAAA,KAA6EoX,IAAAtX,OAAAyX,eAAAzX,OAAAyX,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,GAxBrX5Y,EAAA4B,YAAA,CAEA,IAAAqH,GAAA3H,OAAA4H,QAAA,SAAAC,GAAmD,OAAAtI,GAAA,EAAgBA,EAAAuI,UAAAzG,OAAsB9B,IAAA,CAAO,GAAAwI,GAAAD,UAAAvI,EAA2B,QAAA0D,KAAA8E,GAA0B/H,OAAAS,UAAAC,eAAAjB,KAAAsI,EAAA9E,KAAyD4E,EAAA5E,GAAA8E,EAAA9E,IAAiC,MAAA4E,IAE/OI,EAAa7I,EAAQ,GAErB8I,EAAArH,EAAAoH,GAEA0P,EAAiBvY,EAAQ,GAEzBwY,EAAA/W,EAAA8W,GAEAkgB,EAAiBz4B,EAAQ,GAEzB04B,EAAAj3B,EAAAg3B,GAaAD,EAAA,SAAAxf,GAGA,QAAAwf,KACA,GAAA9I,GAAAxW,EAAAyW,CAEAjY,GAAA9X,KAAA44B,EAEA,QAAAjQ,GAAA7f,UAAAzG,OAAAyc,EAAApc,MAAAimB,GAAAC,EAAA,EAAmEA,EAAAD,EAAaC,IAChF9J,EAAA8J,GAAA9f,UAAA8f,EAGA,OAAAkH,GAAAxW,EAAApB,EAAAlY,KAAAoZ,EAAA3Y,KAAAwd,MAAA7E,GAAApZ,MAAAiH,OAAA6X,KAAAxF,EAAAM,OACAtT,MAAAgT,EAAA3R,MAAArB,MACAC,OAAA+S,EAAA3R,MAAApB,QACK+S,EAAA+B,SAAA,SAAArH,EAAA7I,GACL,GAAAZ,GAAAY,EAAAZ,IACAA,GAAAjE,MACAiE,EAAAhE,MAGA+S,GAAA3R,MAAA0T,UACArH,EAAA0gB,SAAA1gB,EAAA0gB,UACApb,EAAAG,SAAAlP,EAAA,WACA,MAAA+O,GAAA3R,MAAA0T,UAAA/B,EAAA3R,MAAA0T,SAAArH,EAAA7I,MAGAmO,EAAAG,SAAAlP,IAfAwlB,EAiBKD,EAAA5X,EAAAoB,EAAAyW,GAqDL,MAjFA3X,GAAAwgB,EAAAxf,GA+BAwf,EAAAn3B,UAAAoY,0BAAA,SAAAC,GACAA,EAAAxT,QAAAtG,KAAA2H,MAAArB,OAAAwT,EAAAvT,SAAAvG,KAAA2H,MAAApB,QACAvG,KAAAyZ,UACAnT,MAAAwT,EAAAxT,MACAC,OAAAuT,EAAAvT,UAKAqyB,EAAAn3B,UAAAkb,OAAA,WAIA,GAAAf,GAAA5b,KAAA2H,MACA8U,EAAAb,EAAAa,OACAuY,EAAApZ,EAAAoZ,WAEA9Z,GADAU,EAAAP,SACAO,EAAAV,eACAM,EAAAI,EAAAJ,aACAsZ,EAAAlZ,EAAAkZ,cACAb,EAAArY,EAAAqY,eACAC,EAAAtY,EAAAsY,eACAJ,EAAAlY,EAAAkY,gBACA3wB,EAAAyY,EAAAzY,KAGA4xB,GAFAnZ,EAAAtV,MACAsV,EAAArV,OACAqV,EAAAmZ,eACAptB,EAAA2rB,EAAA1X,GAAA,6KAEA,OAAA1S,GAAAnH,QAAAga,cACA+c,EAAA/2B,SAEA0a,SACAuY,aACA1uB,MAAAtG,KAAA4Z,MAAAtT,MACAC,OAAAvG,KAAA4Z,MAAArT,OACA2U,gBACAG,SAAArb,KAAAqb,SACAG,eACAsZ,gBACAb,iBACAC,iBACAJ,kBACA3wB,OACA4xB,iBAEA7rB,EAAAnH,QAAAga,cAAA,MAAApT,GAAqDmU,OAASxW,MAAAtG,KAAA4Z,MAAAtT,MAAA,KAAAC,OAAAvG,KAAA4Z,MAAArT,OAAA,OAAqEoB,MAInIixB,GACC1vB,EAAAnH,QAAAib,UAED4b,GAAA1b,WACA3W,OAAAqS,EAAA7W,QAAAqb,OACA9W,MAAAsS,EAAA7W,QAAAqb,QAEAwb,EAAAnb,cACAuX,YAAA,QAEAt1B,EAAAqC,QAAA62B,GpBgwMM,SAAUj5B,EAAQD,EAASU,GAEjC,YA2BA,SAASyB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQC,QAASD,GAEvF,QAASwxB,GAAyBxxB,EAAK4R,GAAQ,GAAI7K,KAAa,KAAK,GAAItI,KAAKuB,GAAW4R,EAAK/O,QAAQpE,IAAM,GAAkBS,OAAOS,UAAUC,eAAejB,KAAKqB,EAAKvB,KAAcsI,EAAOtI,GAAKuB,EAAIvB,GAAM,OAAOsI,GAEnN,QAASiP,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BnY,EAAMU,GAAQ,IAAKV,EAAQ,KAAM,IAAIoY,gBAAe,4DAAgE,QAAO1X,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BV,EAAPU,EAElO,QAAS2X,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIL,WAAU,iEAAoEK,GAAeD,GAAS5W,UAAYT,OAAOuX,OAAOD,GAAcA,EAAW7W,WAAa+R,aAAe7J,MAAO0O,EAAUlX,YAAY,EAAOqX,UAAU,EAAMtX,cAAc,KAAeoX,IAAYtX,OAAOyX,eAAiBzX,OAAOyX,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAhCje5Y,EAAQ4B,YAAa,CAErB,IAAIqH,GAAW3H,OAAO4H,QAAU,SAAUC,GAAU,IAAK,GAAItI,GAAI,EAAGA,EAAIuI,UAAUzG,OAAQ9B,IAAK,CAAE,GAAIwI,GAASD,UAAUvI,EAAI,KAAK,GAAI0D,KAAO8E,GAAc/H,OAAOS,UAAUC,eAAejB,KAAKsI,EAAQ9E,KAAQ4E,EAAO5E,GAAO8E,EAAO9E,IAAY,MAAO4E,IqB/3MvPI,EAAA7I,EAAA,GrBm4MI8I,EAAUrH,EAAuBoH,GqBl4MrC0P,EAAAvY,EAAA,GrBs4MIwY,EAAc/W,EAAuB8W,GqBr4MzC3P,EAAA5I,EAAA,GrBy4MIyD,EAAWhC,EAAuBmH,GqBv4MtC+P,EAAA3Y,EAAA,GACA24B,EAAA34B,EAAA,GACA44B,EAAA54B,EAAA,GrB64MI64B,EAAoBp3B,EAAuBm3B,GqBz4MzC9f,EAAO,aACP9E,EAAO,SAACtS,GAAD,MAASd,QAAOS,UAAUwU,SAASxV,KAAKqB,IAyBhCo3B,ErBg4MW,SAAU9f,GAGxC,QAAS8f,KACP,GAAIpJ,GAAOxW,EAAOyW,CAElBjY,GAAgB9X,KAAMk5B,EAEtB,KAAK,GAAIvQ,GAAO7f,UAAUzG,OAAQyc,EAAOpc,MAAMimB,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC3E9J,EAAK8J,GAAQ9f,UAAU8f,EAGzB,OAAekH,GAASxW,EAAQpB,EAA2BlY,KAAMoZ,EAAiB3Y,KAAKwd,MAAM7E,GAAmBpZ,MAAMiH,OAAO6X,KAAiBxF,EqB90MhJM,MAAQN,EAAK6f,uBrB80M+K7f,EqBjyM5L2B,eAAiB,SAAChZ,GAAmB,GAAAm3B,EACnC9f,GAAK3R,MAAMsT,eAAehZ,EAA1B0G,KAAsC2Q,EAAK3R,MAAM8tB,SAAjD2D,OAA2D9f,EAAKM,MAAM2b,YAAatzB,EAAnFm3B,MrBgyMOrJ,EAIJD,EAAQ5X,EAA2BoB,EAAOyW,GA6G/C,MA5HA3X,GAAU8gB,EAA2B9f,GAsBrC8f,EAA0Bz3B,UqBv1M1B03B,qBrBu1M2D,WqBv1M7B,GAAAvd,GACiC5b,KAAK2H,MAA3DrB,EADqBsV,EACrBtV,MAAO4uB,EADctZ,EACdsZ,YAAaO,EADC7Z,EACD6Z,QAASnxB,EADRsX,EACQtX,gBAAiBc,EADzBwW,EACyBxW,KAC/CmwB,GAAa,EAAAwD,EAAA9D,wBAAuBC,EAAa5uB,GACjD+yB,GAAQ,EAAAN,EAAAzD,uBAAsBC,EAAYnwB,EAMhD,QACEnD,QAJoB,EAAA82B,EAAAvD,gCAA+BC,EAASP,EAAaK,EACtBA,EAAY8D,EAAO/0B,GAItEixB,WAAYA,EACZnwB,KAAMi0B,IrBg2MVH,EAA0Bz3B,UqB51M1BoY,0BrB41MgE,SqB51MtCC,GAGxB,GACKA,EAAUxT,OAAStG,KAAK2H,MAAMrB,OAC9BwT,EAAUyb,aAAev1B,KAAK2H,MAAM4tB,aACnC,EAAA1xB,EAAA9B,SAAQ+X,EAAUob,YAAal1B,KAAK2H,MAAMutB,eAC1C,EAAArxB,EAAA9B,SAAQ+X,EAAU1U,KAAMpF,KAAK2H,MAAMvC,OAMpC,KAAK,EAAAvB,EAAA9B,SAAQ+X,EAAU2b,QAASz1B,KAAK2H,MAAM8tB,SAAU,IAAAla,GAC7Bvb,KAAK4Z,MAAzB2b,EADiDha,EACjDga,WAAYnwB,EADqCmW,EACrCnW,KAIb3C,GAAY,EAAAs2B,EAAAvD,gCAChB1b,EAAU2b,QAAS3b,EAAUob,YAC7BK,EAAYA,EAAYnwB,EAAM0U,EAAUxV,gBAE1CtE,MAAKyZ,UAAUxX,OAAQQ,SAbvBzC,MAAKs5B,cAAcxf,IrB+2MvBof,EAA0Bz3B,UqBr1M1B63B,crBq1MoD,SqBr1MtCxf,GAAqB,GAC1Bob,GAA+Cpb,EAA/Cob,YAAa9vB,EAAkC0U,EAAlC1U,KAAMqwB,EAA4B3b,EAA5B2b,QAASnxB,EAAmBwV,EAAnBxV,gBAC7Bi1B,EAAgBzf,EAAUyb,aAAc,EAAAwD,EAAA9D,wBAAuBnb,EAAUob,YAAapb,EAAUxT,OAEhGovB,EAAiB11B,KAAK4Z,MAAM2b,UAGlC,IAAIG,IAAmB6D,GAAiBv5B,KAAK2H,MAAMutB,cAAgBA,GAAel1B,KAAK2H,MAAMvC,OAASA,EAAM,CAEpGswB,IAAkBD,KAAUA,EAAQC,IAAkB,EAAA3c,EAAAvW,aAAYxC,KAAK4Z,MAAM3X,QAGnF,IAAMu3B,IAAkB,EAAAT,EAAAzD,uBAAsBiE,EAAen0B,GACzDnD,GAAS,EAAA82B,EAAAvD,gCAA+BC,EAASP,EAAaqE,EACtB7D,EAAgB8D,EAASl1B,EAGrErC,IAAS,EAAA8W,EAAA5R,+BAA8BlF,EAAQ6X,EAAUzS,SAAUmyB,EAASl1B,GAG5EmxB,EAAQ8D,GAAiBt3B,EAGzBjC,KAAK2H,MAAMsT,eAAehZ,EAAQwzB,GAClCz1B,KAAK2H,MAAM8xB,mBAAmBF,EAAeC,GAC7Cx5B,KAAK2H,MAAM2xB,cAAcxf,EAAUxT,MAAOwT,EAAUQ,OAAQkf,EAAS1f,EAAUO,kBAE/Era,KAAKyZ,UAAU8b,WAAYgE,EAAet3B,OAAQA,EAAQmD,KAAMo0B,MrB41MpEN,EAA0Bz3B,UqBx1M1Bkb,OrBw1M6C,WqBx1MpC,GAAAR,GAGOnc,KAAK2H,MAAdoH,GAHEoN,EAEAoZ,WAFApZ,EAEY+Y,YAFZ/Y,EAEyB/W,KAFzB+W,EAE+BsZ,QAF/BtZ,EAEwCsd,mBAFxCtd,EAE4DlB,eAF5DkB,EAE4Emd,cAF5EhG,EAAAnX,GAAA,oGAKP,OACEjT,GAAAnH,QAAAga,cAACkd,EAAAl3B,QAAD4G,KACMoG,GACJkM,eAAgBjb,KAAKib,eACrBhZ,OAAQjC,KAAK4Z,MAAM3X,OACnBmD,KAAMpF,KAAK4Z,MAAMxU,SrBi2MhB8zB,GqB7/M8Cp1B,UAAMkZ,UAAxCkc,GAIZhc,WAQLqY,WAAYpY,UAAU/Q,OAGtB8oB,YAAa/X,UAAU5b,OAGvB6D,KAAM+X,UAAU5b,OAIhBk0B,QAlBiB,SAkBT9tB,EAAO4V,GACb,GAA8B,oBAA1BnJ,EAAKzM,EAAM4V,IACb,KAAM,IAAInV,OAAM,gDAAkDgM,EAAKzM,EAAM4V,IAE/Evc,QAAO0S,KAAK/L,EAAM4V,IAAWjW,QAAQ,SAACrD,GACpC,KAAMA,IAAO0D,GAAMutB,aACjB,KAAM,IAAI9sB,OAAM,8DAElB,EAAA2Q,EAAA/Q,gBAAeL,EAAM8tB,QAAQxxB,GAAM,WAAaA,MAMpDqC,MAAO6W,UAAUC,OAAOwN,WAOxB6O,mBAAoBtc,UAAU9I,KAI9B4G,eAAgBkC,UAAU9I,KAG1BilB,cAAenc,UAAU9I,MAlDR6kB,EAqDZzb,cACLyX,aAAcwE,GAAI,KAAMC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,IAAK,GACxD10B,MAAOs0B,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAK,GAC1CrE,WACAgE,mBAAoBvgB,EACpB+B,eAAgB/B,EAChBogB,cAAepgB,GrB8/MnBxZ,EAAQqC,QqBzjNam3B,GrB6jNf,SAAUv5B,EAAQD,EAASU,GAEjC,YAmBA,SAASyB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIR,WAAaQ,GAAQC,QAASD,GAEvF,QAASgW,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BnY,EAAMU,GAAQ,IAAKV,EAAQ,KAAM,IAAIoY,gBAAe,4DAAgE,QAAO1X,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BV,EAAPU,EAElO,QAAS2X,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIL,WAAU,iEAAoEK,GAAeD,GAAS5W,UAAYT,OAAOuX,OAAOD,GAAcA,EAAW7W,WAAa+R,aAAe7J,MAAO0O,EAAUlX,YAAY,EAAOqX,UAAU,EAAMtX,cAAc,KAAeoX,IAAYtX,OAAOyX,eAAiBzX,OAAOyX,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAtBje5Y,EAAQ4B,YAAa,CAErB,IAAIqH,GAAW3H,OAAO4H,QAAU,SAAUC,GAAU,IAAK,GAAItI,GAAI,EAAGA,EAAIuI,UAAUzG,OAAQ9B,IAAK,CAAE,GAAIwI,GAASD,UAAUvI,EAAI,KAAK,GAAI0D,KAAO8E,GAAc/H,OAAOS,UAAUC,eAAejB,KAAKsI,EAAQ9E,KAAQ4E,EAAO5E,GAAO8E,EAAO9E,IAAY,MAAO4E,IsBxmNvPI,EAAA7I,EAAA,GtB4mNI8I,EAAUrH,EAAuBoH,GsB3mNrC0P,EAAAvY,EAAA,GtB+mNIwY,EAAc/W,EAAuB8W,GsB9mNzCohB,EAAA35B,EAAA,GtBknNI45B,EAAan4B,EAAuBk4B,GsBjmNlC/D,EAA2B,SAACiE,GAAD,GAAAC,GAAAC,CAAA,OAAAA,GAAAD,EAAA,SAAA9gB,GAAA,QAAA8gB,KAAA,GAAApK,GAAAxW,EAAAyW,CAAAjY,GAAA9X,KAAAk6B,EAAA,QAAAvR,GAAA7f,UAAAzG,OAAAyc,EAAApc,MAAAimB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA9J,EAAA8J,GAAA9f,UAAA8f,EAAA,OAAAkH,GAAAxW,EAAApB,EAAAlY,KAAAoZ,EAAA3Y,KAAAwd,MAAA7E,GAAApZ,MAAAiH,OAAA6X,KAAAxF,EAY/BM,OACEtT,MAAO,MAbsBgT,EAgB/BI,SAAmB,EAhBYJ,EAiC/B8gB,eAAiB,SAACC,GAChB,GAAK/gB,EAAKI,QAAV,CACA,GAAMe,GAAO2D,UAASyH,YAATvM,EACTmB,aAAgBwL,cAAa3M,EAAKG,UAAUnT,MAAOmU,EAAK6f,gBApC/BvK,EAAAD,EAAA5X,EAAAoB,EAAAyW,GAAA,MAAA3X,GAAA8hB,EAAA9gB,GAAA8gB,EAAAz4B,UAkB/B+X,kBAlB+B,WAmB7BxZ,KAAK0Z,SAAU,EAEfwL,OAAO3D,iBAAiB,SAAUvhB,KAAKo6B,gBAIvCp6B,KAAKo6B,kBAzBwBF,EAAAz4B,UA4B/B84B,qBA5B+B,WA6B7Bv6B,KAAK0Z,SAAU,EACfwL,OAAOxD,oBAAoB,SAAU1hB,KAAKo6B,iBA9BbF,EAAAz4B,UAuC/Bkb,OAvC+B,WAwC7B,MAAI3c,MAAK2H,MAAM6yB,qBAAuBx6B,KAAK0Z,QAClCxQ,EAAAnH,QAAAga,cAAA,OAAKC,UAAWhc,KAAK2H,MAAMqU,UAAWc,MAAO9c,KAAK2H,MAAMmV,QAG1D5T,EAAAnH,QAAAga,cAACke,EAADtxB,KAAuB3I,KAAK2H,MAAW3H,KAAK4Z,SA5CtBsgB,GAAqCp2B,UAAMkZ,WAA3Ckd,EAExBzc,cACL+c,oBAAoB,GAHSN,EAMxBhd,WAGLsd,mBAAoBrd,UAAUE,MATD8c,EtBuqNjCz6B,GAAQqC,QsBvnNOi0B","file":"react-grid-layout.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactGridLayout\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactGridLayout\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactGridLayout\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactGridLayout\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(11)();\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.bottom = bottom;\nexports.cloneLayout = cloneLayout;\nexports.cloneLayoutItem = cloneLayoutItem;\nexports.childrenEqual = childrenEqual;\nexports.collides = collides;\nexports.compact = compact;\nexports.compactItem = compactItem;\nexports.correctBounds = correctBounds;\nexports.getLayoutItem = getLayoutItem;\nexports.getFirstCollision = getFirstCollision;\nexports.getAllCollisions = getAllCollisions;\nexports.getStatics = getStatics;\nexports.moveElement = moveElement;\nexports.moveElementAwayFromCollision = moveElementAwayFromCollision;\nexports.perc = perc;\nexports.setTransform = setTransform;\nexports.setTopLeft = setTopLeft;\nexports.sortLayoutItemsByRowCol = sortLayoutItemsByRowCol;\nexports.synchronizeLayoutWithChildren = synchronizeLayoutWithChildren;\nexports.validateLayout = validateLayout;\nexports.autoBindHandlers = autoBindHandlers;\n\nvar _lodash = __webpack_require__(3);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\nvar isProduction = \"production\" === 'production';\n\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\nfunction bottom(layout) {\n  var max = 0,\n      bottomY = void 0;\n  for (var _i = 0, len = layout.length; _i < len; _i++) {\n    bottomY = layout[_i].y + layout[_i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\n\nfunction cloneLayout(layout) {\n  var newLayout = Array(layout.length);\n  for (var _i2 = 0, len = layout.length; _i2 < len; _i2++) {\n    newLayout[_i2] = cloneLayoutItem(layout[_i2]);\n  }\n  return newLayout;\n}\n\n// Fast path to cloning, since this is monomorphic\nfunction cloneLayoutItem(layoutItem) {\n  return {\n    w: layoutItem.w, h: layoutItem.h, x: layoutItem.x, y: layoutItem.y, i: layoutItem.i,\n    minW: layoutItem.minW, maxW: layoutItem.maxW, minH: layoutItem.minH, maxH: layoutItem.maxH, axis: layoutItem.axis,\n    moved: Boolean(layoutItem.moved), static: Boolean(layoutItem.static), overlap: Boolean(layoutItem.overlap),\n    // These can be null\n    isDraggable: layoutItem.isDraggable, isResizable: layoutItem.isResizable\n  };\n}\n\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\nfunction childrenEqual(a, b) {\n  // $FlowIgnore: Appears to think map calls back w/array\n  return (0, _lodash2.default)(_react2.default.Children.map(a, function (c) {\n    return c.key;\n  }), _react2.default.Children.map(b, function (c) {\n    return c.key;\n  }));\n}\n\n/**\n * Given two layoutitems, check if they collide.\n */\nfunction collides(l1, l2) {\n  if (l1.overlap || l2.overlap) return false;\n  if (l1 === l2) return false; // same element\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n  return true; // boxes overlap\n}\n\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}       Compacted Layout.\n */\nfunction compact(layout, verticalCompact) {\n  // Statics go in the compareWith array right away so items flow around them.\n  var compareWith = getStatics(layout);\n  // We go through the items by row and column.\n  var sorted = sortLayoutItemsByRowCol(layout);\n  // Holding for new items.\n  var out = Array(layout.length);\n\n  for (var _i3 = 0, len = sorted.length; _i3 < len; _i3++) {\n    var l = cloneLayoutItem(sorted[_i3]);\n\n    // Add to output array to make sure they still come out in the right order.\n    out[layout.indexOf(sorted[_i3])] = l;\n\n    // Clear moved flag, if it exists.\n    l.moved = false;\n  }\n\n  return out;\n}\n\n/**\n * Compact an item in the layout.\n */\nfunction compactItem(compareWith, l, verticalCompact) {\n  if (verticalCompact) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y);\n\n    // Move the element up as far as it can go without colliding.\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  }\n\n  // Move it down, and keep moving it down if it's colliding.\n  var collides = void 0;\n  while (collides = getFirstCollision(compareWith, l)) {\n    l.y = collides.y + collides.h;\n  }\n  return l;\n}\n\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\nfunction correctBounds(layout, bounds) {\n  var collidesWith = getStatics(layout);\n  for (var _i4 = 0, len = layout.length; _i4 < len; _i4++) {\n    var l = layout[_i4];\n    // Overflows right\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\n    // Overflows left\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n    if (!l.static) collidesWith.push(l);else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\nfunction getLayoutItem(layout, id) {\n  for (var _i5 = 0, len = layout.length; _i5 < len; _i5++) {\n    if (layout[_i5].i === id) return layout[_i5];\n  }\n}\n\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\nfunction getFirstCollision(layout, layoutItem) {\n  for (var _i6 = 0, len = layout.length; _i6 < len; _i6++) {\n    if (collides(layout[_i6], layoutItem)) return layout[_i6];\n  }\n}\n\nfunction getAllCollisions(layout, layoutItem) {\n  return layout.filter(function (l) {\n    return collides(l, layoutItem);\n  });\n}\n\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\nfunction getStatics(layout) {\n  return layout.filter(function (l) {\n    return l.static;\n  });\n}\n\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * @param  {Array}      layout Full layout to modify.\n * @param  {LayoutItem} l      element to move.\n * @param  {Number}     [x]    X position in grid units.\n * @param  {Number}     [y]    Y position in grid units.\n * @param  {Boolean}    [isUserAction] If true, designates that the item we're moving is\n *                                     being dragged/resized by the user.\n */\nfunction moveElement(layout, l, x, y, isUserAction) {\n  if (l.static) return layout;\n\n  // Short-circuit if nothing to do.\n  if (l.y === y && l.x === x) return layout;\n\n  var movingUp = y && l.y > y;\n  // This is quite a bit faster than extending the object\n  if (typeof x === 'number') l.x = x;\n  if (typeof y === 'number') l.y = y;\n  l.moved = true;\n\n  // Griffith: No need to move elements away.\n  // In case of collision we want to restore the item's original position.\n  return layout;\n\n  // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n  var sorted = sortLayoutItemsByRowCol(layout);\n  if (movingUp) sorted = sorted.reverse();\n  var collisions = getAllCollisions(sorted, l);\n\n  // Move each item that collides away from this element.\n  for (var _i7 = 0, len = collisions.length; _i7 < len; _i7++) {\n    var collision = collisions[_i7];\n    // console.log('resolving collision between', l.i, 'at', l.y, 'and', collision.i, 'at', collision.y);\n\n    // Short circuit so we can't infinite loop\n    if (collision.moved) continue;\n\n    // This makes it feel a bit more precise by waiting to swap for just a bit when moving up.\n    if (l.y > collision.y && l.y - collision.y > collision.h / 4) continue;\n\n    // Don't move static items - we have to move *this* element away\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction);\n    } else {\n      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction);\n    }\n  }\n\n  return layout;\n}\n\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n * @param  {Boolean} [isUserAction]  If true, designates that the item we're moving is being dragged/resized\n *                                   by the user.\n */\nfunction moveElementAwayFromCollision(layout, collidesWith, itemToMove, isUserAction) {\n\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n  if (isUserAction) {\n    // Make a mock item so we don't modify the item here, only modify in moveElement.\n    var fakeItem = {\n      x: itemToMove.x,\n      y: itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: '-1'\n    };\n    fakeItem.y = Math.max(collidesWith.y - itemToMove.h, 0);\n    if (!getFirstCollision(layout, fakeItem)) {\n      return moveElement(layout, itemToMove, undefined, fakeItem.y);\n    }\n  }\n\n  // Previously this was optimized to move below the collision directly, but this can cause problems\n  // with cascading moves, as an item may actually leapfrog a collision and cause a reversal in order.\n  return moveElement(layout, itemToMove, undefined, itemToMove.y + 1);\n}\n\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\nfunction perc(num) {\n  return num * 100 + '%';\n}\n\nfunction setTransform(_ref) {\n  var top = _ref.top,\n      left = _ref.left,\n      width = _ref.width,\n      height = _ref.height;\n\n  // Replace unitless items with px\n  var translate = 'translate(' + left + 'px,' + top + 'px)';\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: width + 'px',\n    height: height + 'px',\n    position: 'absolute'\n  };\n}\n\nfunction setTopLeft(_ref2) {\n  var top = _ref2.top,\n      left = _ref2.left,\n      width = _ref2.width,\n      height = _ref2.height;\n\n  return {\n    top: top + 'px',\n    left: left + 'px',\n    width: width + 'px',\n    height: height + 'px',\n    position: 'absolute'\n  };\n}\n\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\nfunction sortLayoutItemsByRowCol(layout) {\n  return [].concat(layout).sort(function (a, b) {\n    if (a.y > b.y || a.y === b.y && a.x > b.x) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n    return -1;\n  });\n}\n\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout vertically.\n * @return {Array}                Working layout.\n */\nfunction synchronizeLayoutWithChildren(initialLayout, children, cols, verticalCompact) {\n  initialLayout = initialLayout || [];\n\n  // Generate one layout item per child.\n  var layout = [];\n  _react2.default.Children.forEach(children, function (child, i) {\n    // Don't overwrite if it already exists.\n    var exists = getLayoutItem(initialLayout, String(child.key));\n    if (exists) {\n      layout[i] = cloneLayoutItem(exists);\n    } else {\n      if (!isProduction && child.props._grid) {\n        console.warn('`_grid` properties on children have been deprecated as of React 15.2. ' + // eslint-disable-line\n        'Please use `data-grid` or add your properties directly to the `layout`.');\n      }\n      var g = child.props['data-grid'] || child.props._grid;\n\n      // Hey, this item has a data-grid property, use it.\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], 'ReactGridLayout.children');\n        }\n\n        layout[i] = cloneLayoutItem(_extends({}, g, { i: child.key }));\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        layout[i] = cloneLayoutItem({ w: 1, h: 1, x: 0, y: bottom(layout), i: String(child.key) });\n      }\n    }\n  });\n\n  // Correct the layout.\n  layout = correctBounds(layout, { cols: cols });\n  layout = compact(layout, verticalCompact);\n\n  return layout;\n}\n\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\nfunction validateLayout(layout, contextName) {\n  contextName = contextName || \"Layout\";\n  var subProps = ['x', 'y', 'w', 'h'];\n  if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n  for (var _i8 = 0, len = layout.length; _i8 < len; _i8++) {\n    var item = layout[_i8];\n    for (var j = 0; j < subProps.length; j++) {\n      if (typeof item[subProps[j]] !== 'number') {\n        throw new Error('ReactGridLayout: ' + contextName + '[' + _i8 + '].' + subProps[j] + ' must be a number!');\n      }\n    }\n    if (item.i && typeof item.i !== 'string') {\n      throw new Error('ReactGridLayout: ' + contextName + '[' + _i8 + '].i must be a string!');\n    }\n    if (item.static !== undefined && typeof item.static !== 'boolean') {\n      throw new Error('ReactGridLayout: ' + contextName + '[' + _i8 + '].static must be a boolean!');\n    }\n  }\n}\n\n// Flow can't really figure this out, so we just use Object\nfunction autoBindHandlers(el, fns) {\n  fns.forEach(function (key) {\n    return el[key] = el[key].bind(el);\n  });\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)(module)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = __webpack_require__(3);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _classnames = __webpack_require__(5);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = __webpack_require__(2);\n\nvar _GridItem = __webpack_require__(15);\n\nvar _GridItem2 = _interopRequireDefault(_GridItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar noop = function noop() {};\n\n// Types\n\n// End Types\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nvar ReactGridLayout = function (_React$Component) {\n  _inherits(ReactGridLayout, _React$Component);\n\n  // TODO publish internal ReactClass displayName transform\n  function ReactGridLayout(props, context) {\n    _classCallCheck(this, ReactGridLayout);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    (0, _utils.autoBindHandlers)(_this, ['onDragStart', 'onDrag', 'onDragStop', 'onResizeStart', 'onResize', 'onResizeStop']);\n    return _this;\n  }\n\n  ReactGridLayout.prototype.componentDidMount = function componentDidMount() {\n    this.setState({ mounted: true });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  };\n\n  ReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var newLayoutBase = void 0;\n    // Allow parent to set layout directly.\n    if (!(0, _lodash2.default)(nextProps.layout, this.props.layout)) {\n      newLayoutBase = nextProps.layout;\n    }\n\n    // If children change, also regenerate the layout. Use our state\n    // as the base in case because it may be more up to date than\n    // what is in props.\n    else if (!(0, _utils.childrenEqual)(this.props.children, nextProps.children)) {\n        newLayoutBase = this.state.layout;\n      }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      var newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, nextProps.verticalCompact);\n      var _oldLayout = this.state.layout;\n      this.setState({ layout: newLayout });\n      this.onLayoutMaybeChanged(newLayout, _oldLayout);\n    }\n  };\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n\n\n  ReactGridLayout.prototype.containerHeight = function containerHeight() {\n    if (!this.props.autoSize) return;\n    var nbRow = (0, _utils.bottom)(this.state.layout);\n    var containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + 'px';\n  };\n\n  /**\n   * When dragging starts\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStart = function onDragStart(i, x, y, _ref) {\n    var e = _ref.e,\n        node = _ref.node;\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    this.setState({ oldDragItem: (0, _utils.cloneLayoutItem)(l), oldLayout: this.state.layout });\n\n    this.props.onDragStart(layout, l, l, null, e, node);\n  };\n\n  /**\n   * Each drag movement create a new dragelement and move the element to the dragged location\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDrag = function onDrag(i, x, y, _ref2) {\n    var e = _ref2.e,\n        node = _ref2.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Create placeholder (display only)\n    var placeholder = {\n      w: l.w, h: l.h, x: l.x, y: l.y, placeholder: true, i: i\n    };\n\n    layout = (0, _utils.moveElement)(layout, l, x, y, true /* isUserAction */);\n\n    this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n    this.setState({ activeDrag: placeholder });\n  };\n\n  /**\n   * When dragging stops, figure out which position the element is closest to and update its x and y.\n   * @param  {String} i Index of the child.\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n\n\n  ReactGridLayout.prototype.onDragStop = function onDragStop(i, x, y, _ref3) {\n    var e = _ref3.e,\n        node = _ref3.node;\n    var oldDragItem = this.state.oldDragItem;\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Move the element here\n    var oldX = l.x;\n    layout = (0, _utils.moveElement)(layout, l, x, y, true /* isUserAction */);\n    if (oldDragItem.y === y && (0, _utils.getFirstCollision)(layout, l)) {\n      l.x = oldX;\n    }\n\n    // Set state\n    var newLayout = (0, _utils.compact)(layout, this.props.verticalCompact);\n    var oldLayout = this.state.oldLayout;\n\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldDragItem: null,\n      oldLayout: null\n    });\n\n    this.props.onDragStop(layout, oldDragItem, l, null, e, node);\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  };\n\n  ReactGridLayout.prototype.onLayoutMaybeChanged = function onLayoutMaybeChanged(newLayout, oldLayout) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _lodash2.default)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  };\n\n  ReactGridLayout.prototype.onResizeStart = function onResizeStart(i, w, h, _ref4) {\n    var e = _ref4.e,\n        node = _ref4.node;\n    var layout = this.state.layout;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n      oldLayout: this.state.layout\n    });\n\n    this.props.onResizeStart(layout, l, l, null, e, node);\n  };\n\n  ReactGridLayout.prototype.onResize = function onResize(i, w, h, _ref5) {\n    var e = _ref5.e,\n        node = _ref5.node;\n    var _state = this.state,\n        layout = _state.layout,\n        oldResizeItem = _state.oldResizeItem;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    if (!l) return;\n\n    // Create placeholder element (display only)\n    var placeholder = {\n      w: w, h: h, x: l.x, y: l.y, static: true, i: i\n    };\n\n    this.props.onResize(layout, oldResizeItem, l, placeholder, e, node);\n\n    // Re-compact the layout and set the drag placeholder.\n    this.setState({ activeDrag: placeholder });\n  };\n\n  ReactGridLayout.prototype.onResizeStop = function onResizeStop(i, w, h, _ref6) {\n    var e = _ref6.e,\n        node = _ref6.node;\n    var _state2 = this.state,\n        layout = _state2.layout,\n        oldResizeItem = _state2.oldResizeItem;\n\n    var l = (0, _utils.getLayoutItem)(layout, i);\n    var oldW = l.w;\n\n    l.w = w;\n    if ((0, _utils.getFirstCollision)(layout, l)) {\n      l.w = oldW;\n    }\n\n    // Set state\n    var newLayout = (0, _utils.compact)(layout, this.props.verticalCompact);\n    var oldLayout = this.state.oldLayout;\n\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldResizeItem: null,\n      oldLayout: null\n    });\n\n    this.props.onResizeStop(layout, oldResizeItem, l, null, e, node);\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  };\n\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n\n\n  ReactGridLayout.prototype.placeholder = function placeholder() {\n    var activeDrag = this.state.activeDrag;\n\n    if (!activeDrag) return null;\n    var _props = this.props,\n        width = _props.width,\n        cols = _props.cols,\n        margin = _props.margin,\n        containerPadding = _props.containerPadding,\n        rowHeight = _props.rowHeight,\n        maxRows = _props.maxRows,\n        useCSSTransforms = _props.useCSSTransforms;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n\n    return _react2.default.createElement(\n      _GridItem2.default,\n      {\n        w: activeDrag.w,\n        h: activeDrag.h,\n        x: activeDrag.x,\n        y: activeDrag.y,\n        i: activeDrag.i,\n        className: 'react-grid-placeholder',\n        containerWidth: width,\n        cols: cols,\n        margin: margin,\n        containerPadding: containerPadding || margin,\n        maxRows: maxRows,\n        rowHeight: rowHeight,\n        isDraggable: false,\n        isResizable: false,\n        useCSSTransforms: useCSSTransforms },\n      _react2.default.createElement('div', null)\n    );\n  };\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n\n\n  ReactGridLayout.prototype.processGridItem = function processGridItem(child) {\n    if (!child.key) return;\n    var l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    var _props2 = this.props,\n        width = _props2.width,\n        cols = _props2.cols,\n        margin = _props2.margin,\n        containerPadding = _props2.containerPadding,\n        rowHeight = _props2.rowHeight,\n        maxRows = _props2.maxRows,\n        isDraggable = _props2.isDraggable,\n        isResizable = _props2.isResizable,\n        useCSSTransforms = _props2.useCSSTransforms,\n        draggableCancel = _props2.draggableCancel,\n        draggableHandle = _props2.draggableHandle;\n    var mounted = this.state.mounted;\n\n    // Parse 'static'. Any properties defined directly on the grid item will take precedence.\n\n    var draggable = Boolean(!l.static && isDraggable && (l.isDraggable || l.isDraggable == null));\n    var resizable = Boolean(!l.static && isResizable && (l.isResizable || l.isResizable == null));\n\n    return _react2.default.createElement(\n      _GridItem2.default,\n      {\n        containerWidth: width,\n        cols: cols,\n        margin: margin,\n        containerPadding: containerPadding || margin,\n        maxRows: maxRows,\n        rowHeight: rowHeight,\n        cancel: draggableCancel,\n        handle: draggableHandle,\n        onDragStop: this.onDragStop,\n        onDragStart: this.onDragStart,\n        onDrag: this.onDrag,\n        onResizeStart: this.onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: this.onResizeStop,\n        isDraggable: draggable,\n        isResizable: resizable,\n        useCSSTransforms: useCSSTransforms && mounted,\n        usePercentages: !mounted,\n\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        i: l.i,\n        minH: l.minH,\n        minW: l.minW,\n        maxH: l.maxH,\n        maxW: l.maxW,\n        axis: l.axis,\n        'static': l.static,\n        overlap: l.overlap\n      },\n      child\n    );\n  };\n\n  ReactGridLayout.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props3 = this.props,\n        className = _props3.className,\n        style = _props3.style;\n\n\n    var mergedStyle = _extends({\n      height: this.containerHeight()\n    }, style);\n\n    return _react2.default.createElement(\n      'div',\n      { className: (0, _classnames2.default)('react-grid-layout', className), style: mergedStyle },\n\n      // $FlowIgnore: Appears to think map calls back w/array\n      _react2.default.Children.map(this.props.children, function (child) {\n        return _this2.processGridItem(child);\n      }),\n      this.placeholder()\n    );\n  };\n\n  return ReactGridLayout;\n}(_react2.default.Component);\n\nReactGridLayout.displayName = \"ReactGridLayout\";\nReactGridLayout.propTypes = {\n  //\n  // Basic props\n  //\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes2.default.number,\n\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes2.default.bool,\n  // # of cols.\n  cols: _propTypes2.default.number,\n\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes2.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes2.default.string,\n\n  // If true, the layout will compact vertically\n  verticalCompact: _propTypes2.default.bool,\n\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props) {\n    var layout = props.layout;\n    // I hope you're setting the data-grid property on the grid items\n    if (layout === undefined) return;\n    (0, _utils.validateLayout)(layout, 'layout');\n  },\n\n  //\n  // Grid Dimensions\n  //\n\n  // Margin between items [x, y] in px\n  margin: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Padding inside the container [x, y] in px\n  containerPadding: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes2.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes2.default.number,\n\n  //\n  // Flags\n  //\n  isDraggable: _propTypes2.default.bool,\n  isResizable: _propTypes2.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool,\n\n  //\n  // Callbacks\n  //\n\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes2.default.func,\n\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes2.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes2.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes2.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes2.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes2.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes2.default.func,\n\n  //\n  // Other validations\n  //\n\n  // Children must not have duplicate keys.\n  children: function children(props, propName, _componentName) {\n    var children = props[propName];\n\n    // Check children keys for duplicates. Throw if found.\n    var keys = {};\n    _react2.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error(\"Duplicate child key \\\"\" + child.key + \"\\\" found! This will cause problems in ReactGridLayout.\");\n      }\n      keys[child.key] = true;\n    });\n  }\n};\nReactGridLayout.defaultProps = {\n  autoSize: true,\n  cols: 12,\n  className: '',\n  rowHeight: 150,\n  maxRows: Infinity, // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isDraggable: true,\n  isResizable: true,\n  useCSSTransforms: true,\n  verticalCompact: true,\n  onLayoutChange: noop,\n  onDragStart: noop,\n  onDrag: noop,\n  onDragStop: noop,\n  onResizeStart: noop,\n  onResize: noop,\n  onResizeStop: noop\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  this.state = {\n    activeDrag: null,\n    layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols, this.props.verticalCompact),\n    mounted: false,\n    oldDragItem: null,\n    oldLayout: null,\n    oldResizeItem: null\n  };\n};\n\nexports.default = ReactGridLayout;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n\t true ? module.exports = factory(__webpack_require__(7), __webpack_require__(0)) :\n\ttypeof define === 'function' && define.amd ? define(['react-dom', 'react'], factory) :\n\t(global.ReactDraggable = factory(global.ReactDOM,global.React));\n}(this, (function (ReactDOM,React) { 'use strict';\n\n\tReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n\tReact = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\n\tvar emptyFunction_1 = emptyFunction;\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\n\tvar validateFormat = function validateFormat(format) {};\n\n\t{\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\n\tvar invariant_1 = invariant;\n\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\n\tvar warning = emptyFunction_1;\n\n\t{\n\t  var printWarning = function printWarning(format) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\n\t    var argIndex = 0;\n\t    var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t      return args[argIndex++];\n\t    });\n\t    if (typeof console !== 'undefined') {\n\t      console.error(message);\n\t    }\n\t    try {\n\t      // --- Welcome to debugging React ---\n\t      // This error was thrown as a convenience so that you can use this stack\n\t      // to find the callsite that caused this warning to fire.\n\t      throw new Error(message);\n\t    } catch (x) {}\n\t  };\n\n\t  warning = function warning(condition, format) {\n\t    if (format === undefined) {\n\t      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t    }\n\n\t    if (format.indexOf('Failed Composite propType: ') === 0) {\n\t      return; // Ignore CompositeComponent proptype check.\n\t    }\n\n\t    if (!condition) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t        args[_key2 - 2] = arguments[_key2];\n\t      }\n\n\t      printWarning.apply(undefined, [format].concat(args));\n\t    }\n\t  };\n\t}\n\n\tvar warning_1 = warning;\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\n\t\treturn Object(val);\n\t}\n\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn to;\n\t};\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\n\tvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n\t{\n\t  var invariant$1 = invariant_1;\n\t  var warning$1 = warning_1;\n\t  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n\t  var loggedTypeFailures = {};\n\t}\n\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\n\t          var stack = getStack ? getStack() : '';\n\n\t          warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n\tvar checkPropTypes_1 = checkPropTypes;\n\n\tvar factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\n\t  var ANONYMOUS = '<<anonymous>>';\n\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker,\n\t    exact: createStrictShapeTypeChecker,\n\t  };\n\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\n\t  function createChainableTypeChecker(validate) {\n\t    {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\n\t      if (secret !== ReactPropTypesSecret_1) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant_1(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning_1(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\n\t    return chainedCheckType;\n\t  }\n\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);\n\t  }\n\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (typeof checker !== 'function') {\n\t        warning_1(\n\t          false,\n\t          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n\t          'received %s at index %s.',\n\t          getPostfixForTypeWarning(checker),\n\t          i\n\t        );\n\t        return emptyFunction_1.thatReturnsNull;\n\t      }\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n\t          return null;\n\t        }\n\t      }\n\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createStrictShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      // We need to check all keys in case some are required but missing from\n\t      // props.\n\t      var allKeys = objectAssign({}, props[propName], shapeTypes);\n\t      for (var key in allKeys) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          return new PropTypeError(\n\t            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n\t            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n\t            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n\t          );\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    if (typeof propValue === 'undefined' || propValue === null) {\n\t      return '' + propValue;\n\t    }\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\n\t  // Returns a string that is postfixed to a warning about an invalid type.\n\t  // For example, \"undefined\" or \"of type array\"\n\t  function getPostfixForTypeWarning(value) {\n\t    var type = getPreciseType(value);\n\t    switch (type) {\n\t      case 'array':\n\t      case 'object':\n\t        return 'an ' + type;\n\t      case 'boolean':\n\t      case 'date':\n\t      case 'regexp':\n\t        return 'a ' + type;\n\t      default:\n\t        return type;\n\t    }\n\t  }\n\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\n\t  ReactPropTypes.checkPropTypes = checkPropTypes_1;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\n\t  return ReactPropTypes;\n\t};\n\n\tvar propTypes = createCommonjsModule(function (module) {\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t{\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);\n\t}\n\t});\n\n\tvar classnames = createCommonjsModule(function (module) {\n\t/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\n\t(function () {\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\n\t\t\t\tvar argType = typeof arg;\n\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn classes.join(' ');\n\t\t}\n\n\t\tif ('object' !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (false) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\tundefined('classnames', [], function () {\n\t\t\t\treturn classNames;\n\t\t\t});\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\t});\n\n\t// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\tfunction findInArray(array /*: Array<any> | TouchList*/, callback /*: Function*/) /*: any*/ {\n\t  for (var i = 0, length = array.length; i < length; i++) {\n\t    if (callback.apply(callback, [array[i], i, array])) return array[i];\n\t  }\n\t}\n\n\tfunction isFunction(func /*: any*/) /*: boolean*/ {\n\t  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n\t}\n\n\tfunction isNum(num /*: any*/) /*: boolean*/ {\n\t  return typeof num === 'number' && !isNaN(num);\n\t}\n\n\tfunction int(a /*: string*/) /*: number*/ {\n\t  return parseInt(a, 10);\n\t}\n\n\tfunction dontSetMe(props /*: Object*/, propName /*: string*/, componentName /*: string*/) {\n\t  if (props[propName]) {\n\t    return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n\t  }\n\t}\n\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tfunction getPrefix() /*: string*/ {\n\t  var prop /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n\t  // Checking specifically for 'window.document' is for pseudo-browser server-side\n\t  // environments that define 'window' as the global context.\n\t  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\t  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n\t  var style = window.document.documentElement.style;\n\n\t  if (prop in style) return '';\n\n\t  for (var i = 0; i < prefixes.length; i++) {\n\t    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n\t  }\n\n\t  return '';\n\t}\n\n\tfunction browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/ {\n\t  return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n\t}\n\n\tfunction kebabToTitleCase(str /*: string*/) /*: string*/ {\n\t  var out = '';\n\t  var shouldCapitalize = true;\n\t  for (var i = 0; i < str.length; i++) {\n\t    if (shouldCapitalize) {\n\t      out += str[i].toUpperCase();\n\t      shouldCapitalize = false;\n\t    } else if (str[i] === '-') {\n\t      shouldCapitalize = true;\n\t    } else {\n\t      out += str[i];\n\t    }\n\t  }\n\t  return out;\n\t}\n\n\t// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n\t// Note that you may have to re-test for certain things; for instance, Chrome 50\n\t// can handle unprefixed `transform`, but not unprefixed `user-select`\n\tvar browserPrefix = getPrefix();\n\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\n\tvar defineProperty = function (obj, key, value) {\n\t  if (key in obj) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\n\t  return obj;\n\t};\n\n\tvar _extends = Object.assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\n\t  return target;\n\t};\n\n\tvar inherits = function (subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t  }\n\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t};\n\n\tvar possibleConstructorReturn = function (self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\n\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t};\n\n\tvar slicedToArray = function () {\n\t  function sliceIterator(arr, i) {\n\t    var _arr = [];\n\t    var _n = true;\n\t    var _d = false;\n\t    var _e = undefined;\n\n\t    try {\n\t      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n\t        _arr.push(_s.value);\n\n\t        if (i && _arr.length === i) break;\n\t      }\n\t    } catch (err) {\n\t      _d = true;\n\t      _e = err;\n\t    } finally {\n\t      try {\n\t        if (!_n && _i[\"return\"]) _i[\"return\"]();\n\t      } finally {\n\t        if (_d) throw _e;\n\t      }\n\t    }\n\n\t    return _arr;\n\t  }\n\n\t  return function (arr, i) {\n\t    if (Array.isArray(arr)) {\n\t      return arr;\n\t    } else if (Symbol.iterator in Object(arr)) {\n\t      return sliceIterator(arr, i);\n\t    } else {\n\t      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n\t    }\n\t  };\n\t}();\n\n\t/*:: import type {ControlPosition, PositionOffsetControlPosition, MouseTouchEvent} from './types';*/\n\n\n\tvar matchesSelectorFunc = '';\n\tfunction matchesSelector(el /*: Node*/, selector /*: string*/) /*: boolean*/ {\n\t  if (!matchesSelectorFunc) {\n\t    matchesSelectorFunc = findInArray(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n\t      // $FlowIgnore: Doesn't think elements are indexable\n\t      return isFunction(el[method]);\n\t    });\n\t  }\n\n\t  // Might not be found entirely (not an Element?) - in that case, bail\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  if (!isFunction(el[matchesSelectorFunc])) return false;\n\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  return el[matchesSelectorFunc](selector);\n\t}\n\n\t// Works up the tree to the draggable itself attempting to match selector.\n\tfunction matchesSelectorAndParentsTo(el /*: Node*/, selector /*: string*/, baseNode /*: Node*/) /*: boolean*/ {\n\t  var node = el;\n\t  do {\n\t    if (matchesSelector(node, selector)) return true;\n\t    if (node === baseNode) return false;\n\t    node = node.parentNode;\n\t  } while (node);\n\n\t  return false;\n\t}\n\n\tfunction addEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.attachEvent) {\n\t    el.attachEvent('on' + event, handler);\n\t  } else if (el.addEventListener) {\n\t    el.addEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = handler;\n\t  }\n\t}\n\n\tfunction removeEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.detachEvent) {\n\t    el.detachEvent('on' + event, handler);\n\t  } else if (el.removeEventListener) {\n\t    el.removeEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = null;\n\t  }\n\t}\n\n\tfunction outerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetTop which is including margin. See getBoundPosition\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height += int(computedStyle.borderTopWidth);\n\t  height += int(computedStyle.borderBottomWidth);\n\t  return height;\n\t}\n\n\tfunction outerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetLeft which is including margin. See getBoundPosition\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width += int(computedStyle.borderLeftWidth);\n\t  width += int(computedStyle.borderRightWidth);\n\t  return width;\n\t}\n\tfunction innerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height -= int(computedStyle.paddingTop);\n\t  height -= int(computedStyle.paddingBottom);\n\t  return height;\n\t}\n\n\tfunction innerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width -= int(computedStyle.paddingLeft);\n\t  width -= int(computedStyle.paddingRight);\n\t  return width;\n\t}\n\n\t// Get from offsetParent\n\tfunction offsetXYFromParent(evt /*: {clientX: number, clientY: number}*/, offsetParent /*: HTMLElement*/) /*: ControlPosition*/ {\n\t  var isBody = offsetParent === offsetParent.ownerDocument.body;\n\t  var offsetParentRect = isBody ? { left: 0, top: 0 } : offsetParent.getBoundingClientRect();\n\n\t  var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n\t  var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n\n\t  return { x: x, y: y };\n\t}\n\n\tfunction createCSSTransform(controlPos /*: ControlPosition*/, positionOffset /*: PositionOffsetControlPosition*/) /*: Object*/ {\n\t  var translation = getTranslation(controlPos, positionOffset, 'px');\n\t  return defineProperty({}, browserPrefixToKey('transform', browserPrefix), translation);\n\t}\n\n\tfunction createSVGTransform(controlPos /*: ControlPosition*/, positionOffset /*: PositionOffsetControlPosition*/) /*: string*/ {\n\t  var translation = getTranslation(controlPos, positionOffset, '');\n\t  return translation;\n\t}\n\tfunction getTranslation(_ref2, positionOffset /*: PositionOffsetControlPosition*/, unitSuffix /*: string*/) /*: string*/ {\n\t  var x = _ref2.x,\n\t      y = _ref2.y;\n\n\t  var translation = 'translate(' + x + unitSuffix + ',' + y + unitSuffix + ')';\n\t  if (positionOffset) {\n\t    var defaultX = '' + (typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix);\n\t    var defaultY = '' + (typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix);\n\t    translation = 'translate(' + defaultX + ', ' + defaultY + ')' + translation;\n\t  }\n\t  return translation;\n\t}\n\n\tfunction getTouch(e /*: MouseTouchEvent*/, identifier /*: number*/) /*: ?{clientX: number, clientY: number}*/ {\n\t  return e.targetTouches && findInArray(e.targetTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  }) || e.changedTouches && findInArray(e.changedTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  });\n\t}\n\n\tfunction getTouchIdentifier(e /*: MouseTouchEvent*/) /*: ?number*/ {\n\t  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n\t  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n\t}\n\n\t// User-select Hacks:\n\t//\n\t// Useful for preventing blue highlights all over everything when dragging.\n\n\t// Note we're passing `document` b/c we could be iframed\n\tfunction addUserSelectStyles(doc /*: ?Document*/) {\n\t  if (!doc) return;\n\t  var styleEl = doc.getElementById('react-draggable-style-el');\n\t  if (!styleEl) {\n\t    styleEl = doc.createElement('style');\n\t    styleEl.type = 'text/css';\n\t    styleEl.id = 'react-draggable-style-el';\n\t    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {background: transparent;}\\n';\n\t    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {background: transparent;}\\n';\n\t    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n\t  }\n\t  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n\t}\n\n\tfunction removeUserSelectStyles(doc /*: ?Document*/) {\n\t  try {\n\t    if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n\t    // $FlowIgnore: IE\n\t    if (doc.selection) {\n\t      // $FlowIgnore: IE\n\t      doc.selection.empty();\n\t    } else {\n\t      window.getSelection().removeAllRanges(); // remove selection caused by scroll\n\t    }\n\t  } catch (e) {\n\t    // probably IE\n\t  }\n\t}\n\n\tfunction styleHacks() /*: Object*/ {\n\t  var childStyle /*: Object*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t  // Workaround IE pointer events; see #51\n\t  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\t  return _extends({\n\t    touchAction: 'none'\n\t  }, childStyle);\n\t}\n\n\tfunction addClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.add(className);\n\t  } else {\n\t    if (!el.className.match(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)'))) {\n\t      el.className += ' ' + className;\n\t    }\n\t  }\n\t}\n\n\tfunction removeClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.remove(className);\n\t  } else {\n\t    el.className = el.className.replace(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g'), '');\n\t  }\n\t}\n\n\t/*:: import type Draggable from '../Draggable';*/\n\t/*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n\t/*:: import type DraggableCore from '../DraggableCore';*/\n\n\n\tfunction getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/ {\n\t  // If no bounds, short-circuit and move on\n\t  if (!draggable.props.bounds) return [x, y];\n\n\t  // Clone new bounds\n\t  var bounds = draggable.props.bounds;\n\n\t  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n\t  var node = findDOMNode(draggable);\n\n\t  if (typeof bounds === 'string') {\n\t    var ownerDocument = node.ownerDocument;\n\n\t    var ownerWindow = ownerDocument.defaultView;\n\t    var boundNode = void 0;\n\t    if (bounds === 'parent') {\n\t      boundNode = node.parentNode;\n\t    } else {\n\t      boundNode = ownerDocument.querySelector(bounds);\n\t    }\n\t    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n\t      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n\t    }\n\t    var nodeStyle = ownerWindow.getComputedStyle(node);\n\t    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode);\n\t    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\t    bounds = {\n\t      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n\t      top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n\t      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft + int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n\t      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop + int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n\t    };\n\t  }\n\n\t  // Keep x and y below right and bottom limits...\n\t  if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n\t  if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n\t  // But above left and top limits.\n\t  if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n\t  if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n\n\t  return [x, y];\n\t}\n\n\tfunction snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/ {\n\t  var x = Math.round(pendingX / grid[0]) * grid[0];\n\t  var y = Math.round(pendingY / grid[1]) * grid[1];\n\t  return [x, y];\n\t}\n\n\tfunction canDragX(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n\t}\n\n\tfunction canDragY(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n\t}\n\n\t// Get {x, y} positions from event.\n\tfunction getControlPosition(e /*: MouseTouchEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/ {\n\t  var touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n\t  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\t  var node = findDOMNode(draggableCore);\n\t  // User can provide an offsetParent if desired.\n\t  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n\t  return offsetXYFromParent(touchObj || e, offsetParent);\n\t}\n\n\t// Create an data object exposed by <DraggableCore>'s events\n\tfunction createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/ {\n\t  var state = draggable.state;\n\t  var isStart = !isNum(state.lastX);\n\t  var node = findDOMNode(draggable);\n\n\t  if (isStart) {\n\t    // If this is our first move, use the x and y as last coords.\n\t    return {\n\t      node: node,\n\t      deltaX: 0, deltaY: 0,\n\t      lastX: x, lastY: y,\n\t      x: x, y: y\n\t    };\n\t  } else {\n\t    // Otherwise calculate proper values.\n\t    return {\n\t      node: node,\n\t      deltaX: x - state.lastX, deltaY: y - state.lastY,\n\t      lastX: state.lastX, lastY: state.lastY,\n\t      x: x, y: y\n\t    };\n\t  }\n\t}\n\n\t// Create an data exposed by <Draggable>'s events\n\tfunction createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/ {\n\t  var scale = draggable.props.scale;\n\t  return {\n\t    node: coreData.node,\n\t    x: draggable.state.x + coreData.deltaX / scale,\n\t    y: draggable.state.y + coreData.deltaY / scale,\n\t    deltaX: coreData.deltaX / scale,\n\t    deltaY: coreData.deltaY / scale,\n\t    lastX: draggable.state.x,\n\t    lastY: draggable.state.y\n\t  };\n\t}\n\n\t// A lot faster than stringify/parse\n\tfunction cloneBounds(bounds /*: Bounds*/) /*: Bounds*/ {\n\t  return {\n\t    left: bounds.left,\n\t    top: bounds.top,\n\t    right: bounds.right,\n\t    bottom: bounds.bottom\n\t  };\n\t}\n\n\tfunction findDOMNode(draggable /*: Draggable | DraggableCore*/) /*: HTMLElement*/ {\n\t  var node = ReactDOM.findDOMNode(draggable);\n\t  if (!node) {\n\t    throw new Error('<DraggableCore>: Unmounted during event!');\n\t  }\n\t  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\t  return node;\n\t}\n\n\t/*eslint no-console:0*/\n\tfunction log() {\n\t}\n\n\t/*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n\n\n\t// Simple abstraction for dragging events names.\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\tvar eventsFor = {\n\t  touch: {\n\t    start: 'touchstart',\n\t    move: 'touchmove',\n\t    stop: 'touchend'\n\t  },\n\t  mouse: {\n\t    start: 'mousedown',\n\t    move: 'mousemove',\n\t    stop: 'mouseup'\n\t  }\n\t};\n\n\t// Default to mouse events.\n\tvar dragEventFor = eventsFor.mouse;\n\n\t/*:: type DraggableCoreState = {\n\t  dragging: boolean,\n\t  lastX: number,\n\t  lastY: number,\n\t  touchIdentifier: ?number\n\t};*/\n\t/*:: export type DraggableBounds = {\n\t  left: number,\n\t  right: number,\n\t  top: number,\n\t  bottom: number,\n\t};*/\n\t/*:: export type DraggableData = {\n\t  node: HTMLElement,\n\t  x: number, y: number,\n\t  deltaX: number, deltaY: number,\n\t  lastX: number, lastY: number,\n\t};*/\n\t/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\t/*:: export type ControlPosition = {x: number, y: number};*/\n\t/*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n\n\n\t//\n\t// Define <DraggableCore>.\n\t//\n\t// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n\t// work well with libraries that require more control over the element.\n\t//\n\n\t/*:: export type DraggableCoreProps = {\n\t  allowAnyClick: boolean,\n\t  cancel: string,\n\t  children: ReactElement<any>,\n\t  disabled: boolean,\n\t  enableUserSelectHack: boolean,\n\t  offsetParent: HTMLElement,\n\t  grid: [number, number],\n\t  handle: string,\n\t  onStart: DraggableEventHandler,\n\t  onDrag: DraggableEventHandler,\n\t  onStop: DraggableEventHandler,\n\t  onMouseDown: (e: MouseEvent) => void,\n\t};*/\n\n\tvar DraggableCore = function (_React$Component) {\n\t  inherits(DraggableCore, _React$Component);\n\n\t  function DraggableCore() {\n\t    var _ref;\n\n\t    var _temp, _this, _ret;\n\n\t    classCallCheck(this, DraggableCore);\n\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n\t      dragging: false,\n\t      // Used while dragging to determine deltas.\n\t      lastX: NaN, lastY: NaN,\n\t      touchIdentifier: null\n\t    }, _this.handleDragStart = function (e) {\n\t      // Make it possible to attach event handlers on top of this one.\n\t      _this.props.onMouseDown(e);\n\n\t      // Only accept left-clicks.\n\t      if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n\t      // Get nodes. Be sure to grab relative document (could be iframed)\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n\t        throw new Error('<DraggableCore> not mounted on DragStart!');\n\t      }\n\t      var ownerDocument = thisNode.ownerDocument;\n\n\t      // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n\t      if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !matchesSelectorAndParentsTo(e.target, _this.props.handle, thisNode) || _this.props.cancel && matchesSelectorAndParentsTo(e.target, _this.props.cancel, thisNode)) {\n\t        return;\n\t      }\n\n\t      // Set touch identifier in component state if this is a touch event. This allows us to\n\t      // distinguish between individual touches on multitouch screens by identifying which\n\t      // touchpoint was set to this element.\n\t      var touchIdentifier = getTouchIdentifier(e);\n\t      _this.setState({ touchIdentifier: touchIdentifier });\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, touchIdentifier, _this);\n\t      if (position == null) return; // not possible but satisfies flow\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Create an event object with all the data parents need to make a decision here.\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, cancel.\n\t      log('calling', _this.props.onStart);\n\t      var shouldUpdate = _this.props.onStart(e, coreEvent);\n\t      if (shouldUpdate === false) return;\n\n\t      // Add a style to the body to disable user-select. This prevents text from\n\t      // being selected all over the page.\n\t      if (_this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument);\n\n\t      // Initiate dragging. Set the current x and y as offsets\n\t      // so we know how much we've moved during the drag. This allows us\n\t      // to drag elements around even if they have been moved, without issue.\n\t      _this.setState({\n\t        dragging: true,\n\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\n\t      // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n\t      // this element. We use different events depending on whether or not we have detected that this\n\t      // is a touch-capable device.\n\t      addEvent(ownerDocument, dragEventFor.move, _this.handleDrag);\n\t      addEvent(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t    }, _this.handleDrag = function (e) {\n\n\t      // Prevent scrolling on mobile devices, like ipad/iphone.\n\t      if (e.type === 'touchmove') e.preventDefault();\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Snap to grid if prop has been provided\n\n\t      if (Array.isArray(_this.props.grid)) {\n\t        var _deltaX = x - _this.state.lastX,\n\t            _deltaY = y - _this.state.lastY;\n\n\t        var _snapToGrid = snapToGrid(_this.props.grid, _deltaX, _deltaY);\n\n\t        var _snapToGrid2 = slicedToArray(_snapToGrid, 2);\n\n\t        _deltaX = _snapToGrid2[0];\n\t        _deltaY = _snapToGrid2[1];\n\n\t        if (!_deltaX && !_deltaY) return; // skip useless drag\n\t        x = _this.state.lastX + _deltaX, y = _this.state.lastY + _deltaY;\n\t      }\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, trigger end.\n\t      var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\t      if (shouldUpdate === false) {\n\t        try {\n\t          // $FlowIgnore\n\t          _this.handleDragStop(new MouseEvent('mouseup'));\n\t        } catch (err) {\n\t          // Old browsers\n\t          var event = ((document.createEvent('MouseEvents') /*: any*/) /*: MouseTouchEvent*/);\n\t          // I see why this insanity was deprecated\n\t          // $FlowIgnore\n\t          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t          _this.handleDragStop(event);\n\t        }\n\t        return;\n\t      }\n\n\t      _this.setState({\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\t    }, _this.handleDragStop = function (e) {\n\t      if (!_this.state.dragging) return;\n\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (thisNode) {\n\t        // Remove user-select hack\n\t        if (_this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n\t      }\n\n\t      // Reset the el.\n\t      _this.setState({\n\t        dragging: false,\n\t        lastX: NaN,\n\t        lastY: NaN\n\t      });\n\n\t      // Call event handler\n\t      _this.props.onStop(e, coreEvent);\n\n\t      if (thisNode) {\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t      }\n\t    }, _this.onMouseDown = function (e) {\n\t      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onMouseUp = function (e) {\n\t      dragEventFor = eventsFor.mouse;\n\n\t      return _this.handleDragStop(e);\n\t    }, _this.onTouchStart = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onTouchEnd = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStop(e);\n\t    }, _temp), possibleConstructorReturn(_this, _ret);\n\t  }\n\n\t  createClass(DraggableCore, [{\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n\t      // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n\t      var thisNode = ReactDOM.findDOMNode(this);\n\t      if (thisNode) {\n\t        var ownerDocument = thisNode.ownerDocument;\n\n\t        removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n\t        removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n\t        if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n\t      }\n\t    }\n\n\t    // Same as onMouseDown (start drag), but now consider this a touch device.\n\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.cloneElement(React.Children.only(this.props.children), {\n\t        style: styleHacks(this.props.children.props.style),\n\n\t        // Note: mouseMove handler is attached to document so it will still function\n\t        // when the user drags quickly and leaves the bounds of the element.\n\t        onMouseDown: this.onMouseDown,\n\t        onTouchStart: this.onTouchStart,\n\t        onMouseUp: this.onMouseUp,\n\t        onTouchEnd: this.onTouchEnd\n\t      });\n\t    }\n\t  }]);\n\t  return DraggableCore;\n\t}(React.Component);\n\n\tDraggableCore.displayName = 'DraggableCore';\n\tDraggableCore.propTypes = {\n\t  /**\n\t   * `allowAnyClick` allows dragging using any mouse button.\n\t   * By default, we only accept the left button.\n\t   *\n\t   * Defaults to `false`.\n\t   */\n\t  allowAnyClick: propTypes.bool,\n\n\t  /**\n\t   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n\t   * with the exception of `onMouseDown`, will not fire.\n\t   */\n\t  disabled: propTypes.bool,\n\n\t  /**\n\t   * By default, we add 'user-select:none' attributes to the document body\n\t   * to prevent ugly text selection during drag. If this is causing problems\n\t   * for your app, set this to `false`.\n\t   */\n\t  enableUserSelectHack: propTypes.bool,\n\n\t  /**\n\t   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n\t   * instead of using the parent node.\n\t   */\n\t  offsetParent: function offsetParent(props /*: DraggableCoreProps*/, propName /*: $Keys<DraggableCoreProps>*/) {\n\t    if (props[propName] && props[propName].nodeType !== 1) {\n\t      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n\t    }\n\t  },\n\n\t  /**\n\t   * `grid` specifies the x and y that dragging should snap to.\n\t   */\n\t  grid: propTypes.arrayOf(propTypes.number),\n\n\t  /**\n\t   * `scale` specifies the scale of the area you are dragging inside of. It allows\n\t   * the drag deltas to scale correctly with how far zoomed in/out you are.\n\t   */\n\t  scale: propTypes.number,\n\n\t  /**\n\t   * `handle` specifies a selector to be used as the handle that initiates drag.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable handle=\".handle\">\n\t   *              <div>\n\t   *                  <div className=\"handle\">Click me to drag</div>\n\t   *                  <div>This is some other content</div>\n\t   *              </div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  handle: propTypes.string,\n\n\t  /**\n\t   * `cancel` specifies a selector to be used to prevent drag initialization.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *           return(\n\t   *               <Draggable cancel=\".cancel\">\n\t   *                   <div>\n\t   *                     <div className=\"cancel\">You can't drag from here</div>\n\t   *                     <div>Dragging here works fine</div>\n\t   *                   </div>\n\t   *               </Draggable>\n\t   *           );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  cancel: propTypes.string,\n\n\t  /**\n\t   * Called when dragging starts.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onStart: propTypes.func,\n\n\t  /**\n\t   * Called while dragging.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onDrag: propTypes.func,\n\n\t  /**\n\t   * Called when dragging stops.\n\t   * If this function returns the boolean false, the drag will remain active.\n\t   */\n\t  onStop: propTypes.func,\n\n\t  /**\n\t   * A workaround option which can be passed if onMouseDown needs to be accessed,\n\t   * since it'll always be blocked (as there is internal use of onMouseDown)\n\t   */\n\t  onMouseDown: propTypes.func,\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t};\n\tDraggableCore.defaultProps = {\n\t  allowAnyClick: false, // by default only accept left click\n\t  cancel: null,\n\t  disabled: false,\n\t  enableUserSelectHack: true,\n\t  offsetParent: null,\n\t  handle: null,\n\t  grid: null,\n\t  transform: null,\n\t  onStart: function onStart() {},\n\t  onDrag: function onDrag() {},\n\t  onStop: function onStop() {},\n\t  onMouseDown: function onMouseDown() {}\n\t};\n\n\t/*:: import type {DraggableEventHandler} from './utils/types';*/\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\t/*:: type DraggableState = {\n\t  dragging: boolean,\n\t  dragged: boolean,\n\t  x: number, y: number,\n\t  slackX: number, slackY: number,\n\t  isElementSVG: boolean\n\t};*/\n\n\n\t//\n\t// Define <Draggable>\n\t//\n\n\t/*:: export type DraggableProps = {\n\t  ...$Exact<DraggableCoreProps>,\n\t  axis: 'both' | 'x' | 'y' | 'none',\n\t  bounds: DraggableBounds | string | false,\n\t  defaultClassName: string,\n\t  defaultClassNameDragging: string,\n\t  defaultClassNameDragged: string,\n\t  defaultPosition: ControlPosition,\n\t  positionOffset: PositionOffsetControlPosition,\n\t  position: ControlPosition,\n\t  scale: number\n\t};*/\n\n\tvar Draggable = function (_React$Component) {\n\t  inherits(Draggable, _React$Component);\n\n\t  function Draggable(props /*: DraggableProps*/) {\n\t    classCallCheck(this, Draggable);\n\n\t    var _this = possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\n\t    _this.onDragStart = function (e, coreData) {\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStart = _this.props.onStart(e, createDraggableData(_this, coreData));\n\t      // Kills start event on core as well, so move handlers are never bound.\n\t      if (shouldStart === false) return false;\n\n\t      _this.setState({ dragging: true, dragged: true });\n\t    };\n\n\t    _this.onDrag = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      var uiData = createDraggableData(_this, coreData);\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        x: uiData.x,\n\t        y: uiData.y\n\t      };\n\n\t      // Keep within bounds.\n\t      if (_this.props.bounds) {\n\t        // Save original x and y.\n\t        var _x = newState.x,\n\t            _y = newState.y;\n\n\t        // Add slack to the values used to calculate bound position. This will ensure that if\n\t        // we start removing slack, the element won't react to it right away until it's been\n\t        // completely removed.\n\n\t        newState.x += _this.state.slackX;\n\t        newState.y += _this.state.slackY;\n\n\t        // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n\t        var _getBoundPosition = getBoundPosition(_this, newState.x, newState.y),\n\t            _getBoundPosition2 = slicedToArray(_getBoundPosition, 2),\n\t            newStateX = _getBoundPosition2[0],\n\t            newStateY = _getBoundPosition2[1];\n\n\t        newState.x = newStateX;\n\t        newState.y = newStateY;\n\n\t        // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\t        newState.slackX = _this.state.slackX + (_x - newState.x);\n\t        newState.slackY = _this.state.slackY + (_y - newState.y);\n\n\t        // Update the event we fire to reflect what really happened after bounds took effect.\n\t        uiData.x = newState.x;\n\t        uiData.y = newState.y;\n\t        uiData.deltaX = newState.x - _this.state.x;\n\t        uiData.deltaY = newState.y - _this.state.y;\n\t      }\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldUpdate = _this.props.onDrag(e, uiData);\n\t      if (shouldUpdate === false) return false;\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.onDragStop = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStop = _this.props.onStop(e, createDraggableData(_this, coreData));\n\t      if (shouldStop === false) return false;\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        dragging: false,\n\t        slackX: 0,\n\t        slackY: 0\n\t      };\n\n\t      // If this is a controlled component, the result of this operation will be to\n\t      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\t      var controlled = Boolean(_this.props.position);\n\t      if (controlled) {\n\t        var _this$props$position = _this.props.position,\n\t            _x2 = _this$props$position.x,\n\t            _y2 = _this$props$position.y;\n\n\t        newState.x = _x2;\n\t        newState.y = _y2;\n\t      }\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.state = {\n\t      // Whether or not we are currently dragging.\n\t      dragging: false,\n\n\t      // Whether or not we have been dragged before.\n\t      dragged: false,\n\n\t      // Current transform x and y.\n\t      x: props.position ? props.position.x : props.defaultPosition.x,\n\t      y: props.position ? props.position.y : props.defaultPosition.y,\n\n\t      // Used for compensating for out-of-bounds drags\n\t      slackX: 0, slackY: 0,\n\n\t      // Can only determine if SVG after mounting\n\t      isElementSVG: false\n\t    };\n\t    return _this;\n\t  }\n\n\t  createClass(Draggable, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      if (this.props.position && !(this.props.onDrag || this.props.onStop)) {\n\t        // eslint-disable-next-line\n\t        console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      // Check to see if the element passed is an instanceof SVGElement\n\t      if (typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n\t        this.setState({ isElementSVG: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps /*: Object*/) {\n\t      // Set x/y if position has changed\n\t      if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {\n\t        this.setState({ x: nextProps.position.x, y: nextProps.position.y });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.setState({ dragging: false }); // prevents invariant if unmounted while dragging\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() /*: ReactElement<any>*/ {\n\t      var _classNames;\n\n\t      var style = {},\n\t          svgTransform = null;\n\n\t      // If this is controlled, we don't want to move it - unless it's dragging.\n\t      var controlled = Boolean(this.props.position);\n\t      var draggable = !controlled || this.state.dragging;\n\n\t      var position = this.props.position || this.props.defaultPosition;\n\t      var transformOpts = {\n\t        // Set left if horizontal drag is enabled\n\t        x: canDragX(this) && draggable ? this.state.x : position.x,\n\n\t        // Set top if vertical drag is enabled\n\t        y: canDragY(this) && draggable ? this.state.y : position.y\n\t      };\n\n\t      // If this element was SVG, we use the `transform` attribute.\n\t      if (this.state.isElementSVG) {\n\t        svgTransform = createSVGTransform(transformOpts, this.props.positionOffset);\n\t      } else {\n\t        // Add a CSS transform to move the element around. This allows us to move the element around\n\t        // without worrying about whether or not it is relatively or absolutely positioned.\n\t        // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n\t        // has a clean slate.\n\t        style = createCSSTransform(transformOpts, this.props.positionOffset);\n\t      }\n\n\t      var _props = this.props,\n\t          defaultClassName = _props.defaultClassName,\n\t          defaultClassNameDragging = _props.defaultClassNameDragging,\n\t          defaultClassNameDragged = _props.defaultClassNameDragged;\n\n\n\t      var children = React.Children.only(this.props.children);\n\n\t      // Mark with class while dragging\n\t      var className = classnames(children.props.className || '', defaultClassName, (_classNames = {}, defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames));\n\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.createElement(\n\t        DraggableCore,\n\t        _extends({}, this.props, { onStart: this.onDragStart, onDrag: this.onDrag, onStop: this.onDragStop }),\n\t        React.cloneElement(children, {\n\t          className: className,\n\t          style: _extends({}, children.props.style, style),\n\t          transform: svgTransform\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t  return Draggable;\n\t}(React.Component);\n\n\tDraggable.displayName = 'Draggable';\n\tDraggable.propTypes = _extends({}, DraggableCore.propTypes, {\n\n\t  /**\n\t   * `axis` determines which axis the draggable can move.\n\t   *\n\t   *  Note that all callbacks will still return data as normal. This only\n\t   *  controls flushing to the DOM.\n\t   *\n\t   * 'both' allows movement horizontally and vertically.\n\t   * 'x' limits movement to horizontal axis.\n\t   * 'y' limits movement to vertical axis.\n\t   * 'none' limits all movement.\n\t   *\n\t   * Defaults to 'both'.\n\t   */\n\t  axis: propTypes.oneOf(['both', 'x', 'y', 'none']),\n\n\t  /**\n\t   * `bounds` determines the range of movement available to the element.\n\t   * Available values are:\n\t   *\n\t   * 'parent' restricts movement within the Draggable's parent node.\n\t   *\n\t   * Alternatively, pass an object with the following properties, all of which are optional:\n\t   *\n\t   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n\t   *\n\t   * All values are in px.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable bounds={{right: 300, bottom: 300}}>\n\t   *              <div>Content</div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  bounds: propTypes.oneOfType([propTypes.shape({\n\t    left: propTypes.number,\n\t    right: propTypes.number,\n\t    top: propTypes.number,\n\t    bottom: propTypes.number\n\t  }), propTypes.string, propTypes.oneOf([false])]),\n\n\t  defaultClassName: propTypes.string,\n\t  defaultClassNameDragging: propTypes.string,\n\t  defaultClassNameDragged: propTypes.string,\n\n\t  /**\n\t   * `defaultPosition` specifies the x and y that the dragged item should start at\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  defaultPosition: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\t  positionOffset: propTypes.shape({\n\t    x: propTypes.oneOfType([propTypes.number, propTypes.string]),\n\t    y: propTypes.oneOfType([propTypes.number, propTypes.string])\n\t  }),\n\n\t  /**\n\t   * `position`, if present, defines the current position of the element.\n\t   *\n\t   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n\t   *  is uncontrolled.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable position={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  position: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t});\n\tDraggable.defaultProps = _extends({}, DraggableCore.defaultProps, {\n\t  axis: 'both',\n\t  bounds: false,\n\t  defaultClassName: 'react-draggable',\n\t  defaultClassNameDragging: 'react-draggable-dragging',\n\t  defaultClassNameDragged: 'react-draggable-dragged',\n\t  defaultPosition: { x: 0, y: 0 },\n\t  position: null,\n\t  scale: 1\n\t});\n\n\t// Previous versions of this lib exported <Draggable> as the root export. As to not break\n\t// them, or TypeScript, we export *both* as the root and as 'default'.\n\t// See https://github.com/mzabriskie/react-draggable/pull/254\n\t// and https://github.com/mzabriskie/react-draggable/issues/266\n\tDraggable.default = Draggable;\n\tDraggable.DraggableCore = DraggableCore;\n\n\treturn Draggable;\n\n})));\n//# sourceMappingURL=react-draggable.js.map\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = __webpack_require__(6);\n\nvar _cloneElement = __webpack_require__(17);\n\nvar _cloneElement2 = _interopRequireDefault(_cloneElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Resizable = function (_React$Component) {\n  _inherits(Resizable, _React$Component);\n\n  function Resizable() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Resizable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: false,\n      width: _this.props.width, height: _this.props.height,\n      slackW: 0, slackH: 0\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Resizable.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // If parent changes height/width, set that in our state.\n    if (!this.state.resizing && (nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  Resizable.prototype.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  // If you do this, be careful of constraints\n\n\n  Resizable.prototype.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n\n\n    if (this.props.lockAspectRatio) {\n      var ratio = this.state.width / this.state.height;\n      height = width / ratio;\n      width = height * ratio;\n    }\n\n    if (!min && !max) return [width, height];\n\n    var oldW = width,\n        oldH = height;\n\n    // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _state = this.state,\n        slackW = _state.slackW,\n        slackH = _state.slackH;\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    }\n\n    // If the numbers changed, we must have introduced some slack. Record it for the next iteration.\n    slackW += oldW - width;\n    slackH += oldH - height;\n    if (slackW !== this.state.slackW || slackH !== this.state.slackH) {\n      this.setState({ slackW: slackW, slackH: slackH });\n    }\n\n    return [width, height];\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  Resizable.prototype.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n\n\n      // Axis restrictions\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && ['n', 's'].indexOf(axis) === -1;\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && ['e', 'w'].indexOf(axis) === -1;\n\n      // reverse delta if using top or left drag handles\n      if (canDragX && axis[axis.length - 1] === 'w') {\n        deltaX = -deltaX;\n      }\n      if (canDragY && axis[0] === 'n') {\n        deltaY = -deltaY;\n      }\n\n      // Update w/h\n      var width = _this2.state.width + (canDragX ? deltaX : 0);\n      var height = _this2.state.height + (canDragY ? deltaY : 0);\n\n      // Early return if no change\n      var widthChanged = width !== _this2.state.width,\n          heightChanged = height !== _this2.state.height;\n      if (handlerName === 'onResize' && !widthChanged && !heightChanged) return;\n\n      // Set the appropriate state for this handler.\n      var _runConstraints = _this2.runConstraints(width, height);\n\n      width = _runConstraints[0];\n      height = _runConstraints[1];\n      var newState = {};\n      if (handlerName === 'onResizeStart') {\n        newState.resizing = true;\n      } else if (handlerName === 'onResizeStop') {\n        newState.resizing = false;\n        newState.slackW = newState.slackH = 0;\n      } else {\n        // Early return if no change after constraints\n        if (width === _this2.state.width && height === _this2.state.height) return;\n        newState.width = width;\n        newState.height = height;\n      }\n\n      var hasCb = typeof _this2.props[handlerName] === 'function';\n      if (hasCb) {\n        // $FlowIgnore isn't refining this correctly to SyntheticEvent\n        if (typeof e.persist === 'function') e.persist();\n        _this2.setState(newState, function () {\n          return _this2.props[handlerName](e, { node: node, size: { width: width, height: height }, handle: axis });\n        });\n      } else {\n        _this2.setState(newState);\n      }\n    };\n  };\n\n  Resizable.prototype.renderResizeHandle = function renderResizeHandle(resizeHandle) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(resizeHandle);\n      }\n      return handle;\n    }\n    return _react2.default.createElement('span', { className: 'react-resizable-handle react-resizable-handle-' + resizeHandle });\n  };\n\n  Resizable.prototype.render = function render() {\n    var _this3 = this;\n\n    // eslint-disable-next-line no-unused-vars\n    var _props = this.props,\n        children = _props.children,\n        draggableOpts = _props.draggableOpts,\n        width = _props.width,\n        height = _props.height,\n        handleSize = _props.handleSize,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        onResize = _props.onResize,\n        onResizeStop = _props.onResizeStop,\n        onResizeStart = _props.onResizeStart,\n        resizeHandles = _props.resizeHandles,\n        p = _objectWithoutProperties(_props, ['children', 'draggableOpts', 'width', 'height', 'handleSize', 'lockAspectRatio', 'axis', 'minConstraints', 'maxConstraints', 'onResize', 'onResizeStop', 'onResizeStart', 'resizeHandles']);\n\n    var className = p.className ? p.className + ' react-resizable' : 'react-resizable';\n\n    // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n    return (0, _cloneElement2.default)(children, _extends({}, p, {\n      className: className,\n      children: [children.props.children, resizeHandles.map(function (h) {\n        return _react2.default.createElement(\n          _reactDraggable.DraggableCore,\n          _extends({}, draggableOpts, {\n            key: 'resizableHandle-' + h,\n            onStop: _this3.resizeHandler('onResizeStop', h),\n            onStart: _this3.resizeHandler('onResizeStart', h),\n            onDrag: _this3.resizeHandler('onResize', h)\n          }),\n          _this3.renderResizeHandle(h)\n        );\n      })]\n    }));\n  };\n\n  return Resizable;\n}(_react2.default.Component);\n\nResizable.propTypes = {\n  //\n  // Required Props\n  //\n\n  // Require that one and only one child be present.\n  children: _propTypes2.default.element.isRequired,\n\n  // Initial w/h\n  width: _propTypes2.default.number.isRequired,\n  height: _propTypes2.default.number.isRequired,\n\n  //\n  // Optional props\n  //\n\n  // Custom resize handle\n  handle: _propTypes2.default.element,\n\n  // If you change this, be sure to update your css\n  handleSize: _propTypes2.default.array,\n\n  // Defines which resize handles should be rendered (default: 'se')\n  // Allows for any combination of:\n  // 's' - South handle (bottom-center)\n  // 'w' - West handle (left-center)\n  // 'e' - East handle (right-center)\n  // 'n' - North handle (top-center)\n  // 'sw' - Southwest handle (bottom-left)\n  // 'nw' - Northwest handle (top-left)\n  // 'se' - Southeast handle (bottom-right)\n  // 'ne' - Northeast handle (top-center)\n  resizeHandles: _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['s', 'w', 'e', 'n', 'sw', 'nw', 'se', 'ne'])),\n\n  // If true, will only allow width/height to move in lockstep\n  lockAspectRatio: _propTypes2.default.bool,\n\n  // Restricts resizing to a particular axis (default: 'both')\n  // 'both' - allows resizing by width or height\n  // 'x' - only allows the width to be changed\n  // 'y' - only allows the height to be changed\n  // 'none' - disables resizing altogether\n  axis: _propTypes2.default.oneOf(['both', 'x', 'y', 'none']),\n\n  // Min/max size\n  minConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  maxConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\n  // Callbacks\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n\n  // These will be passed wholesale to react-draggable's DraggableCore\n  draggableOpts: _propTypes2.default.object\n};\nResizable.defaultProps = {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se']\n};\nexports.default = Resizable;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getBreakpointFromWidth = getBreakpointFromWidth;\nexports.getColsFromBreakpoint = getColsFromBreakpoint;\nexports.findOrGenerateResponsiveLayout = findOrGenerateResponsiveLayout;\nexports.sortBreakpoints = sortBreakpoints;\n\nvar _utils = __webpack_require__(2);\n\n/**\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\n *\n * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\n * @param  {Number} width Screen width.\n * @return {String}       Highest breakpoint that is less than width.\n */\nfunction getBreakpointFromWidth(breakpoints, width) {\n  var sorted = sortBreakpoints(breakpoints);\n  var matching = sorted[0];\n  for (var i = 1, len = sorted.length; i < len; i++) {\n    var breakpointName = sorted[i];\n    if (width > breakpoints[breakpointName]) matching = breakpointName;\n  }\n  return matching;\n}\n\n/**\n * Given a breakpoint, get the # of cols set for it.\n * @param  {String} breakpoint Breakpoint name.\n * @param  {Object} cols       Map of breakpoints to cols.\n * @return {Number}            Number of cols.\n */\n\n\nfunction getColsFromBreakpoint(breakpoint, cols) {\n  if (!cols[breakpoint]) {\n    throw new Error(\"ResponsiveReactGridLayout: `cols` entry for breakpoint \" + breakpoint + \" is missing!\");\n  }\n  return cols[breakpoint];\n}\n\n/**\n * Given existing layouts and a new breakpoint, find or generate a new layout.\n *\n * This finds the layout above the new one and generates from it, if it exists.\n *\n * @param  {Object} layouts     Existing layouts.\n * @param  {Array} breakpoints All breakpoints.\n * @param  {String} breakpoint New breakpoint.\n * @param  {String} breakpoint Last breakpoint (for fallback).\n * @param  {Number} cols       Column count at new breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}             New layout.\n */\nfunction findOrGenerateResponsiveLayout(layouts, breakpoints, breakpoint, lastBreakpoint, cols, verticalCompact) {\n  // If it already exists, just return it.\n  if (layouts[breakpoint]) return (0, _utils.cloneLayout)(layouts[breakpoint]);\n  // Find or generate the next layout\n  var layout = layouts[lastBreakpoint];\n  var breakpointsSorted = sortBreakpoints(breakpoints);\n  var breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\n  for (var i = 0, len = breakpointsAbove.length; i < len; i++) {\n    var b = breakpointsAbove[i];\n    if (layouts[b]) {\n      layout = layouts[b];\n      break;\n    }\n  }\n  layout = (0, _utils.cloneLayout)(layout || []); // clone layout so we don't modify existing items\n  return (0, _utils.compact)((0, _utils.correctBounds)(layout, { cols: cols }), verticalCompact);\n}\n\n/**\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\n * e.g. ['xxs', 'xs', 'sm', ...]\n *\n * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\n * @return {Array}              Sorted breakpoints.\n */\nfunction sortBreakpoints(breakpoints) {\n  var keys = Object.keys(breakpoints);\n  return keys.sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(4).default;\nmodule.exports.utils = __webpack_require__(2);\nmodule.exports.Responsive = __webpack_require__(19).default;\nmodule.exports.Responsive.utils = __webpack_require__(9);\nmodule.exports.WidthProvider = __webpack_require__(20).default;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(12);\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = __webpack_require__(6);\n\nvar _reactResizable = __webpack_require__(16);\n\nvar _utils = __webpack_require__(2);\n\nvar _classnames = __webpack_require__(5);\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * An individual item within a ReactGridLayout.\n */\nvar GridItem = function (_React$Component) {\n  _inherits(GridItem, _React$Component);\n\n  function GridItem() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridItem);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: null,\n      dragging: null,\n      className: ''\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // Helper for generating column width\n  GridItem.prototype.calcColWidth = function calcColWidth() {\n    var _props = this.props,\n        margin = _props.margin,\n        containerPadding = _props.containerPadding,\n        containerWidth = _props.containerWidth,\n        cols = _props.cols;\n\n    return (containerWidth - margin[0] * (cols - 1) - containerPadding[0] * 2) / cols;\n  };\n\n  /**\n   * Return position on the page given an x, y, w, h.\n   * left, top, width, height are all in pixels.\n   * @param  {Number}  x             X coordinate in grid units.\n   * @param  {Number}  y             Y coordinate in grid units.\n   * @param  {Number}  w             W coordinate in grid units.\n   * @param  {Number}  h             H coordinate in grid units.\n   * @return {Object}                Object containing coords.\n   */\n\n\n  GridItem.prototype.calcPosition = function calcPosition(x, y, w, h, state) {\n    var _props2 = this.props,\n        margin = _props2.margin,\n        containerPadding = _props2.containerPadding,\n        rowHeight = _props2.rowHeight;\n\n    var colWidth = this.calcColWidth();\n\n    var out = {\n      left: Math.round((colWidth + margin[0]) * x + containerPadding[0]),\n      top: Math.round((rowHeight + margin[1]) * y + containerPadding[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes deopt\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * margin[0]),\n      height: h === Infinity ? h : Math.round(rowHeight * h + Math.max(0, h - 1) * margin[1])\n    };\n\n    if (state && state.resizing) {\n      out.width = Math.round(state.resizing.width);\n      out.height = Math.round(state.resizing.height);\n    }\n\n    if (state && state.dragging) {\n      out.top = Math.round(state.dragging.top);\n      out.left = Math.round(state.dragging.left);\n    }\n\n    return out;\n  };\n\n  /**\n   * Translate x and y coordinates from pixels to grid units.\n   * @param  {Number} top  Top position (relative to parent) in pixels.\n   * @param  {Number} left Left position (relative to parent) in pixels.\n   * @return {Object} x and y in grid units.\n   */\n\n\n  GridItem.prototype.calcXY = function calcXY(top, left) {\n    var _props3 = this.props,\n        margin = _props3.margin,\n        cols = _props3.cols,\n        rowHeight = _props3.rowHeight,\n        w = _props3.w,\n        h = _props3.h,\n        maxRows = _props3.maxRows,\n        bounce = _props3.bounce;\n\n    var colWidth = this.calcColWidth();\n\n    // left = colWidth * x + margin * (x + 1)\n    // l = cx + m(x+1)\n    // l = cx + mx + m\n    // l - m = cx + mx\n    // l - m = x(c + m)\n    // (l - m) / (c + m) = x\n    // x = (left - margin) / (coldWidth + margin)\n    var x = Math.round((left - margin[0]) / (colWidth + margin[0]));\n    var y = Math.round((top - margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    if (bounce === 'both' || bounce === 'x') {\n      x = Math.max(Math.min(x, cols - w), 0);\n    }\n    if (bounce === 'both' || bounce === 'y') {\n      y = Math.max(Math.min(y, maxRows - h), 0);\n    }\n\n    return { x: x, y: y };\n  };\n\n  /**\n   * Given a height and width in pixel values, calculate grid units.\n   * @param  {Number} height Height in pixels.\n   * @param  {Number} width  Width in pixels.\n   * @return {Object} w, h as grid units.\n   */\n\n\n  GridItem.prototype.calcWH = function calcWH(_ref) {\n    var height = _ref.height,\n        width = _ref.width;\n    var _props4 = this.props,\n        margin = _props4.margin,\n        maxRows = _props4.maxRows,\n        cols = _props4.cols,\n        rowHeight = _props4.rowHeight,\n        x = _props4.x,\n        y = _props4.y;\n\n    var colWidth = this.calcColWidth();\n\n    // width = colWidth * w - (margin * (w - 1))\n    // ...\n    // w = (width + margin) / (colWidth + margin)\n    var w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n    var h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    w = Math.max(Math.min(w, cols - x), 0);\n    h = Math.max(Math.min(h, maxRows - y), 0);\n    return { w: w, h: h };\n  };\n\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n\n\n  GridItem.prototype.createStyle = function createStyle(pos) {\n    var _props5 = this.props,\n        usePercentages = _props5.usePercentages,\n        containerWidth = _props5.containerWidth,\n        useCSSTransforms = _props5.useCSSTransforms;\n\n\n    var style = void 0;\n    // CSS Transforms support (default)\n    if (useCSSTransforms) {\n      style = (0, _utils.setTransform)(pos);\n    }\n    // top,left (slow)\n    else {\n        style = (0, _utils.setTopLeft)(pos);\n\n        // This is used for server rendering.\n        if (usePercentages) {\n          style.left = (0, _utils.perc)(pos.left / containerWidth);\n          style.width = (0, _utils.perc)(pos.width / containerWidth);\n        }\n      }\n\n    return style;\n  };\n\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n\n\n  GridItem.prototype.mixinDraggable = function mixinDraggable(child) {\n    return _react2.default.createElement(\n      _reactDraggable.DraggableCore,\n      {\n        onStart: this.onDragHandler('onDragStart'),\n        onDrag: this.onDragHandler('onDrag'),\n        onStop: this.onDragHandler('onDragStop'),\n        handle: this.props.handle,\n        cancel: \".react-resizable-handle\" + (this.props.cancel ? \",\" + this.props.cancel : \"\") },\n      child\n    );\n  };\n\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n\n\n  GridItem.prototype.mixinResizable = function mixinResizable(child, position) {\n    var _props6 = this.props,\n        cols = _props6.cols,\n        x = _props6.x,\n        minW = _props6.minW,\n        minH = _props6.minH,\n        maxW = _props6.maxW,\n        maxH = _props6.maxH;\n\n    // This is the max possible width - doesn't go to infinity because of the width of the window\n\n    var maxWidth = this.calcPosition(0, 0, cols - x, 0).width;\n\n    // Calculate min/max constraints using our min & maxes\n    var mins = this.calcPosition(0, 0, minW, minH);\n    var maxes = this.calcPosition(0, 0, maxW, maxH);\n    var minConstraints = [mins.width, mins.height];\n    var maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n    return _react2.default.createElement(\n      _reactResizable.Resizable,\n      {\n        width: position.width,\n        height: position.height,\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        onResizeStop: this.onResizeHandler('onResizeStop'),\n        onResizeStart: this.onResizeHandler('onResizeStart'),\n        onResize: this.onResizeHandler('onResize') },\n      child\n    );\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onDragHandler = function onDragHandler(handlerName) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n\n      var handler = _this2.props[handlerName];\n      if (!handler) return;\n\n      var newPosition = { top: 0, left: 0 };\n\n      // Get new XY\n      switch (handlerName) {\n        case 'onDragStart':\n          {\n            // ToDo this wont work on nested parents\n            var parentRect = node.offsetParent.getBoundingClientRect();\n            var clientRect = node.getBoundingClientRect();\n            newPosition.left = clientRect.left - parentRect.left + node.offsetParent.scrollLeft;\n            newPosition.top = clientRect.top - parentRect.top + node.offsetParent.scrollTop;\n            _this2.setState({ dragging: newPosition });\n            break;\n          }\n        case 'onDrag':\n          var isDraggableX = _this2.props.axis === 'both' || _this2.props.axis === 'x';\n          var isDraggableY = _this2.props.axis === 'both' || _this2.props.axis === 'y';\n          if (!_this2.state.dragging) throw new Error('onDrag called before onDragStart.');\n          newPosition.left = isDraggableX ? _this2.state.dragging.left + deltaX : _this2.state.dragging.left;\n          newPosition.top = isDraggableY ? _this2.state.dragging.top + deltaY : _this2.state.dragging.top;\n          _this2.setState({ dragging: newPosition });\n          break;\n        case 'onDragStop':\n          if (!_this2.state.dragging) throw new Error('onDragEnd called before onDragStart.');\n          newPosition.left = _this2.state.dragging.left;\n          newPosition.top = _this2.state.dragging.top;\n          _this2.setState({ dragging: null });\n          break;\n        default:\n          throw new Error('onDragHandler called with unrecognized handlerName: ' + handlerName);\n      }\n\n      var _calcXY = _this2.calcXY(newPosition.top, newPosition.left),\n          x = _calcXY.x,\n          y = _calcXY.y;\n\n      handler.call(_this2, _this2.props.i, x, y, { e: e, node: node, newPosition: newPosition });\n    };\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  GridItem.prototype.onResizeHandler = function onResizeHandler(handlerName) {\n    var _this3 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          size = _ref3.size;\n\n      var handler = _this3.props[handlerName];\n      if (!handler) return;\n      var _props7 = _this3.props,\n          cols = _props7.cols,\n          x = _props7.x,\n          i = _props7.i,\n          maxW = _props7.maxW,\n          minW = _props7.minW,\n          maxH = _props7.maxH,\n          minH = _props7.minH;\n\n      // Get new XY\n\n      var _calcWH = _this3.calcWH(size),\n          w = _calcWH.w,\n          h = _calcWH.h;\n\n      // Cap w at numCols\n\n\n      w = Math.min(w, cols - x);\n      // Ensure w is at least 1\n      w = Math.max(w, 1);\n\n      // Min/max capping\n      w = Math.max(Math.min(w, maxW), minW);\n      h = Math.max(Math.min(h, maxH), minH);\n\n      _this3.setState({ resizing: handlerName === 'onResizeStop' ? null : size });\n\n      handler.call(_this3, i, w, h, { e: e, node: node, size: size });\n    };\n  };\n\n  GridItem.prototype.render = function render() {\n    var _props8 = this.props,\n        x = _props8.x,\n        y = _props8.y,\n        w = _props8.w,\n        h = _props8.h,\n        isDraggable = _props8.isDraggable,\n        isResizable = _props8.isResizable,\n        useCSSTransforms = _props8.useCSSTransforms;\n\n\n    var pos = this.calcPosition(x, y, w, h, this.state);\n    var child = _react2.default.Children.only(this.props.children);\n\n    // Create the child element. We clone the existing element but modify its className and style.\n    var newChild = _react2.default.cloneElement(child, {\n      className: (0, _classnames2.default)('react-grid-item', child.props.className, this.props.className, {\n        static: this.props.static,\n        resizing: Boolean(this.state.resizing),\n        'react-draggable': isDraggable,\n        'react-draggable-dragging': Boolean(this.state.dragging),\n        cssTransforms: useCSSTransforms\n      }),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: _extends({}, this.props.style, child.props.style, this.createStyle(pos))\n    });\n\n    // Resizable support. This is usually on but the user can toggle it off.\n    if (isResizable) newChild = this.mixinResizable(newChild, pos);\n\n    // Draggable support. This is always on, except for with placeholders.\n    if (isDraggable) newChild = this.mixinDraggable(newChild);\n\n    return newChild;\n  };\n\n  return GridItem;\n}(_react2.default.Component);\n\nGridItem.propTypes = {\n  // Children must be only a single element\n  children: _propTypes2.default.element,\n\n  // General grid attributes\n  cols: _propTypes2.default.number.isRequired,\n  containerWidth: _propTypes2.default.number.isRequired,\n  rowHeight: _propTypes2.default.number.isRequired,\n  margin: _propTypes2.default.array.isRequired,\n  maxRows: _propTypes2.default.number.isRequired,\n  containerPadding: _propTypes2.default.array.isRequired,\n\n  // These are all in grid units\n  x: _propTypes2.default.number.isRequired,\n  y: _propTypes2.default.number.isRequired,\n  w: _propTypes2.default.number.isRequired,\n  h: _propTypes2.default.number.isRequired,\n\n  // All optional\n  minW: function minW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== 'number') return new Error('minWidth not Number');\n    if (value > props.w || value > props.maxW) return new Error('minWidth larger than item width/maxWidth');\n  },\n\n  maxW: function maxW(props, propName) {\n    var value = props[propName];\n    if (typeof value !== 'number') return new Error('maxWidth not Number');\n    if (value < props.w || value < props.minW) return new Error('maxWidth smaller than item width/minWidth');\n  },\n\n  minH: function minH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== 'number') return new Error('minHeight not Number');\n    if (value > props.h || value > props.maxH) return new Error('minHeight larger than item height/maxHeight');\n  },\n\n  maxH: function maxH(props, propName) {\n    var value = props[propName];\n    if (typeof value !== 'number') return new Error('maxHeight not Number');\n    if (value < props.h || value < props.minH) return new Error('maxHeight smaller than item height/minHeight');\n  },\n\n  // ID is nice to have for callbacks\n  i: _propTypes2.default.string.isRequired,\n\n  // Functions\n  onDragStop: _propTypes2.default.func,\n  onDragStart: _propTypes2.default.func,\n  onDrag: _propTypes2.default.func,\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n\n  // Flags\n  isDraggable: _propTypes2.default.bool.isRequired,\n  isResizable: _propTypes2.default.bool.isRequired,\n  static: _propTypes2.default.bool,\n  overlap: _propTypes2.default.bool,\n\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes2.default.bool.isRequired,\n\n  // Others\n  className: _propTypes2.default.string,\n  // Selector for draggable handle\n  handle: _propTypes2.default.string,\n  // Selector for draggable cancel (see react-draggable)\n  cancel: _propTypes2.default.string,\n\n  // Fork\n  axis: _propTypes2.default.oneOf(['both', 'x', 'y', 'none']),\n  bounce: _propTypes2.default.oneOf(['both', 'x', 'y', 'none'])\n};\nGridItem.defaultProps = {\n  className: '',\n  cancel: '',\n  handle: '',\n  minH: 1,\n  minW: 1,\n  maxH: Infinity,\n  maxW: Infinity,\n  axis: 'both'\n};\nexports.default = GridItem;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = function() {\n  throw new Error(\"Don't instantiate Resizable directly! Use require('react-resizable').Resizable\");\n};\n\nmodule.exports.Resizable = __webpack_require__(8).default;\nmodule.exports.ResizableBox = __webpack_require__(18).default;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// React.addons.cloneWithProps look-alike that merges style & className.\nmodule.exports = function cloneElement(element, props) {\n  if (props.style && element.props.style) {\n    props.style = _extends({}, element.props.style, props.style);\n  }\n  if (props.className && element.props.className) {\n    props.className = element.props.className + ' ' + props.className;\n  }\n  return _react2.default.cloneElement(element, props);\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Resizable = __webpack_require__(8);\n\nvar _Resizable2 = _interopRequireDefault(_Resizable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// An example use of Resizable.\nvar ResizableBox = function (_React$Component) {\n  _inherits(ResizableBox, _React$Component);\n\n  function ResizableBox() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResizableBox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      width: _this.props.width,\n      height: _this.props.height\n    }, _this.onResize = function (e, data) {\n      var size = data.size;\n      var width = size.width,\n          height = size.height;\n\n\n      if (_this.props.onResize) {\n        e.persist && e.persist();\n        _this.setState(size, function () {\n          return _this.props.onResize && _this.props.onResize(e, data);\n        });\n      } else {\n        _this.setState(size);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ResizableBox.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  ResizableBox.prototype.render = function render() {\n    // Basic wrapper around a Resizable instance.\n    // If you use Resizable directly, you are responsible for updating the child component\n    // with a new width and height.\n    var _props = this.props,\n        handle = _props.handle,\n        handleSize = _props.handleSize,\n        onResize = _props.onResize,\n        onResizeStart = _props.onResizeStart,\n        onResizeStop = _props.onResizeStop,\n        draggableOpts = _props.draggableOpts,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        width = _props.width,\n        height = _props.height,\n        resizeHandles = _props.resizeHandles,\n        props = _objectWithoutProperties(_props, ['handle', 'handleSize', 'onResize', 'onResizeStart', 'onResizeStop', 'draggableOpts', 'minConstraints', 'maxConstraints', 'lockAspectRatio', 'axis', 'width', 'height', 'resizeHandles']);\n\n    return _react2.default.createElement(\n      _Resizable2.default,\n      {\n        handle: handle,\n        handleSize: handleSize,\n        width: this.state.width,\n        height: this.state.height,\n        onResizeStart: onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: onResizeStop,\n        draggableOpts: draggableOpts,\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        lockAspectRatio: lockAspectRatio,\n        axis: axis,\n        resizeHandles: resizeHandles\n      },\n      _react2.default.createElement('div', _extends({ style: { width: this.state.width + 'px', height: this.state.height + 'px' } }, props))\n    );\n  };\n\n  return ResizableBox;\n}(_react2.default.Component);\n\nResizableBox.propTypes = {\n  height: _propTypes2.default.number,\n  width: _propTypes2.default.number\n};\nResizableBox.defaultProps = {\n  handleSize: [20, 20]\n};\nexports.default = ResizableBox;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = __webpack_require__(3);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = __webpack_require__(2);\n\nvar _responsiveUtils = __webpack_require__(9);\n\nvar _ReactGridLayout = __webpack_require__(4);\n\nvar _ReactGridLayout2 = _interopRequireDefault(_ReactGridLayout);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar noop = function noop() {};\nvar type = function type(obj) {\n  return Object.prototype.toString.call(obj);\n};\n\nvar ResponsiveReactGridLayout = function (_React$Component) {\n  _inherits(ResponsiveReactGridLayout, _React$Component);\n\n  function ResponsiveReactGridLayout() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResponsiveReactGridLayout);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = _this.generateInitialState(), _this.onLayoutChange = function (layout) {\n      var _extends2;\n\n      _this.props.onLayoutChange(layout, _extends({}, _this.props.layouts, (_extends2 = {}, _extends2[_this.state.breakpoint] = layout, _extends2)));\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // This should only include propTypes needed in this code; RGL itself\n  // will do validation of the rest props passed to it.\n\n\n  ResponsiveReactGridLayout.prototype.generateInitialState = function generateInitialState() {\n    var _props = this.props,\n        width = _props.width,\n        breakpoints = _props.breakpoints,\n        layouts = _props.layouts,\n        verticalCompact = _props.verticalCompact,\n        cols = _props.cols;\n\n    var breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    var colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    var initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, verticalCompact);\n\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  };\n\n  ResponsiveReactGridLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\n    // Allow parent to set width or breakpoint directly.\n    if (nextProps.width != this.props.width || nextProps.breakpoint !== this.props.breakpoint || !(0, _lodash2.default)(nextProps.breakpoints, this.props.breakpoints) || !(0, _lodash2.default)(nextProps.cols, this.props.cols)) {\n      this.onWidthChange(nextProps);\n    }\n\n    // Allow parent to set layouts directly.\n    else if (!(0, _lodash2.default)(nextProps.layouts, this.props.layouts)) {\n        var _state = this.state,\n            _breakpoint = _state.breakpoint,\n            _cols = _state.cols;\n\n        // Since we're setting an entirely new layout object, we must generate a new responsive layout\n        // if one does not exist.\n\n        var newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, _breakpoint, _breakpoint, _cols, nextProps.verticalCompact);\n        this.setState({ layout: newLayout });\n      }\n  };\n\n  // wrap layouts so we do not need to pass layouts to child\n\n\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  ResponsiveReactGridLayout.prototype.onWidthChange = function onWidthChange(nextProps) {\n    var breakpoints = nextProps.breakpoints,\n        cols = nextProps.cols,\n        layouts = nextProps.layouts,\n        verticalCompact = nextProps.verticalCompact;\n\n    var newBreakpoint = nextProps.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(nextProps.breakpoints, nextProps.width);\n\n    var lastBreakpoint = this.state.breakpoint;\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || this.props.breakpoints !== breakpoints || this.props.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in layouts)) layouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      var newCols = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n      var _layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, verticalCompact);\n\n      // This adds missing items.\n      _layout = (0, _utils.synchronizeLayoutWithChildren)(_layout, nextProps.children, newCols, verticalCompact);\n\n      // Store the new layout.\n      layouts[newBreakpoint] = _layout;\n\n      // callbacks\n      this.props.onLayoutChange(_layout, layouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onWidthChange(nextProps.width, nextProps.margin, newCols, nextProps.containerPadding);\n\n      this.setState({ breakpoint: newBreakpoint, layout: _layout, cols: newCols });\n    }\n  };\n\n  ResponsiveReactGridLayout.prototype.render = function render() {\n    // eslint-disable-next-line no-unused-vars\n    var _props2 = this.props,\n        breakpoint = _props2.breakpoint,\n        breakpoints = _props2.breakpoints,\n        cols = _props2.cols,\n        layouts = _props2.layouts,\n        onBreakpointChange = _props2.onBreakpointChange,\n        onLayoutChange = _props2.onLayoutChange,\n        onWidthChange = _props2.onWidthChange,\n        other = _objectWithoutProperties(_props2, ['breakpoint', 'breakpoints', 'cols', 'layouts', 'onBreakpointChange', 'onLayoutChange', 'onWidthChange']);\n\n    return _react2.default.createElement(_ReactGridLayout2.default, _extends({}, other, {\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  };\n\n  return ResponsiveReactGridLayout;\n}(_react2.default.Component);\n\nResponsiveReactGridLayout.propTypes = {\n\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes2.default.string,\n\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes2.default.object,\n\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes2.default.object,\n\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts: function layouts(props, propName) {\n    if (type(props[propName]) !== '[object Object]') {\n      throw new Error('Layout property must be an object. Received: ' + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(function (key) {\n      if (!(key in props.breakpoints)) {\n        throw new Error('Each key in layouts must align with a key in breakpoints.');\n      }\n      (0, _utils.validateLayout)(props.layouts[key], 'layouts.' + key);\n    });\n  },\n\n\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes2.default.number.isRequired,\n\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes2.default.func,\n\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes2.default.func,\n\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes2.default.func\n};\nResponsiveReactGridLayout.defaultProps = {\n  breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n  cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n  layouts: {},\n  onBreakpointChange: noop,\n  onLayoutChange: noop,\n  onWidthChange: noop\n};\nexports.default = ResponsiveReactGridLayout;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = __webpack_require__(7);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n * A simple HOC that provides facility for listening to container resizes.\n */\nvar WidthProvider = function WidthProvider(ComposedComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    function _class() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n        width: 1280\n      }, _this.mounted = false, _this.onWindowResize = function (_event) {\n        if (!_this.mounted) return;\n        var node = _reactDom2.default.findDOMNode(_this); // Flow casts this to Text | Element\n        if (node instanceof HTMLElement) _this.setState({ width: node.offsetWidth });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _class.prototype.componentDidMount = function componentDidMount() {\n      this.mounted = true;\n\n      window.addEventListener('resize', this.onWindowResize);\n      // Call to properly set the breakpoint and resize the elements.\n      // Note that if you're doing a full-width element, this can get a little wonky if a scrollbar\n      // appears because of the grid. In that case, fire your own resize event, or set `overflow: scroll` on your body.\n      this.onWindowResize();\n    };\n\n    _class.prototype.componentWillUnmount = function componentWillUnmount() {\n      this.mounted = false;\n      window.removeEventListener('resize', this.onWindowResize);\n    };\n\n    _class.prototype.render = function render() {\n      if (this.props.measureBeforeMount && !this.mounted) {\n        return _react2.default.createElement('div', { className: this.props.className, style: this.props.style });\n      }\n\n      return _react2.default.createElement(ComposedComponent, _extends({}, this.props, this.state));\n    };\n\n    return _class;\n  }(_react2.default.Component), _class.defaultProps = {\n    measureBeforeMount: false\n  }, _class.propTypes = {\n    // If true, will not render children until mounted. Useful for getting the exact width before\n    // rendering, to prevent any unsightly resizing.\n    measureBeforeMount: _propTypes2.default.bool\n  }, _temp2;\n};\n\nexports.default = WidthProvider;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// react-grid-layout.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1106afbb76b561959cc4","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}\n// module id = 0\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 1\n// module chunks = 0","// @flow\nimport isEqual from 'lodash.isequal';\nimport React from 'react';\nimport type {ChildrenArray as ReactChildrenArray, Element as ReactElement} from 'react';\nexport type LayoutItem = {\n  w: number, h: number, x: number, y: number, i: string,\n  minW?: number, minH?: number, maxW?: number, maxH?: number,\n  moved?: boolean, static?: boolean,\n  isDraggable?: ?boolean, isResizable?: ?boolean\n};\nexport type Layout = Array<LayoutItem>;\nexport type Position = {left: number, top: number, width: number, height: number};\nexport type ReactDraggableCallbackData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number\n};\n\nexport type PartialPosition = {left: number, top: number};\nexport type Size = {width: number, height: number};\nexport type GridDragEvent = {e: Event, node: HTMLElement, newPosition: PartialPosition};\nexport type GridResizeEvent = {e: Event, node: HTMLElement, size: Size};\n\ntype REl = ReactElement<any>;\nexport type ReactChildren = ReactChildrenArray<REl>;\n\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\nexport type EventCallback =\n  (Layout, oldItem: ?LayoutItem, newItem: ?LayoutItem, placeholder: ?LayoutItem, Event, ?HTMLElement) => void;\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\nexport function bottom(layout: Layout): number {\n  let max = 0, bottomY;\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\n\nexport function cloneLayout(layout: Layout): Layout {\n  const newLayout = Array(layout.length);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    newLayout[i] = cloneLayoutItem(layout[i]);\n  }\n  return newLayout;\n}\n\n// Fast path to cloning, since this is monomorphic\nexport function cloneLayoutItem(layoutItem: LayoutItem): LayoutItem {\n  return {\n    w: layoutItem.w, h: layoutItem.h, x: layoutItem.x, y: layoutItem.y, i: layoutItem.i,\n    minW: layoutItem.minW, maxW: layoutItem.maxW, minH: layoutItem.minH, maxH: layoutItem.maxH, axis: layoutItem.axis,\n    moved: Boolean(layoutItem.moved), static: Boolean(layoutItem.static), overlap: Boolean(layoutItem.overlap),\n    // These can be null\n    isDraggable: layoutItem.isDraggable, isResizable: layoutItem.isResizable\n  };\n}\n\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\nexport function childrenEqual(a: ReactChildren, b: ReactChildren): boolean {\n  // $FlowIgnore: Appears to think map calls back w/array\n  return isEqual(React.Children.map(a, (c) => c.key), React.Children.map(b, (c) => c.key));\n}\n\n/**\n * Given two layoutitems, check if they collide.\n */\nexport function collides(l1: LayoutItem, l2: LayoutItem): boolean {\n  if (l1.overlap || l2.overlap) return false;\n  if (l1 === l2) return false; // same element\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n  return true; // boxes overlap\n}\n\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}       Compacted Layout.\n */\nexport function compact(layout: Layout, verticalCompact: boolean): Layout {\n  // Statics go in the compareWith array right away so items flow around them.\n  const compareWith = getStatics(layout);\n  // We go through the items by row and column.\n  const sorted = sortLayoutItemsByRowCol(layout);\n  // Holding for new items.\n  const out = Array(layout.length);\n\n  for (let i = 0, len = sorted.length; i < len; i++) {\n    let l = cloneLayoutItem(sorted[i]);\n\n    // Add to output array to make sure they still come out in the right order.\n    out[layout.indexOf(sorted[i])] = l;\n\n    // Clear moved flag, if it exists.\n    l.moved = false;\n  }\n\n  return out;\n}\n\n/**\n * Compact an item in the layout.\n */\nexport function compactItem(compareWith: Layout, l: LayoutItem, verticalCompact: boolean): LayoutItem {\n  if (verticalCompact) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y);\n\n    // Move the element up as far as it can go without colliding.\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  }\n\n  // Move it down, and keep moving it down if it's colliding.\n  let collides;\n  while((collides = getFirstCollision(compareWith, l))) {\n    l.y = collides.y + collides.h;\n  }\n  return l;\n}\n\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\nexport function correctBounds(layout: Layout, bounds: {cols: number}): Layout {\n  const collidesWith = getStatics(layout);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const l = layout[i];\n    // Overflows right\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\n    // Overflows left\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n    if (!l.static) collidesWith.push(l);\n    else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while(getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\nexport function getLayoutItem(layout: Layout, id: string): ?LayoutItem {\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (layout[i].i === id) return layout[i];\n  }\n}\n\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\nexport function getFirstCollision(layout: Layout, layoutItem: LayoutItem): ?LayoutItem {\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (collides(layout[i], layoutItem)) return layout[i];\n  }\n}\n\nexport function getAllCollisions(layout: Layout, layoutItem: LayoutItem): Array<LayoutItem> {\n  return layout.filter((l) => collides(l, layoutItem));\n}\n\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\nexport function getStatics(layout: Layout): Array<LayoutItem> {\n  return layout.filter((l) => l.static);\n}\n\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * @param  {Array}      layout Full layout to modify.\n * @param  {LayoutItem} l      element to move.\n * @param  {Number}     [x]    X position in grid units.\n * @param  {Number}     [y]    Y position in grid units.\n * @param  {Boolean}    [isUserAction] If true, designates that the item we're moving is\n *                                     being dragged/resized by the user.\n */\nexport function moveElement(layout: Layout, l: LayoutItem, x: ?number, y: ?number, isUserAction: ?boolean): Layout {\n  if (l.static) return layout;\n\n  // Short-circuit if nothing to do.\n  if (l.y === y && l.x === x) return layout;\n\n  const movingUp = y && l.y > y;\n  // This is quite a bit faster than extending the object\n  if (typeof x === 'number') l.x = x;\n  if (typeof y === 'number') l.y = y;\n  l.moved = true;\n\n  // Griffith: No need to move elements away.\n  // In case of collision we want to restore the item's original position.\n  return layout;\n\n  // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n  let sorted = sortLayoutItemsByRowCol(layout);\n  if (movingUp) sorted = sorted.reverse();\n  const collisions = getAllCollisions(sorted, l);\n\n  // Move each item that collides away from this element.\n  for (let i = 0, len = collisions.length; i < len; i++) {\n    const collision = collisions[i];\n    // console.log('resolving collision between', l.i, 'at', l.y, 'and', collision.i, 'at', collision.y);\n\n    // Short circuit so we can't infinite loop\n    if (collision.moved) continue;\n\n    // This makes it feel a bit more precise by waiting to swap for just a bit when moving up.\n    if (l.y > collision.y && l.y - collision.y > collision.h / 4) continue;\n\n    // Don't move static items - we have to move *this* element away\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction);\n    } else {\n      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction);\n    }\n  }\n\n  return layout;\n}\n\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n * @param  {Boolean} [isUserAction]  If true, designates that the item we're moving is being dragged/resized\n *                                   by the user.\n */\nexport function moveElementAwayFromCollision(layout: Layout, collidesWith: LayoutItem,\n                                             itemToMove: LayoutItem, isUserAction: ?boolean): Layout {\n\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n  if (isUserAction) {\n    // Make a mock item so we don't modify the item here, only modify in moveElement.\n    const fakeItem: LayoutItem = {\n      x: itemToMove.x,\n      y: itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: '-1'\n    };\n    fakeItem.y = Math.max(collidesWith.y - itemToMove.h, 0);\n    if (!getFirstCollision(layout, fakeItem)) {\n      return moveElement(layout, itemToMove, undefined, fakeItem.y);\n    }\n  }\n\n  // Previously this was optimized to move below the collision directly, but this can cause problems\n  // with cascading moves, as an item may actually leapfrog a collision and cause a reversal in order.\n  return moveElement(layout, itemToMove, undefined, itemToMove.y + 1);\n}\n\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\nexport function perc(num: number): string {\n  return num * 100 + '%';\n}\n\nexport function setTransform({top, left, width, height}: Position): Object {\n  // Replace unitless items with px\n  const translate = `translate(${left}px,${top}px)`;\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: 'absolute'\n  };\n}\n\nexport function setTopLeft({top, left, width, height}: Position): Object {\n  return {\n    top: `${top}px`,\n    left: `${left}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: 'absolute'\n  };\n}\n\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\nexport function sortLayoutItemsByRowCol(layout: Layout): Layout {\n  return [].concat(layout).sort(function(a, b) {\n    if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n    return -1;\n  });\n}\n\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout vertically.\n * @return {Array}                Working layout.\n */\nexport function synchronizeLayoutWithChildren(initialLayout: Layout, children: ReactChildren,\n                                              cols: number, verticalCompact: boolean): Layout {\n  initialLayout = initialLayout || [];\n\n  // Generate one layout item per child.\n  let layout: Layout = [];\n  React.Children.forEach(children, (child: ReactElement<any>, i: number) => {\n    // Don't overwrite if it already exists.\n    const exists = getLayoutItem(initialLayout, String(child.key));\n    if (exists) {\n      layout[i] = cloneLayoutItem(exists);\n    } else {\n      if (!isProduction && child.props._grid) {\n        console.warn('`_grid` properties on children have been deprecated as of React 15.2. ' + // eslint-disable-line\n          'Please use `data-grid` or add your properties directly to the `layout`.');\n      }\n      const g = child.props['data-grid'] || child.props._grid;\n\n      // Hey, this item has a data-grid property, use it.\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], 'ReactGridLayout.children');\n        }\n\n        layout[i] = cloneLayoutItem({...g, i: child.key});\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        layout[i] = cloneLayoutItem({w: 1, h: 1, x: 0, y: bottom(layout), i: String(child.key)});\n      }\n    }\n  });\n\n  // Correct the layout.\n  layout = correctBounds(layout, {cols: cols});\n  layout = compact(layout, verticalCompact);\n\n  return layout;\n}\n\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\nexport function validateLayout(layout: Layout, contextName: string): void {\n  contextName = contextName || \"Layout\";\n  const subProps = ['x', 'y', 'w', 'h'];\n  if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const item = layout[i];\n    for (let j = 0; j < subProps.length; j++) {\n      if (typeof item[subProps[j]] !== 'number') {\n        throw new Error('ReactGridLayout: ' + contextName + '[' + i + '].' + subProps[j] + ' must be a number!');\n      }\n    }\n    if (item.i && typeof item.i !== 'string') {\n      throw new Error('ReactGridLayout: ' + contextName + '[' + i + '].i must be a string!');\n    }\n    if (item.static !== undefined && typeof item.static !== 'boolean') {\n      throw new Error('ReactGridLayout: ' + contextName + '[' + i + '].static must be a boolean!');\n    }\n  }\n}\n\n// Flow can't really figure this out, so we just use Object\nexport function autoBindHandlers(el: Object, fns: Array<string>): void {\n  fns.forEach((key) => el[key] = el[key].bind(el));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils.js","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.isequal/index.js\n// module id = 3\n// module chunks = 0","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport classNames from 'classnames';\nimport {autoBindHandlers, bottom, childrenEqual, cloneLayoutItem, compact, getLayoutItem, moveElement,\n  getFirstCollision, synchronizeLayoutWithChildren, validateLayout} from './utils';\nimport GridItem from './GridItem';\nimport type {ChildrenArray as ReactChildrenArray, Element as ReactElement} from 'react';\nconst noop = function() {};\n\n// Types\nimport type {EventCallback, GridResizeEvent, GridDragEvent, Layout, LayoutItem} from './utils';\ntype State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem\n};\n\nexport type Props = {\n  className: string,\n  style: Object,\n  width: number,\n  autoSize: boolean,\n  cols: number,\n  draggableCancel: string,\n  draggableHandle: string,\n  verticalCompact: boolean,\n  layout: Layout,\n  margin: [number, number],\n  containerPadding: [number, number],\n  rowHeight: number,\n  maxRows: number,\n  isDraggable: boolean,\n  isResizable: boolean,\n  useCSSTransforms: boolean,\n\n  // Callbacks\n  onLayoutChange: (Layout) => void,\n  onDrag: EventCallback,\n  onDragStart: EventCallback,\n  onDragStop: EventCallback,\n  onResize: EventCallback,\n  onResizeStart: EventCallback,\n  onResizeStop: EventCallback,\n  children: ReactChildrenArray<ReactElement<any>>,\n};\n// End Types\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nexport default class ReactGridLayout extends React.Component<Props, State> {\n  // TODO publish internal ReactClass displayName transform\n  static displayName = \"ReactGridLayout\";\n\n  static propTypes = {\n    //\n    // Basic props\n    //\n    className: PropTypes.string,\n    style: PropTypes.object,\n\n    // This can be set explicitly. If it is not set, it will automatically\n    // be set to the container width. Note that resizes will *not* cause this to adjust.\n    // If you need that behavior, use WidthProvider.\n    width: PropTypes.number,\n\n    // If true, the container height swells and contracts to fit contents\n    autoSize: PropTypes.bool,\n    // # of cols.\n    cols: PropTypes.number,\n\n    // A selector that will not be draggable.\n    draggableCancel: PropTypes.string,\n    // A selector for the draggable handler\n    draggableHandle: PropTypes.string,\n\n    // If true, the layout will compact vertically\n    verticalCompact: PropTypes.bool,\n\n    // layout is an array of object with the format:\n    // {x: Number, y: Number, w: Number, h: Number, i: String}\n    layout: function (props) {\n      var layout = props.layout;\n      // I hope you're setting the data-grid property on the grid items\n      if (layout === undefined) return;\n      validateLayout(layout, 'layout');\n    },\n\n    //\n    // Grid Dimensions\n    //\n\n    // Margin between items [x, y] in px\n    margin: PropTypes.arrayOf(PropTypes.number),\n    // Padding inside the container [x, y] in px\n    containerPadding: PropTypes.arrayOf(PropTypes.number),\n    // Rows have a static height, but you can change this based on breakpoints if you like\n    rowHeight: PropTypes.number,\n    // Default Infinity, but you can specify a max here if you like.\n    // Note that this isn't fully fleshed out and won't error if you specify a layout that\n    // extends beyond the row capacity. It will, however, not allow users to drag/resize\n    // an item past the barrier. They can push items beyond the barrier, though.\n    // Intentionally not documented for this reason.\n    maxRows: PropTypes.number,\n\n    //\n    // Flags\n    //\n    isDraggable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    // Use CSS transforms instead of top/left\n    useCSSTransforms: PropTypes.bool,\n\n    //\n    // Callbacks\n    //\n\n    // Callback so you can save the layout. Calls after each drag & resize stops.\n    onLayoutChange: PropTypes.func,\n\n    // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n    // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n    onDragStart: PropTypes.func,\n    // Calls on each drag movement.\n    onDrag: PropTypes.func,\n    // Calls when drag is complete.\n    onDragStop: PropTypes.func,\n    //Calls when resize starts.\n    onResizeStart: PropTypes.func,\n    // Calls when resize movement happens.\n    onResize: PropTypes.func,\n    // Calls when resize is complete.\n    onResizeStop: PropTypes.func,\n\n    //\n    // Other validations\n    //\n\n    // Children must not have duplicate keys.\n    children: function (props, propName, _componentName) {\n      var children = props[propName];\n\n      // Check children keys for duplicates. Throw if found.\n      var keys = {};\n      React.Children.forEach(children, function (child) {\n        if (keys[child.key]) {\n          throw new Error(\"Duplicate child key \\\"\" + child.key + \"\\\" found! This will cause problems in ReactGridLayout.\");\n        }\n        keys[child.key] = true;\n      });\n    }\n  };\n\n  static defaultProps = {\n    autoSize: true,\n    cols: 12,\n    className: '',\n    rowHeight: 150,\n    maxRows: Infinity, // infinite vertical growth\n    layout: [],\n    margin: [10, 10],\n    isDraggable: true,\n    isResizable: true,\n    useCSSTransforms: true,\n    verticalCompact: true,\n    onLayoutChange: noop,\n    onDragStart: noop,\n    onDrag: noop,\n    onDragStop: noop,\n    onResizeStart: noop,\n    onResize: noop,\n    onResizeStop: noop\n  };\n\n  state: State = {\n    activeDrag: null,\n    layout: synchronizeLayoutWithChildren(this.props.layout, this.props.children,\n                                          this.props.cols, this.props.verticalCompact),\n    mounted: false,\n    oldDragItem: null,\n    oldLayout: null,\n    oldResizeItem: null,\n  };\n\n  constructor(props: Props, context: any): void {\n    super(props, context);\n    autoBindHandlers(this, ['onDragStart', 'onDrag', 'onDragStop', 'onResizeStart', 'onResize', 'onResizeStop']);\n  }\n\n  componentDidMount() {\n    this.setState({mounted: true});\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    let newLayoutBase;\n    // Allow parent to set layout directly.\n    if (!isEqual(nextProps.layout, this.props.layout)) {\n      newLayoutBase = nextProps.layout;\n    }\n\n    // If children change, also regenerate the layout. Use our state\n    // as the base in case because it may be more up to date than\n    // what is in props.\n    else if (!childrenEqual(this.props.children, nextProps.children)) {\n      newLayoutBase = this.state.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = synchronizeLayoutWithChildren(newLayoutBase, nextProps.children,\n                                                      nextProps.cols, nextProps.verticalCompact);\n      const oldLayout = this.state.layout;\n      this.setState({layout: newLayout});\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() {\n    if (!this.props.autoSize) return;\n    const nbRow = bottom(this.state.layout);\n    const containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + 'px';\n  }\n\n  /**\n   * When dragging starts\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n  onDragStart(i:string, x:number, y:number, {e, node}: GridDragEvent) {\n    const {layout} = this.state;\n    var l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    this.setState({oldDragItem: cloneLayoutItem(l), oldLayout: this.state.layout});\n\n    this.props.onDragStart(layout, l, l, null, e, node);\n  }\n\n  /**\n   * Each drag movement create a new dragelement and move the element to the dragged location\n   * @param {String} i Id of the child\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n  onDrag(i:string, x:number, y:number, {e, node}: GridDragEvent) {\n    const {oldDragItem} = this.state;\n    let {layout} = this.state;\n    var l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    // Create placeholder (display only)\n    var placeholder = {\n      w: l.w, h: l.h, x: l.x, y: l.y, placeholder: true, i: i\n    };\n\n    layout = moveElement(layout, l, x, y, true /* isUserAction */);\n\n    this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n    this.setState({ activeDrag: placeholder });\n  }\n\n  /**\n   * When dragging stops, figure out which position the element is closest to and update its x and y.\n   * @param  {String} i Index of the child.\n   * @param {Number} x X position of the move\n   * @param {Number} y Y position of the move\n   * @param {Event} e The mousedown event\n   * @param {Element} node The current dragging DOM element\n   */\n  onDragStop(i:string, x:number, y:number, {e, node}: GridDragEvent) {\n    const {oldDragItem} = this.state;\n    let {layout} = this.state;\n    const l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    // Move the element here\n    const oldX = l.x;\n    layout = moveElement(layout, l, x, y, true /* isUserAction */);\n    if (oldDragItem.y === y && getFirstCollision(layout, l)) {\n      l.x = oldX;\n    }\n\n    // Set state\n    const newLayout = compact(layout, this.props.verticalCompact);\n    const {oldLayout} = this.state;\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldDragItem: null,\n      oldLayout: null,\n    });\n\n    this.props.onDragStop(layout, oldDragItem, l, null, e, node);\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  }\n\n  onLayoutMaybeChanged(newLayout: Layout, oldLayout: ?Layout) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!isEqual(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n\n  onResizeStart(i:string, w:number, h:number, {e, node}: GridResizeEvent) {\n    const {layout} = this.state;\n    var l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    this.setState({\n      oldResizeItem: cloneLayoutItem(l),\n      oldLayout: this.state.layout\n    });\n\n    this.props.onResizeStart(layout, l, l, null, e, node);\n  }\n\n  onResize(i:string, w:number, h:number, {e, node}: GridResizeEvent) {\n    const {layout, oldResizeItem} = this.state;\n    var l = getLayoutItem(layout, i);\n    if (!l) return;\n\n    // Create placeholder element (display only)\n    var placeholder = {\n      w: w, h: h, x: l.x, y: l.y, static: true, i: i\n    };\n\n    this.props.onResize(layout, oldResizeItem, l, placeholder, e, node);\n\n    // Re-compact the layout and set the drag placeholder.\n    this.setState({ activeDrag: placeholder });\n  }\n\n  onResizeStop(i:string, w:number, h:number, {e, node}: GridResizeEvent) {\n    const {layout, oldResizeItem} = this.state;\n    var l = getLayoutItem(layout, i);\n    var oldW = l.w;\n\n    l.w = w;\n    if (getFirstCollision(layout, l)) {\n      l.w = oldW;\n    }\n\n    // Set state\n    const newLayout = compact(layout, this.props.verticalCompact);\n    const {oldLayout} = this.state;\n    this.setState({\n      activeDrag: null,\n      layout: newLayout,\n      oldResizeItem: null,\n      oldLayout: null\n    });\n\n    this.props.onResizeStop(layout, oldResizeItem, l, null, e, node);\n    this.onLayoutMaybeChanged(newLayout, oldLayout);\n  }\n\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder(): ?ReactElement<any> {\n    const {activeDrag} = this.state;\n    if (!activeDrag) return null;\n    const {width, cols, margin, containerPadding, rowHeight, maxRows, useCSSTransforms} = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return (\n      <GridItem\n        w={activeDrag.w}\n        h={activeDrag.h}\n        x={activeDrag.x}\n        y={activeDrag.y}\n        i={activeDrag.i}\n        className=\"react-grid-placeholder\"\n        containerWidth={width}\n        cols={cols}\n        margin={margin}\n        containerPadding={containerPadding || margin}\n        maxRows={maxRows}\n        rowHeight={rowHeight}\n        isDraggable={false}\n        isResizable={false}\n        useCSSTransforms={useCSSTransforms}>\n        <div />\n      </GridItem>\n    );\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child: ReactElement<any>): ?ReactElement<any> {\n    if (!child.key) return;\n    const l = getLayoutItem(this.state.layout, String(child.key));\n    if (!l) return null;\n    const {width, cols, margin, containerPadding, rowHeight,\n           maxRows, isDraggable, isResizable, useCSSTransforms,\n           draggableCancel, draggableHandle} = this.props;\n    const {mounted} = this.state;\n\n    // Parse 'static'. Any properties defined directly on the grid item will take precedence.\n    const draggable = Boolean(!l.static && isDraggable && (l.isDraggable || l.isDraggable == null));\n    const resizable = Boolean(!l.static && isResizable && (l.isResizable || l.isResizable == null));\n\n    return (\n      <GridItem\n        containerWidth={width}\n        cols={cols}\n        margin={margin}\n        containerPadding={containerPadding || margin}\n        maxRows={maxRows}\n        rowHeight={rowHeight}\n        cancel={draggableCancel}\n        handle={draggableHandle}\n        onDragStop={this.onDragStop}\n        onDragStart={this.onDragStart}\n        onDrag={this.onDrag}\n        onResizeStart={this.onResizeStart}\n        onResize={this.onResize}\n        onResizeStop={this.onResizeStop}\n        isDraggable={draggable}\n        isResizable={resizable}\n        useCSSTransforms={useCSSTransforms && mounted}\n        usePercentages={!mounted}\n\n        w={l.w}\n        h={l.h}\n        x={l.x}\n        y={l.y}\n        i={l.i}\n        minH={l.minH}\n        minW={l.minW}\n        maxH={l.maxH}\n        maxW={l.maxW}\n        axis={l.axis}\n        static={l.static}\n        overlap={l.overlap}\n        >\n        {child}\n      </GridItem>\n    );\n  }\n\n  render() {\n    const {className, style} = this.props;\n\n    const mergedStyle = {\n      height: this.containerHeight(),\n      ...style\n    };\n\n    return (\n      <div className={classNames('react-grid-layout', className)} style={mergedStyle}>\n        {\n          // $FlowIgnore: Appears to think map calls back w/array\n          React.Children.map(this.props.children, (child) => this.processGridItem(child))\n        }\n        {this.placeholder()}\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ReactGridLayout.jsx","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/classnames/index.js\n// module id = 5\n// module chunks = 0","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react-dom'), require('react')) :\n\ttypeof define === 'function' && define.amd ? define(['react-dom', 'react'], factory) :\n\t(global.ReactDraggable = factory(global.ReactDOM,global.React));\n}(this, (function (ReactDOM,React) { 'use strict';\n\n\tReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n\tReact = React && React.hasOwnProperty('default') ? React['default'] : React;\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\n\tvar emptyFunction_1 = emptyFunction;\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\n\tvar validateFormat = function validateFormat(format) {};\n\n\t{\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\n\tvar invariant_1 = invariant;\n\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\n\tvar warning = emptyFunction_1;\n\n\t{\n\t  var printWarning = function printWarning(format) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\n\t    var argIndex = 0;\n\t    var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t      return args[argIndex++];\n\t    });\n\t    if (typeof console !== 'undefined') {\n\t      console.error(message);\n\t    }\n\t    try {\n\t      // --- Welcome to debugging React ---\n\t      // This error was thrown as a convenience so that you can use this stack\n\t      // to find the callsite that caused this warning to fire.\n\t      throw new Error(message);\n\t    } catch (x) {}\n\t  };\n\n\t  warning = function warning(condition, format) {\n\t    if (format === undefined) {\n\t      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t    }\n\n\t    if (format.indexOf('Failed Composite propType: ') === 0) {\n\t      return; // Ignore CompositeComponent proptype check.\n\t    }\n\n\t    if (!condition) {\n\t      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t        args[_key2 - 2] = arguments[_key2];\n\t      }\n\n\t      printWarning.apply(undefined, [format].concat(args));\n\t    }\n\t  };\n\t}\n\n\tvar warning_1 = warning;\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\n\t\treturn Object(val);\n\t}\n\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn to;\n\t};\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\n\tvar ReactPropTypesSecret_1 = ReactPropTypesSecret;\n\n\t{\n\t  var invariant$1 = invariant_1;\n\t  var warning$1 = warning_1;\n\t  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;\n\t  var loggedTypeFailures = {};\n\t}\n\n\t/**\n\t * Assert that the values match with the type specs.\n\t * Error messages are memorized and will only be shown once.\n\t *\n\t * @param {object} typeSpecs Map of name to a ReactPropType\n\t * @param {object} values Runtime values that need to be type-checked\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {?Function} getStack Returns the component stack.\n\t * @private\n\t */\n\tfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n\t  {\n\t    for (var typeSpecName in typeSpecs) {\n\t      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n\t        var error;\n\t        // Prop type validation may throw. In case they do, we don't want to\n\t        // fail the render phase where it didn't fail before. So we log it.\n\t        // After these have been cleaned up, we'll let them throw.\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          invariant$1(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n\t          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        warning$1(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\t        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t          // Only monitor this failure once because there tends to be a lot of the\n\t          // same error.\n\t          loggedTypeFailures[error.message] = true;\n\n\t          var stack = getStack ? getStack() : '';\n\n\t          warning$1(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\n\tvar checkPropTypes_1 = checkPropTypes;\n\n\tvar factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {\n\t  /* global Symbol */\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n\t  /**\n\t   * Returns the iterator method function contained on the iterable object.\n\t   *\n\t   * Be sure to invoke the function with the iterable as context:\n\t   *\n\t   *     var iteratorFn = getIteratorFn(myIterable);\n\t   *     if (iteratorFn) {\n\t   *       var iterator = iteratorFn.call(myIterable);\n\t   *       ...\n\t   *     }\n\t   *\n\t   * @param {?object} maybeIterable\n\t   * @return {?function}\n\t   */\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\n\t  /**\n\t   * Collection of methods that allow declaration and validation of props that are\n\t   * supplied to React components. Example usage:\n\t   *\n\t   *   var Props = require('ReactPropTypes');\n\t   *   var MyArticle = React.createClass({\n\t   *     propTypes: {\n\t   *       // An optional string prop named \"description\".\n\t   *       description: Props.string,\n\t   *\n\t   *       // A required enum prop named \"category\".\n\t   *       category: Props.oneOf(['News','Photos']).isRequired,\n\t   *\n\t   *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t   *       dialog: Props.instanceOf(Dialog).isRequired\n\t   *     },\n\t   *     render: function() { ... }\n\t   *   });\n\t   *\n\t   * A more formal specification of how these methods are used:\n\t   *\n\t   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t   *   decl := ReactPropTypes.{type}(.isRequired)?\n\t   *\n\t   * Each and every declaration produces a function with the same signature. This\n\t   * allows the creation of custom validation functions. For example:\n\t   *\n\t   *  var MyLink = React.createClass({\n\t   *    propTypes: {\n\t   *      // An optional string or URI prop named \"href\".\n\t   *      href: function(props, propName, componentName) {\n\t   *        var propValue = props[propName];\n\t   *        if (propValue != null && typeof propValue !== 'string' &&\n\t   *            !(propValue instanceof URI)) {\n\t   *          return new Error(\n\t   *            'Expected a string or an URI for ' + propName + ' in ' +\n\t   *            componentName\n\t   *          );\n\t   *        }\n\t   *      }\n\t   *    },\n\t   *    render: function() {...}\n\t   *  });\n\t   *\n\t   * @internal\n\t   */\n\n\t  var ANONYMOUS = '<<anonymous>>';\n\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t    symbol: createPrimitiveTypeChecker('symbol'),\n\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker,\n\t    exact: createStrictShapeTypeChecker,\n\t  };\n\n\t  /**\n\t   * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t   */\n\t  /*eslint-disable no-self-compare*/\n\t  function is(x, y) {\n\t    // SameValue algorithm\n\t    if (x === y) {\n\t      // Steps 1-5, 7-10\n\t      // Steps 6.b-6.e: +0 != -0\n\t      return x !== 0 || 1 / x === 1 / y;\n\t    } else {\n\t      // Step 6.a: NaN == NaN\n\t      return x !== x && y !== y;\n\t    }\n\t  }\n\t  /*eslint-enable no-self-compare*/\n\n\t  /**\n\t   * We use an Error-like object for backward compatibility as people may call\n\t   * PropTypes directly and inspect their output. However, we don't use real\n\t   * Errors anymore. We don't inspect their stack anyway, and creating them\n\t   * is prohibitively expensive if they are created too often, such as what\n\t   * happens in oneOfType() for any type before the one that matched.\n\t   */\n\t  function PropTypeError(message) {\n\t    this.message = message;\n\t    this.stack = '';\n\t  }\n\t  // Make `instanceof Error` still work for returned errors.\n\t  PropTypeError.prototype = Error.prototype;\n\n\t  function createChainableTypeChecker(validate) {\n\t    {\n\t      var manualPropTypeCallCache = {};\n\t      var manualPropTypeWarningCount = 0;\n\t    }\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\n\t      if (secret !== ReactPropTypesSecret_1) {\n\t        if (throwOnDirectAccess) {\n\t          // New behavior only for users of `prop-types` package\n\t          invariant_1(\n\t            false,\n\t            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t            'Use `PropTypes.checkPropTypes()` to call them. ' +\n\t            'Read more at http://fb.me/use-check-prop-types'\n\t          );\n\t        } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n\t          // Old behavior for people using React.PropTypes\n\t          var cacheKey = componentName + ':' + propName;\n\t          if (\n\t            !manualPropTypeCallCache[cacheKey] &&\n\t            // Avoid spamming the console because they are often not actionable except for lib authors\n\t            manualPropTypeWarningCount < 3\n\t          ) {\n\t            warning_1(\n\t              false,\n\t              'You are manually calling a React.PropTypes validation ' +\n\t              'function for the `%s` prop on `%s`. This is deprecated ' +\n\t              'and will throw in the standalone `prop-types` package. ' +\n\t              'You may be seeing this warning due to a third-party PropTypes ' +\n\t              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n\t              propFullName,\n\t              componentName\n\t            );\n\t            manualPropTypeCallCache[cacheKey] = true;\n\t            manualPropTypeWarningCount++;\n\t          }\n\t        }\n\t      }\n\t      if (props[propName] == null) {\n\t        if (isRequired) {\n\t          if (props[propName] === null) {\n\t            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n\t          }\n\t          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\n\t    return chainedCheckType;\n\t  }\n\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName, secret) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t        // check, but we can offer a more precise error message here rather than\n\t        // 'of type `object`'.\n\t        var preciseType = getPreciseType(propValue);\n\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction_1.thatReturnsNull);\n\t  }\n\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!isValidElement(propValue)) {\n\t        var propType = getPropType(propValue);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOf, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (is(propValue, expectedValues[i])) {\n\t          return null;\n\t        }\n\t      }\n\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (typeof typeChecker !== 'function') {\n\t        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n\t      }\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t      warning_1(false, 'Invalid argument supplied to oneOfType, expected an instance of array.');\n\t      return emptyFunction_1.thatReturnsNull;\n\t    }\n\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (typeof checker !== 'function') {\n\t        warning_1(\n\t          false,\n\t          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n\t          'received %s at index %s.',\n\t          getPostfixForTypeWarning(checker),\n\t          i\n\t        );\n\t        return emptyFunction_1.thatReturnsNull;\n\t      }\n\t    }\n\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {\n\t          return null;\n\t        }\n\t      }\n\n\t      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function createStrictShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      // We need to check all keys in case some are required but missing from\n\t      // props.\n\t      var allKeys = objectAssign({}, props[propName], shapeTypes);\n\t      for (var key in allKeys) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          return new PropTypeError(\n\t            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n\t            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n\t            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n\t          );\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\n\t    return createChainableTypeChecker(validate);\n\t  }\n\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || isValidElement(propValue)) {\n\t          return true;\n\t        }\n\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            // Iterator will provide entry [k,v] tuples rather than values.\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\n\t  function isSymbol(propType, propValue) {\n\t    // Native Symbol.\n\t    if (propType === 'symbol') {\n\t      return true;\n\t    }\n\n\t    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\t    if (propValue['@@toStringTag'] === 'Symbol') {\n\t      return true;\n\t    }\n\n\t    // Fallback for non-spec compliant Symbols which are polyfilled.\n\t    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\n\t  // Equivalent of `typeof` but with special handling for array and regexp.\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      // Old webkits (at least until Android 4.0) return 'function' rather than\n\t      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t      // passes PropTypes.object.\n\t      return 'object';\n\t    }\n\t    if (isSymbol(propType, propValue)) {\n\t      return 'symbol';\n\t    }\n\t    return propType;\n\t  }\n\n\t  // This handles more types than `getPropType`. Only used for error messages.\n\t  // See `createPrimitiveTypeChecker`.\n\t  function getPreciseType(propValue) {\n\t    if (typeof propValue === 'undefined' || propValue === null) {\n\t      return '' + propValue;\n\t    }\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\n\t  // Returns a string that is postfixed to a warning about an invalid type.\n\t  // For example, \"undefined\" or \"of type array\"\n\t  function getPostfixForTypeWarning(value) {\n\t    var type = getPreciseType(value);\n\t    switch (type) {\n\t      case 'array':\n\t      case 'object':\n\t        return 'an ' + type;\n\t      case 'boolean':\n\t      case 'date':\n\t      case 'regexp':\n\t        return 'a ' + type;\n\t      default:\n\t        return type;\n\t    }\n\t  }\n\n\t  // Returns class name of the object, if any.\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\n\t  ReactPropTypes.checkPropTypes = checkPropTypes_1;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\n\t  return ReactPropTypes;\n\t};\n\n\tvar propTypes = createCommonjsModule(function (module) {\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\n\t{\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = factoryWithTypeCheckers(isValidElement, throwOnDirectAccess);\n\t}\n\t});\n\n\tvar classnames = createCommonjsModule(function (module) {\n\t/*!\n\t  Copyright (c) 2016 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\n\t(function () {\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction classNames () {\n\t\t\tvar classes = [];\n\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\n\t\t\t\tvar argType = typeof arg;\n\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses.push(arg);\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn classes.join(' ');\n\t\t}\n\n\t\tif ('object' !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\tundefined('classnames', [], function () {\n\t\t\t\treturn classNames;\n\t\t\t});\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\t});\n\n\t// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\tfunction findInArray(array /*: Array<any> | TouchList*/, callback /*: Function*/) /*: any*/ {\n\t  for (var i = 0, length = array.length; i < length; i++) {\n\t    if (callback.apply(callback, [array[i], i, array])) return array[i];\n\t  }\n\t}\n\n\tfunction isFunction(func /*: any*/) /*: boolean*/ {\n\t  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n\t}\n\n\tfunction isNum(num /*: any*/) /*: boolean*/ {\n\t  return typeof num === 'number' && !isNaN(num);\n\t}\n\n\tfunction int(a /*: string*/) /*: number*/ {\n\t  return parseInt(a, 10);\n\t}\n\n\tfunction dontSetMe(props /*: Object*/, propName /*: string*/, componentName /*: string*/) {\n\t  if (props[propName]) {\n\t    return new Error('Invalid prop ' + propName + ' passed to ' + componentName + ' - do not set this, set it on the child.');\n\t  }\n\t}\n\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tfunction getPrefix() /*: string*/ {\n\t  var prop /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n\t  // Checking specifically for 'window.document' is for pseudo-browser server-side\n\t  // environments that define 'window' as the global context.\n\t  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n\t  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n\t  var style = window.document.documentElement.style;\n\n\t  if (prop in style) return '';\n\n\t  for (var i = 0; i < prefixes.length; i++) {\n\t    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n\t  }\n\n\t  return '';\n\t}\n\n\tfunction browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/ {\n\t  return prefix ? '' + prefix + kebabToTitleCase(prop) : prop;\n\t}\n\n\tfunction kebabToTitleCase(str /*: string*/) /*: string*/ {\n\t  var out = '';\n\t  var shouldCapitalize = true;\n\t  for (var i = 0; i < str.length; i++) {\n\t    if (shouldCapitalize) {\n\t      out += str[i].toUpperCase();\n\t      shouldCapitalize = false;\n\t    } else if (str[i] === '-') {\n\t      shouldCapitalize = true;\n\t    } else {\n\t      out += str[i];\n\t    }\n\t  }\n\t  return out;\n\t}\n\n\t// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n\t// Note that you may have to re-test for certain things; for instance, Chrome 50\n\t// can handle unprefixed `transform`, but not unprefixed `user-select`\n\tvar browserPrefix = getPrefix();\n\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\n\tvar defineProperty = function (obj, key, value) {\n\t  if (key in obj) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\n\t  return obj;\n\t};\n\n\tvar _extends = Object.assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\n\t  return target;\n\t};\n\n\tvar inherits = function (subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t  }\n\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t};\n\n\tvar possibleConstructorReturn = function (self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\n\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t};\n\n\tvar slicedToArray = function () {\n\t  function sliceIterator(arr, i) {\n\t    var _arr = [];\n\t    var _n = true;\n\t    var _d = false;\n\t    var _e = undefined;\n\n\t    try {\n\t      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n\t        _arr.push(_s.value);\n\n\t        if (i && _arr.length === i) break;\n\t      }\n\t    } catch (err) {\n\t      _d = true;\n\t      _e = err;\n\t    } finally {\n\t      try {\n\t        if (!_n && _i[\"return\"]) _i[\"return\"]();\n\t      } finally {\n\t        if (_d) throw _e;\n\t      }\n\t    }\n\n\t    return _arr;\n\t  }\n\n\t  return function (arr, i) {\n\t    if (Array.isArray(arr)) {\n\t      return arr;\n\t    } else if (Symbol.iterator in Object(arr)) {\n\t      return sliceIterator(arr, i);\n\t    } else {\n\t      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n\t    }\n\t  };\n\t}();\n\n\t/*:: import type {ControlPosition, PositionOffsetControlPosition, MouseTouchEvent} from './types';*/\n\n\n\tvar matchesSelectorFunc = '';\n\tfunction matchesSelector(el /*: Node*/, selector /*: string*/) /*: boolean*/ {\n\t  if (!matchesSelectorFunc) {\n\t    matchesSelectorFunc = findInArray(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n\t      // $FlowIgnore: Doesn't think elements are indexable\n\t      return isFunction(el[method]);\n\t    });\n\t  }\n\n\t  // Might not be found entirely (not an Element?) - in that case, bail\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  if (!isFunction(el[matchesSelectorFunc])) return false;\n\n\t  // $FlowIgnore: Doesn't think elements are indexable\n\t  return el[matchesSelectorFunc](selector);\n\t}\n\n\t// Works up the tree to the draggable itself attempting to match selector.\n\tfunction matchesSelectorAndParentsTo(el /*: Node*/, selector /*: string*/, baseNode /*: Node*/) /*: boolean*/ {\n\t  var node = el;\n\t  do {\n\t    if (matchesSelector(node, selector)) return true;\n\t    if (node === baseNode) return false;\n\t    node = node.parentNode;\n\t  } while (node);\n\n\t  return false;\n\t}\n\n\tfunction addEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.attachEvent) {\n\t    el.attachEvent('on' + event, handler);\n\t  } else if (el.addEventListener) {\n\t    el.addEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = handler;\n\t  }\n\t}\n\n\tfunction removeEvent(el /*: ?Node*/, event /*: string*/, handler /*: Function*/) /*: void*/ {\n\t  if (!el) {\n\t    return;\n\t  }\n\t  if (el.detachEvent) {\n\t    el.detachEvent('on' + event, handler);\n\t  } else if (el.removeEventListener) {\n\t    el.removeEventListener(event, handler, true);\n\t  } else {\n\t    // $FlowIgnore: Doesn't think elements are indexable\n\t    el['on' + event] = null;\n\t  }\n\t}\n\n\tfunction outerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetTop which is including margin. See getBoundPosition\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height += int(computedStyle.borderTopWidth);\n\t  height += int(computedStyle.borderBottomWidth);\n\t  return height;\n\t}\n\n\tfunction outerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetLeft which is including margin. See getBoundPosition\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width += int(computedStyle.borderLeftWidth);\n\t  width += int(computedStyle.borderRightWidth);\n\t  return width;\n\t}\n\tfunction innerHeight(node /*: HTMLElement*/) /*: number*/ {\n\t  var height = node.clientHeight;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  height -= int(computedStyle.paddingTop);\n\t  height -= int(computedStyle.paddingBottom);\n\t  return height;\n\t}\n\n\tfunction innerWidth(node /*: HTMLElement*/) /*: number*/ {\n\t  var width = node.clientWidth;\n\t  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n\t  width -= int(computedStyle.paddingLeft);\n\t  width -= int(computedStyle.paddingRight);\n\t  return width;\n\t}\n\n\t// Get from offsetParent\n\tfunction offsetXYFromParent(evt /*: {clientX: number, clientY: number}*/, offsetParent /*: HTMLElement*/) /*: ControlPosition*/ {\n\t  var isBody = offsetParent === offsetParent.ownerDocument.body;\n\t  var offsetParentRect = isBody ? { left: 0, top: 0 } : offsetParent.getBoundingClientRect();\n\n\t  var x = evt.clientX + offsetParent.scrollLeft - offsetParentRect.left;\n\t  var y = evt.clientY + offsetParent.scrollTop - offsetParentRect.top;\n\n\t  return { x: x, y: y };\n\t}\n\n\tfunction createCSSTransform(controlPos /*: ControlPosition*/, positionOffset /*: PositionOffsetControlPosition*/) /*: Object*/ {\n\t  var translation = getTranslation(controlPos, positionOffset, 'px');\n\t  return defineProperty({}, browserPrefixToKey('transform', browserPrefix), translation);\n\t}\n\n\tfunction createSVGTransform(controlPos /*: ControlPosition*/, positionOffset /*: PositionOffsetControlPosition*/) /*: string*/ {\n\t  var translation = getTranslation(controlPos, positionOffset, '');\n\t  return translation;\n\t}\n\tfunction getTranslation(_ref2, positionOffset /*: PositionOffsetControlPosition*/, unitSuffix /*: string*/) /*: string*/ {\n\t  var x = _ref2.x,\n\t      y = _ref2.y;\n\n\t  var translation = 'translate(' + x + unitSuffix + ',' + y + unitSuffix + ')';\n\t  if (positionOffset) {\n\t    var defaultX = '' + (typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix);\n\t    var defaultY = '' + (typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix);\n\t    translation = 'translate(' + defaultX + ', ' + defaultY + ')' + translation;\n\t  }\n\t  return translation;\n\t}\n\n\tfunction getTouch(e /*: MouseTouchEvent*/, identifier /*: number*/) /*: ?{clientX: number, clientY: number}*/ {\n\t  return e.targetTouches && findInArray(e.targetTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  }) || e.changedTouches && findInArray(e.changedTouches, function (t) {\n\t    return identifier === t.identifier;\n\t  });\n\t}\n\n\tfunction getTouchIdentifier(e /*: MouseTouchEvent*/) /*: ?number*/ {\n\t  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n\t  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n\t}\n\n\t// User-select Hacks:\n\t//\n\t// Useful for preventing blue highlights all over everything when dragging.\n\n\t// Note we're passing `document` b/c we could be iframed\n\tfunction addUserSelectStyles(doc /*: ?Document*/) {\n\t  if (!doc) return;\n\t  var styleEl = doc.getElementById('react-draggable-style-el');\n\t  if (!styleEl) {\n\t    styleEl = doc.createElement('style');\n\t    styleEl.type = 'text/css';\n\t    styleEl.id = 'react-draggable-style-el';\n\t    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {background: transparent;}\\n';\n\t    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {background: transparent;}\\n';\n\t    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n\t  }\n\t  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n\t}\n\n\tfunction removeUserSelectStyles(doc /*: ?Document*/) {\n\t  try {\n\t    if (doc && doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection');\n\t    // $FlowIgnore: IE\n\t    if (doc.selection) {\n\t      // $FlowIgnore: IE\n\t      doc.selection.empty();\n\t    } else {\n\t      window.getSelection().removeAllRanges(); // remove selection caused by scroll\n\t    }\n\t  } catch (e) {\n\t    // probably IE\n\t  }\n\t}\n\n\tfunction styleHacks() /*: Object*/ {\n\t  var childStyle /*: Object*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t  // Workaround IE pointer events; see #51\n\t  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\t  return _extends({\n\t    touchAction: 'none'\n\t  }, childStyle);\n\t}\n\n\tfunction addClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.add(className);\n\t  } else {\n\t    if (!el.className.match(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)'))) {\n\t      el.className += ' ' + className;\n\t    }\n\t  }\n\t}\n\n\tfunction removeClassName(el /*: HTMLElement*/, className /*: string*/) {\n\t  if (el.classList) {\n\t    el.classList.remove(className);\n\t  } else {\n\t    el.className = el.className.replace(new RegExp('(?:^|\\\\s)' + className + '(?!\\\\S)', 'g'), '');\n\t  }\n\t}\n\n\t/*:: import type Draggable from '../Draggable';*/\n\t/*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n\t/*:: import type DraggableCore from '../DraggableCore';*/\n\n\n\tfunction getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/ {\n\t  // If no bounds, short-circuit and move on\n\t  if (!draggable.props.bounds) return [x, y];\n\n\t  // Clone new bounds\n\t  var bounds = draggable.props.bounds;\n\n\t  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n\t  var node = findDOMNode(draggable);\n\n\t  if (typeof bounds === 'string') {\n\t    var ownerDocument = node.ownerDocument;\n\n\t    var ownerWindow = ownerDocument.defaultView;\n\t    var boundNode = void 0;\n\t    if (bounds === 'parent') {\n\t      boundNode = node.parentNode;\n\t    } else {\n\t      boundNode = ownerDocument.querySelector(bounds);\n\t    }\n\t    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n\t      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n\t    }\n\t    var nodeStyle = ownerWindow.getComputedStyle(node);\n\t    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode);\n\t    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\t    bounds = {\n\t      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) + int(nodeStyle.marginLeft),\n\t      top: -node.offsetTop + int(boundNodeStyle.paddingTop) + int(nodeStyle.marginTop),\n\t      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft + int(boundNodeStyle.paddingRight) - int(nodeStyle.marginRight),\n\t      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop + int(boundNodeStyle.paddingBottom) - int(nodeStyle.marginBottom)\n\t    };\n\t  }\n\n\t  // Keep x and y below right and bottom limits...\n\t  if (isNum(bounds.right)) x = Math.min(x, bounds.right);\n\t  if (isNum(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n\t  // But above left and top limits.\n\t  if (isNum(bounds.left)) x = Math.max(x, bounds.left);\n\t  if (isNum(bounds.top)) y = Math.max(y, bounds.top);\n\n\t  return [x, y];\n\t}\n\n\tfunction snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/ {\n\t  var x = Math.round(pendingX / grid[0]) * grid[0];\n\t  var y = Math.round(pendingY / grid[1]) * grid[1];\n\t  return [x, y];\n\t}\n\n\tfunction canDragX(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n\t}\n\n\tfunction canDragY(draggable /*: Draggable*/) /*: boolean*/ {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n\t}\n\n\t// Get {x, y} positions from event.\n\tfunction getControlPosition(e /*: MouseTouchEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/ {\n\t  var touchObj = typeof touchIdentifier === 'number' ? getTouch(e, touchIdentifier) : null;\n\t  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\t  var node = findDOMNode(draggableCore);\n\t  // User can provide an offsetParent if desired.\n\t  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n\t  return offsetXYFromParent(touchObj || e, offsetParent);\n\t}\n\n\t// Create an data object exposed by <DraggableCore>'s events\n\tfunction createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/ {\n\t  var state = draggable.state;\n\t  var isStart = !isNum(state.lastX);\n\t  var node = findDOMNode(draggable);\n\n\t  if (isStart) {\n\t    // If this is our first move, use the x and y as last coords.\n\t    return {\n\t      node: node,\n\t      deltaX: 0, deltaY: 0,\n\t      lastX: x, lastY: y,\n\t      x: x, y: y\n\t    };\n\t  } else {\n\t    // Otherwise calculate proper values.\n\t    return {\n\t      node: node,\n\t      deltaX: x - state.lastX, deltaY: y - state.lastY,\n\t      lastX: state.lastX, lastY: state.lastY,\n\t      x: x, y: y\n\t    };\n\t  }\n\t}\n\n\t// Create an data exposed by <Draggable>'s events\n\tfunction createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/ {\n\t  var scale = draggable.props.scale;\n\t  return {\n\t    node: coreData.node,\n\t    x: draggable.state.x + coreData.deltaX / scale,\n\t    y: draggable.state.y + coreData.deltaY / scale,\n\t    deltaX: coreData.deltaX / scale,\n\t    deltaY: coreData.deltaY / scale,\n\t    lastX: draggable.state.x,\n\t    lastY: draggable.state.y\n\t  };\n\t}\n\n\t// A lot faster than stringify/parse\n\tfunction cloneBounds(bounds /*: Bounds*/) /*: Bounds*/ {\n\t  return {\n\t    left: bounds.left,\n\t    top: bounds.top,\n\t    right: bounds.right,\n\t    bottom: bounds.bottom\n\t  };\n\t}\n\n\tfunction findDOMNode(draggable /*: Draggable | DraggableCore*/) /*: HTMLElement*/ {\n\t  var node = ReactDOM.findDOMNode(draggable);\n\t  if (!node) {\n\t    throw new Error('<DraggableCore>: Unmounted during event!');\n\t  }\n\t  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\t  return node;\n\t}\n\n\t/*eslint no-console:0*/\n\tfunction log() {\n\t}\n\n\t/*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n\n\n\t// Simple abstraction for dragging events names.\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\tvar eventsFor = {\n\t  touch: {\n\t    start: 'touchstart',\n\t    move: 'touchmove',\n\t    stop: 'touchend'\n\t  },\n\t  mouse: {\n\t    start: 'mousedown',\n\t    move: 'mousemove',\n\t    stop: 'mouseup'\n\t  }\n\t};\n\n\t// Default to mouse events.\n\tvar dragEventFor = eventsFor.mouse;\n\n\t/*:: type DraggableCoreState = {\n\t  dragging: boolean,\n\t  lastX: number,\n\t  lastY: number,\n\t  touchIdentifier: ?number\n\t};*/\n\t/*:: export type DraggableBounds = {\n\t  left: number,\n\t  right: number,\n\t  top: number,\n\t  bottom: number,\n\t};*/\n\t/*:: export type DraggableData = {\n\t  node: HTMLElement,\n\t  x: number, y: number,\n\t  deltaX: number, deltaY: number,\n\t  lastX: number, lastY: number,\n\t};*/\n\t/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\t/*:: export type ControlPosition = {x: number, y: number};*/\n\t/*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n\n\n\t//\n\t// Define <DraggableCore>.\n\t//\n\t// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n\t// work well with libraries that require more control over the element.\n\t//\n\n\t/*:: export type DraggableCoreProps = {\n\t  allowAnyClick: boolean,\n\t  cancel: string,\n\t  children: ReactElement<any>,\n\t  disabled: boolean,\n\t  enableUserSelectHack: boolean,\n\t  offsetParent: HTMLElement,\n\t  grid: [number, number],\n\t  handle: string,\n\t  onStart: DraggableEventHandler,\n\t  onDrag: DraggableEventHandler,\n\t  onStop: DraggableEventHandler,\n\t  onMouseDown: (e: MouseEvent) => void,\n\t};*/\n\n\tvar DraggableCore = function (_React$Component) {\n\t  inherits(DraggableCore, _React$Component);\n\n\t  function DraggableCore() {\n\t    var _ref;\n\n\t    var _temp, _this, _ret;\n\n\t    classCallCheck(this, DraggableCore);\n\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = DraggableCore.__proto__ || Object.getPrototypeOf(DraggableCore)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n\t      dragging: false,\n\t      // Used while dragging to determine deltas.\n\t      lastX: NaN, lastY: NaN,\n\t      touchIdentifier: null\n\t    }, _this.handleDragStart = function (e) {\n\t      // Make it possible to attach event handlers on top of this one.\n\t      _this.props.onMouseDown(e);\n\n\t      // Only accept left-clicks.\n\t      if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n\t      // Get nodes. Be sure to grab relative document (could be iframed)\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n\t        throw new Error('<DraggableCore> not mounted on DragStart!');\n\t      }\n\t      var ownerDocument = thisNode.ownerDocument;\n\n\t      // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n\t      if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !matchesSelectorAndParentsTo(e.target, _this.props.handle, thisNode) || _this.props.cancel && matchesSelectorAndParentsTo(e.target, _this.props.cancel, thisNode)) {\n\t        return;\n\t      }\n\n\t      // Set touch identifier in component state if this is a touch event. This allows us to\n\t      // distinguish between individual touches on multitouch screens by identifying which\n\t      // touchpoint was set to this element.\n\t      var touchIdentifier = getTouchIdentifier(e);\n\t      _this.setState({ touchIdentifier: touchIdentifier });\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, touchIdentifier, _this);\n\t      if (position == null) return; // not possible but satisfies flow\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Create an event object with all the data parents need to make a decision here.\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, cancel.\n\t      log('calling', _this.props.onStart);\n\t      var shouldUpdate = _this.props.onStart(e, coreEvent);\n\t      if (shouldUpdate === false) return;\n\n\t      // Add a style to the body to disable user-select. This prevents text from\n\t      // being selected all over the page.\n\t      if (_this.props.enableUserSelectHack) addUserSelectStyles(ownerDocument);\n\n\t      // Initiate dragging. Set the current x and y as offsets\n\t      // so we know how much we've moved during the drag. This allows us\n\t      // to drag elements around even if they have been moved, without issue.\n\t      _this.setState({\n\t        dragging: true,\n\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\n\t      // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n\t      // this element. We use different events depending on whether or not we have detected that this\n\t      // is a touch-capable device.\n\t      addEvent(ownerDocument, dragEventFor.move, _this.handleDrag);\n\t      addEvent(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t    }, _this.handleDrag = function (e) {\n\n\t      // Prevent scrolling on mobile devices, like ipad/iphone.\n\t      if (e.type === 'touchmove') e.preventDefault();\n\n\t      // Get the current drag point from the event. This is used as the offset.\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      // Snap to grid if prop has been provided\n\n\t      if (Array.isArray(_this.props.grid)) {\n\t        var _deltaX = x - _this.state.lastX,\n\t            _deltaY = y - _this.state.lastY;\n\n\t        var _snapToGrid = snapToGrid(_this.props.grid, _deltaX, _deltaY);\n\n\t        var _snapToGrid2 = slicedToArray(_snapToGrid, 2);\n\n\t        _deltaX = _snapToGrid2[0];\n\t        _deltaY = _snapToGrid2[1];\n\n\t        if (!_deltaX && !_deltaY) return; // skip useless drag\n\t        x = _this.state.lastX + _deltaX, y = _this.state.lastY + _deltaY;\n\t      }\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      // Call event handler. If it returns explicit false, trigger end.\n\t      var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\t      if (shouldUpdate === false) {\n\t        try {\n\t          // $FlowIgnore\n\t          _this.handleDragStop(new MouseEvent('mouseup'));\n\t        } catch (err) {\n\t          // Old browsers\n\t          var event = ((document.createEvent('MouseEvents') /*: any*/) /*: MouseTouchEvent*/);\n\t          // I see why this insanity was deprecated\n\t          // $FlowIgnore\n\t          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t          _this.handleDragStop(event);\n\t        }\n\t        return;\n\t      }\n\n\t      _this.setState({\n\t        lastX: x,\n\t        lastY: y\n\t      });\n\t    }, _this.handleDragStop = function (e) {\n\t      if (!_this.state.dragging) return;\n\n\t      var position = getControlPosition(e, _this.state.touchIdentifier, _this);\n\t      if (position == null) return;\n\t      var x = position.x,\n\t          y = position.y;\n\n\t      var coreEvent = createCoreData(_this, x, y);\n\n\t      var thisNode = ReactDOM.findDOMNode(_this);\n\t      if (thisNode) {\n\t        // Remove user-select hack\n\t        if (_this.props.enableUserSelectHack) removeUserSelectStyles(thisNode.ownerDocument);\n\t      }\n\n\t      // Reset the el.\n\t      _this.setState({\n\t        dragging: false,\n\t        lastX: NaN,\n\t        lastY: NaN\n\t      });\n\n\t      // Call event handler\n\t      _this.props.onStop(e, coreEvent);\n\n\t      if (thisNode) {\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n\t        removeEvent(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n\t      }\n\t    }, _this.onMouseDown = function (e) {\n\t      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onMouseUp = function (e) {\n\t      dragEventFor = eventsFor.mouse;\n\n\t      return _this.handleDragStop(e);\n\t    }, _this.onTouchStart = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStart(e);\n\t    }, _this.onTouchEnd = function (e) {\n\t      // We're on a touch device now, so change the event handlers\n\t      dragEventFor = eventsFor.touch;\n\n\t      return _this.handleDragStop(e);\n\t    }, _temp), possibleConstructorReturn(_this, _ret);\n\t  }\n\n\t  createClass(DraggableCore, [{\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n\t      // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n\t      var thisNode = ReactDOM.findDOMNode(this);\n\t      if (thisNode) {\n\t        var ownerDocument = thisNode.ownerDocument;\n\n\t        removeEvent(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.touch.move, this.handleDrag);\n\t        removeEvent(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n\t        removeEvent(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n\t        if (this.props.enableUserSelectHack) removeUserSelectStyles(ownerDocument);\n\t      }\n\t    }\n\n\t    // Same as onMouseDown (start drag), but now consider this a touch device.\n\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.cloneElement(React.Children.only(this.props.children), {\n\t        style: styleHacks(this.props.children.props.style),\n\n\t        // Note: mouseMove handler is attached to document so it will still function\n\t        // when the user drags quickly and leaves the bounds of the element.\n\t        onMouseDown: this.onMouseDown,\n\t        onTouchStart: this.onTouchStart,\n\t        onMouseUp: this.onMouseUp,\n\t        onTouchEnd: this.onTouchEnd\n\t      });\n\t    }\n\t  }]);\n\t  return DraggableCore;\n\t}(React.Component);\n\n\tDraggableCore.displayName = 'DraggableCore';\n\tDraggableCore.propTypes = {\n\t  /**\n\t   * `allowAnyClick` allows dragging using any mouse button.\n\t   * By default, we only accept the left button.\n\t   *\n\t   * Defaults to `false`.\n\t   */\n\t  allowAnyClick: propTypes.bool,\n\n\t  /**\n\t   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n\t   * with the exception of `onMouseDown`, will not fire.\n\t   */\n\t  disabled: propTypes.bool,\n\n\t  /**\n\t   * By default, we add 'user-select:none' attributes to the document body\n\t   * to prevent ugly text selection during drag. If this is causing problems\n\t   * for your app, set this to `false`.\n\t   */\n\t  enableUserSelectHack: propTypes.bool,\n\n\t  /**\n\t   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n\t   * instead of using the parent node.\n\t   */\n\t  offsetParent: function offsetParent(props /*: DraggableCoreProps*/, propName /*: $Keys<DraggableCoreProps>*/) {\n\t    if (props[propName] && props[propName].nodeType !== 1) {\n\t      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n\t    }\n\t  },\n\n\t  /**\n\t   * `grid` specifies the x and y that dragging should snap to.\n\t   */\n\t  grid: propTypes.arrayOf(propTypes.number),\n\n\t  /**\n\t   * `scale` specifies the scale of the area you are dragging inside of. It allows\n\t   * the drag deltas to scale correctly with how far zoomed in/out you are.\n\t   */\n\t  scale: propTypes.number,\n\n\t  /**\n\t   * `handle` specifies a selector to be used as the handle that initiates drag.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable handle=\".handle\">\n\t   *              <div>\n\t   *                  <div className=\"handle\">Click me to drag</div>\n\t   *                  <div>This is some other content</div>\n\t   *              </div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  handle: propTypes.string,\n\n\t  /**\n\t   * `cancel` specifies a selector to be used to prevent drag initialization.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *           return(\n\t   *               <Draggable cancel=\".cancel\">\n\t   *                   <div>\n\t   *                     <div className=\"cancel\">You can't drag from here</div>\n\t   *                     <div>Dragging here works fine</div>\n\t   *                   </div>\n\t   *               </Draggable>\n\t   *           );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  cancel: propTypes.string,\n\n\t  /**\n\t   * Called when dragging starts.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onStart: propTypes.func,\n\n\t  /**\n\t   * Called while dragging.\n\t   * If this function returns the boolean false, dragging will be canceled.\n\t   */\n\t  onDrag: propTypes.func,\n\n\t  /**\n\t   * Called when dragging stops.\n\t   * If this function returns the boolean false, the drag will remain active.\n\t   */\n\t  onStop: propTypes.func,\n\n\t  /**\n\t   * A workaround option which can be passed if onMouseDown needs to be accessed,\n\t   * since it'll always be blocked (as there is internal use of onMouseDown)\n\t   */\n\t  onMouseDown: propTypes.func,\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t};\n\tDraggableCore.defaultProps = {\n\t  allowAnyClick: false, // by default only accept left click\n\t  cancel: null,\n\t  disabled: false,\n\t  enableUserSelectHack: true,\n\t  offsetParent: null,\n\t  handle: null,\n\t  grid: null,\n\t  transform: null,\n\t  onStart: function onStart() {},\n\t  onDrag: function onDrag() {},\n\t  onStop: function onStop() {},\n\t  onMouseDown: function onMouseDown() {}\n\t};\n\n\t/*:: import type {DraggableEventHandler} from './utils/types';*/\n\t/*:: import type {Element as ReactElement} from 'react';*/\n\t/*:: type DraggableState = {\n\t  dragging: boolean,\n\t  dragged: boolean,\n\t  x: number, y: number,\n\t  slackX: number, slackY: number,\n\t  isElementSVG: boolean\n\t};*/\n\n\n\t//\n\t// Define <Draggable>\n\t//\n\n\t/*:: export type DraggableProps = {\n\t  ...$Exact<DraggableCoreProps>,\n\t  axis: 'both' | 'x' | 'y' | 'none',\n\t  bounds: DraggableBounds | string | false,\n\t  defaultClassName: string,\n\t  defaultClassNameDragging: string,\n\t  defaultClassNameDragged: string,\n\t  defaultPosition: ControlPosition,\n\t  positionOffset: PositionOffsetControlPosition,\n\t  position: ControlPosition,\n\t  scale: number\n\t};*/\n\n\tvar Draggable = function (_React$Component) {\n\t  inherits(Draggable, _React$Component);\n\n\t  function Draggable(props /*: DraggableProps*/) {\n\t    classCallCheck(this, Draggable);\n\n\t    var _this = possibleConstructorReturn(this, (Draggable.__proto__ || Object.getPrototypeOf(Draggable)).call(this, props));\n\n\t    _this.onDragStart = function (e, coreData) {\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStart = _this.props.onStart(e, createDraggableData(_this, coreData));\n\t      // Kills start event on core as well, so move handlers are never bound.\n\t      if (shouldStart === false) return false;\n\n\t      _this.setState({ dragging: true, dragged: true });\n\t    };\n\n\t    _this.onDrag = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      var uiData = createDraggableData(_this, coreData);\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        x: uiData.x,\n\t        y: uiData.y\n\t      };\n\n\t      // Keep within bounds.\n\t      if (_this.props.bounds) {\n\t        // Save original x and y.\n\t        var _x = newState.x,\n\t            _y = newState.y;\n\n\t        // Add slack to the values used to calculate bound position. This will ensure that if\n\t        // we start removing slack, the element won't react to it right away until it's been\n\t        // completely removed.\n\n\t        newState.x += _this.state.slackX;\n\t        newState.y += _this.state.slackY;\n\n\t        // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n\t        var _getBoundPosition = getBoundPosition(_this, newState.x, newState.y),\n\t            _getBoundPosition2 = slicedToArray(_getBoundPosition, 2),\n\t            newStateX = _getBoundPosition2[0],\n\t            newStateY = _getBoundPosition2[1];\n\n\t        newState.x = newStateX;\n\t        newState.y = newStateY;\n\n\t        // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\t        newState.slackX = _this.state.slackX + (_x - newState.x);\n\t        newState.slackY = _this.state.slackY + (_y - newState.y);\n\n\t        // Update the event we fire to reflect what really happened after bounds took effect.\n\t        uiData.x = newState.x;\n\t        uiData.y = newState.y;\n\t        uiData.deltaX = newState.x - _this.state.x;\n\t        uiData.deltaY = newState.y - _this.state.y;\n\t      }\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldUpdate = _this.props.onDrag(e, uiData);\n\t      if (shouldUpdate === false) return false;\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.onDragStop = function (e, coreData) {\n\t      if (!_this.state.dragging) return false;\n\n\t      // Short-circuit if user's callback killed it.\n\t      var shouldStop = _this.props.onStop(e, createDraggableData(_this, coreData));\n\t      if (shouldStop === false) return false;\n\n\t      var newState /*: $Shape<DraggableState>*/ = {\n\t        dragging: false,\n\t        slackX: 0,\n\t        slackY: 0\n\t      };\n\n\t      // If this is a controlled component, the result of this operation will be to\n\t      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\t      var controlled = Boolean(_this.props.position);\n\t      if (controlled) {\n\t        var _this$props$position = _this.props.position,\n\t            _x2 = _this$props$position.x,\n\t            _y2 = _this$props$position.y;\n\n\t        newState.x = _x2;\n\t        newState.y = _y2;\n\t      }\n\n\t      _this.setState(newState);\n\t    };\n\n\t    _this.state = {\n\t      // Whether or not we are currently dragging.\n\t      dragging: false,\n\n\t      // Whether or not we have been dragged before.\n\t      dragged: false,\n\n\t      // Current transform x and y.\n\t      x: props.position ? props.position.x : props.defaultPosition.x,\n\t      y: props.position ? props.position.y : props.defaultPosition.y,\n\n\t      // Used for compensating for out-of-bounds drags\n\t      slackX: 0, slackY: 0,\n\n\t      // Can only determine if SVG after mounting\n\t      isElementSVG: false\n\t    };\n\t    return _this;\n\t  }\n\n\t  createClass(Draggable, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      if (this.props.position && !(this.props.onDrag || this.props.onStop)) {\n\t        // eslint-disable-next-line\n\t        console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      // Check to see if the element passed is an instanceof SVGElement\n\t      if (typeof window.SVGElement !== 'undefined' && ReactDOM.findDOMNode(this) instanceof window.SVGElement) {\n\t        this.setState({ isElementSVG: true });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps /*: Object*/) {\n\t      // Set x/y if position has changed\n\t      if (nextProps.position && (!this.props.position || nextProps.position.x !== this.props.position.x || nextProps.position.y !== this.props.position.y)) {\n\t        this.setState({ x: nextProps.position.x, y: nextProps.position.y });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.setState({ dragging: false }); // prevents invariant if unmounted while dragging\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() /*: ReactElement<any>*/ {\n\t      var _classNames;\n\n\t      var style = {},\n\t          svgTransform = null;\n\n\t      // If this is controlled, we don't want to move it - unless it's dragging.\n\t      var controlled = Boolean(this.props.position);\n\t      var draggable = !controlled || this.state.dragging;\n\n\t      var position = this.props.position || this.props.defaultPosition;\n\t      var transformOpts = {\n\t        // Set left if horizontal drag is enabled\n\t        x: canDragX(this) && draggable ? this.state.x : position.x,\n\n\t        // Set top if vertical drag is enabled\n\t        y: canDragY(this) && draggable ? this.state.y : position.y\n\t      };\n\n\t      // If this element was SVG, we use the `transform` attribute.\n\t      if (this.state.isElementSVG) {\n\t        svgTransform = createSVGTransform(transformOpts, this.props.positionOffset);\n\t      } else {\n\t        // Add a CSS transform to move the element around. This allows us to move the element around\n\t        // without worrying about whether or not it is relatively or absolutely positioned.\n\t        // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n\t        // has a clean slate.\n\t        style = createCSSTransform(transformOpts, this.props.positionOffset);\n\t      }\n\n\t      var _props = this.props,\n\t          defaultClassName = _props.defaultClassName,\n\t          defaultClassNameDragging = _props.defaultClassNameDragging,\n\t          defaultClassNameDragged = _props.defaultClassNameDragged;\n\n\n\t      var children = React.Children.only(this.props.children);\n\n\t      // Mark with class while dragging\n\t      var className = classnames(children.props.className || '', defaultClassName, (_classNames = {}, defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames));\n\n\t      // Reuse the child provided\n\t      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t      return React.createElement(\n\t        DraggableCore,\n\t        _extends({}, this.props, { onStart: this.onDragStart, onDrag: this.onDrag, onStop: this.onDragStop }),\n\t        React.cloneElement(children, {\n\t          className: className,\n\t          style: _extends({}, children.props.style, style),\n\t          transform: svgTransform\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t  return Draggable;\n\t}(React.Component);\n\n\tDraggable.displayName = 'Draggable';\n\tDraggable.propTypes = _extends({}, DraggableCore.propTypes, {\n\n\t  /**\n\t   * `axis` determines which axis the draggable can move.\n\t   *\n\t   *  Note that all callbacks will still return data as normal. This only\n\t   *  controls flushing to the DOM.\n\t   *\n\t   * 'both' allows movement horizontally and vertically.\n\t   * 'x' limits movement to horizontal axis.\n\t   * 'y' limits movement to vertical axis.\n\t   * 'none' limits all movement.\n\t   *\n\t   * Defaults to 'both'.\n\t   */\n\t  axis: propTypes.oneOf(['both', 'x', 'y', 'none']),\n\n\t  /**\n\t   * `bounds` determines the range of movement available to the element.\n\t   * Available values are:\n\t   *\n\t   * 'parent' restricts movement within the Draggable's parent node.\n\t   *\n\t   * Alternatively, pass an object with the following properties, all of which are optional:\n\t   *\n\t   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n\t   *\n\t   * All values are in px.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *   let App = React.createClass({\n\t   *       render: function () {\n\t   *         return (\n\t   *            <Draggable bounds={{right: 300, bottom: 300}}>\n\t   *              <div>Content</div>\n\t   *           </Draggable>\n\t   *         );\n\t   *       }\n\t   *   });\n\t   * ```\n\t   */\n\t  bounds: propTypes.oneOfType([propTypes.shape({\n\t    left: propTypes.number,\n\t    right: propTypes.number,\n\t    top: propTypes.number,\n\t    bottom: propTypes.number\n\t  }), propTypes.string, propTypes.oneOf([false])]),\n\n\t  defaultClassName: propTypes.string,\n\t  defaultClassNameDragging: propTypes.string,\n\t  defaultClassNameDragged: propTypes.string,\n\n\t  /**\n\t   * `defaultPosition` specifies the x and y that the dragged item should start at\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  defaultPosition: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\t  positionOffset: propTypes.shape({\n\t    x: propTypes.oneOfType([propTypes.number, propTypes.string]),\n\t    y: propTypes.oneOfType([propTypes.number, propTypes.string])\n\t  }),\n\n\t  /**\n\t   * `position`, if present, defines the current position of the element.\n\t   *\n\t   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n\t   *  is uncontrolled.\n\t   *\n\t   * Example:\n\t   *\n\t   * ```jsx\n\t   *      let App = React.createClass({\n\t   *          render: function () {\n\t   *              return (\n\t   *                  <Draggable position={{x: 25, y: 25}}>\n\t   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t   *                  </Draggable>\n\t   *              );\n\t   *          }\n\t   *      });\n\t   * ```\n\t   */\n\t  position: propTypes.shape({\n\t    x: propTypes.number,\n\t    y: propTypes.number\n\t  }),\n\n\t  /**\n\t   * These properties should be defined on the child, not here.\n\t   */\n\t  className: dontSetMe,\n\t  style: dontSetMe,\n\t  transform: dontSetMe\n\t});\n\tDraggable.defaultProps = _extends({}, DraggableCore.defaultProps, {\n\t  axis: 'both',\n\t  bounds: false,\n\t  defaultClassName: 'react-draggable',\n\t  defaultClassNameDragging: 'react-draggable-dragging',\n\t  defaultClassNameDragged: 'react-draggable-dragged',\n\t  defaultPosition: { x: 0, y: 0 },\n\t  position: null,\n\t  scale: 1\n\t});\n\n\t// Previous versions of this lib exported <Draggable> as the root export. As to not break\n\t// them, or TypeScript, we export *both* as the root and as 'default'.\n\t// See https://github.com/mzabriskie/react-draggable/pull/254\n\t// and https://github.com/mzabriskie/react-draggable/issues/266\n\tDraggable.default = Draggable;\n\tDraggable.DraggableCore = DraggableCore;\n\n\treturn Draggable;\n\n})));\n//# sourceMappingURL=react-draggable.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-draggable/dist/react-draggable.js\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\",\"root\":\"ReactDOM\"}\n// module id = 7\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDraggable = require('react-draggable');\n\nvar _cloneElement = require('./cloneElement');\n\nvar _cloneElement2 = _interopRequireDefault(_cloneElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Resizable = function (_React$Component) {\n  _inherits(Resizable, _React$Component);\n\n  function Resizable() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Resizable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      resizing: false,\n      width: _this.props.width, height: _this.props.height,\n      slackW: 0, slackH: 0\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Resizable.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // If parent changes height/width, set that in our state.\n    if (!this.state.resizing && (nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  Resizable.prototype.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  // If you do this, be careful of constraints\n\n\n  Resizable.prototype.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n\n\n    if (this.props.lockAspectRatio) {\n      var ratio = this.state.width / this.state.height;\n      height = width / ratio;\n      width = height * ratio;\n    }\n\n    if (!min && !max) return [width, height];\n\n    var oldW = width,\n        oldH = height;\n\n    // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _state = this.state,\n        slackW = _state.slackW,\n        slackH = _state.slackH;\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    }\n\n    // If the numbers changed, we must have introduced some slack. Record it for the next iteration.\n    slackW += oldW - width;\n    slackH += oldH - height;\n    if (slackW !== this.state.slackW || slackH !== this.state.slackH) {\n      this.setState({ slackW: slackW, slackH: slackH });\n    }\n\n    return [width, height];\n  };\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n\n\n  Resizable.prototype.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY;\n\n\n      // Axis restrictions\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && ['n', 's'].indexOf(axis) === -1;\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && ['e', 'w'].indexOf(axis) === -1;\n\n      // reverse delta if using top or left drag handles\n      if (canDragX && axis[axis.length - 1] === 'w') {\n        deltaX = -deltaX;\n      }\n      if (canDragY && axis[0] === 'n') {\n        deltaY = -deltaY;\n      }\n\n      // Update w/h\n      var width = _this2.state.width + (canDragX ? deltaX : 0);\n      var height = _this2.state.height + (canDragY ? deltaY : 0);\n\n      // Early return if no change\n      var widthChanged = width !== _this2.state.width,\n          heightChanged = height !== _this2.state.height;\n      if (handlerName === 'onResize' && !widthChanged && !heightChanged) return;\n\n      // Set the appropriate state for this handler.\n      var _runConstraints = _this2.runConstraints(width, height);\n\n      width = _runConstraints[0];\n      height = _runConstraints[1];\n      var newState = {};\n      if (handlerName === 'onResizeStart') {\n        newState.resizing = true;\n      } else if (handlerName === 'onResizeStop') {\n        newState.resizing = false;\n        newState.slackW = newState.slackH = 0;\n      } else {\n        // Early return if no change after constraints\n        if (width === _this2.state.width && height === _this2.state.height) return;\n        newState.width = width;\n        newState.height = height;\n      }\n\n      var hasCb = typeof _this2.props[handlerName] === 'function';\n      if (hasCb) {\n        // $FlowIgnore isn't refining this correctly to SyntheticEvent\n        if (typeof e.persist === 'function') e.persist();\n        _this2.setState(newState, function () {\n          return _this2.props[handlerName](e, { node: node, size: { width: width, height: height }, handle: axis });\n        });\n      } else {\n        _this2.setState(newState);\n      }\n    };\n  };\n\n  Resizable.prototype.renderResizeHandle = function renderResizeHandle(resizeHandle) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(resizeHandle);\n      }\n      return handle;\n    }\n    return _react2.default.createElement('span', { className: 'react-resizable-handle react-resizable-handle-' + resizeHandle });\n  };\n\n  Resizable.prototype.render = function render() {\n    var _this3 = this;\n\n    // eslint-disable-next-line no-unused-vars\n    var _props = this.props,\n        children = _props.children,\n        draggableOpts = _props.draggableOpts,\n        width = _props.width,\n        height = _props.height,\n        handleSize = _props.handleSize,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        onResize = _props.onResize,\n        onResizeStop = _props.onResizeStop,\n        onResizeStart = _props.onResizeStart,\n        resizeHandles = _props.resizeHandles,\n        p = _objectWithoutProperties(_props, ['children', 'draggableOpts', 'width', 'height', 'handleSize', 'lockAspectRatio', 'axis', 'minConstraints', 'maxConstraints', 'onResize', 'onResizeStop', 'onResizeStart', 'resizeHandles']);\n\n    var className = p.className ? p.className + ' react-resizable' : 'react-resizable';\n\n    // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n    return (0, _cloneElement2.default)(children, _extends({}, p, {\n      className: className,\n      children: [children.props.children, resizeHandles.map(function (h) {\n        return _react2.default.createElement(\n          _reactDraggable.DraggableCore,\n          _extends({}, draggableOpts, {\n            key: 'resizableHandle-' + h,\n            onStop: _this3.resizeHandler('onResizeStop', h),\n            onStart: _this3.resizeHandler('onResizeStart', h),\n            onDrag: _this3.resizeHandler('onResize', h)\n          }),\n          _this3.renderResizeHandle(h)\n        );\n      })]\n    }));\n  };\n\n  return Resizable;\n}(_react2.default.Component);\n\nResizable.propTypes = {\n  //\n  // Required Props\n  //\n\n  // Require that one and only one child be present.\n  children: _propTypes2.default.element.isRequired,\n\n  // Initial w/h\n  width: _propTypes2.default.number.isRequired,\n  height: _propTypes2.default.number.isRequired,\n\n  //\n  // Optional props\n  //\n\n  // Custom resize handle\n  handle: _propTypes2.default.element,\n\n  // If you change this, be sure to update your css\n  handleSize: _propTypes2.default.array,\n\n  // Defines which resize handles should be rendered (default: 'se')\n  // Allows for any combination of:\n  // 's' - South handle (bottom-center)\n  // 'w' - West handle (left-center)\n  // 'e' - East handle (right-center)\n  // 'n' - North handle (top-center)\n  // 'sw' - Southwest handle (bottom-left)\n  // 'nw' - Northwest handle (top-left)\n  // 'se' - Southeast handle (bottom-right)\n  // 'ne' - Northeast handle (top-center)\n  resizeHandles: _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['s', 'w', 'e', 'n', 'sw', 'nw', 'se', 'ne'])),\n\n  // If true, will only allow width/height to move in lockstep\n  lockAspectRatio: _propTypes2.default.bool,\n\n  // Restricts resizing to a particular axis (default: 'both')\n  // 'both' - allows resizing by width or height\n  // 'x' - only allows the width to be changed\n  // 'y' - only allows the height to be changed\n  // 'none' - disables resizing altogether\n  axis: _propTypes2.default.oneOf(['both', 'x', 'y', 'none']),\n\n  // Min/max size\n  minConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  maxConstraints: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\n  // Callbacks\n  onResizeStop: _propTypes2.default.func,\n  onResizeStart: _propTypes2.default.func,\n  onResize: _propTypes2.default.func,\n\n  // These will be passed wholesale to react-draggable's DraggableCore\n  draggableOpts: _propTypes2.default.object\n};\nResizable.defaultProps = {\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  axis: 'both',\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se']\n};\nexports.default = Resizable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/build/Resizable.js\n// module id = 8\n// module chunks = 0","// @flow\n\nimport {cloneLayout, compact, correctBounds} from './utils';\n\nimport type {Layout} from './utils';\nexport type ResponsiveLayout = {lg?: Layout, md?: Layout, sm?: Layout, xs?: Layout, xxs?: Layout};\ntype Breakpoint = string;\ntype Breakpoints = {lg?: number, md?: number, sm?: number, xs?: number, xxs?: number};\n\n/**\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\n *\n * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\n * @param  {Number} width Screen width.\n * @return {String}       Highest breakpoint that is less than width.\n */\nexport function getBreakpointFromWidth(breakpoints: Breakpoints, width: number): Breakpoint {\n  const sorted = sortBreakpoints(breakpoints);\n  let matching = sorted[0];\n  for (let i = 1, len = sorted.length; i < len; i++) {\n    const breakpointName = sorted[i];\n    if (width > breakpoints[breakpointName]) matching = breakpointName;\n  }\n  return matching;\n}\n\n\n/**\n * Given a breakpoint, get the # of cols set for it.\n * @param  {String} breakpoint Breakpoint name.\n * @param  {Object} cols       Map of breakpoints to cols.\n * @return {Number}            Number of cols.\n */\nexport function getColsFromBreakpoint(breakpoint: Breakpoint, cols: Breakpoints): number {\n  if (!cols[breakpoint]) {\n    throw new Error(\"ResponsiveReactGridLayout: `cols` entry for breakpoint \" + breakpoint + \" is missing!\");\n  }\n  return cols[breakpoint];\n}\n\n/**\n * Given existing layouts and a new breakpoint, find or generate a new layout.\n *\n * This finds the layout above the new one and generates from it, if it exists.\n *\n * @param  {Object} layouts     Existing layouts.\n * @param  {Array} breakpoints All breakpoints.\n * @param  {String} breakpoint New breakpoint.\n * @param  {String} breakpoint Last breakpoint (for fallback).\n * @param  {Number} cols       Column count at new breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}             New layout.\n */\nexport function findOrGenerateResponsiveLayout(layouts: ResponsiveLayout, breakpoints: Breakpoints,\n                                               breakpoint: Breakpoint, lastBreakpoint: Breakpoint,\n                                               cols: number, verticalCompact: boolean): Layout {\n  // If it already exists, just return it.\n  if (layouts[breakpoint]) return cloneLayout(layouts[breakpoint]);\n  // Find or generate the next layout\n  let layout = layouts[lastBreakpoint];\n  const breakpointsSorted = sortBreakpoints(breakpoints);\n  const breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\n  for (let i = 0, len = breakpointsAbove.length; i < len; i++) {\n    const b = breakpointsAbove[i];\n    if (layouts[b]) {\n      layout = layouts[b];\n      break;\n    }\n  }\n  layout = cloneLayout(layout || []); // clone layout so we don't modify existing items\n  return compact(correctBounds(layout, {cols: cols}), verticalCompact);\n}\n\n/**\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\n * e.g. ['xxs', 'xs', 'sm', ...]\n *\n * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\n * @return {Array}              Sorted breakpoints.\n */\nexport function sortBreakpoints(breakpoints: Breakpoints): Array<Breakpoint> {\n  const keys: Array<string> = Object.keys(breakpoints);\n  return keys.sort(function(a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/responsiveUtils.js","module.exports = require('./lib/ReactGridLayout').default;\nmodule.exports.utils = require('./lib/utils');\nmodule.exports.Responsive = require('./lib/ResponsiveReactGridLayout').default;\nmodule.exports.Responsive.utils = require('./lib/responsiveUtils');\nmodule.exports.WidthProvider = require('./lib/components/WidthProvider').default;\n\n\n\n// WEBPACK FOOTER //\n// ./index-dev.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 12\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 13\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 14\n// module chunks = 0","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {DraggableCore} from 'react-draggable';\nimport {Resizable} from 'react-resizable';\nimport {perc, setTopLeft, setTransform} from './utils';\nimport classNames from 'classnames';\nimport type {Element as ReactElement, Node as ReactNode} from 'react';\n\nimport type {ReactDraggableCallbackData, GridDragEvent, GridResizeEvent, Position} from './utils';\n\ntype PartialPosition = {top: number, left: number};\ntype GridItemCallback<Data: GridDragEvent | GridResizeEvent> = (i: string, w: number, h: number, Data) => void;\n\ntype State = {\n  resizing: ?{width: number, height: number},\n  dragging: ?{top: number, left: number},\n  className: string\n};\n\ntype Props = {\n  children: ReactElement<any>,\n  cols: number,\n  containerWidth: number,\n  margin: [number, number],\n  containerPadding: [number, number],\n  rowHeight: number,\n  maxRows: number,\n  isDraggable: boolean,\n  isResizable: boolean,\n  static?: boolean,\n  useCSSTransforms?: boolean,\n  usePercentages?: boolean,\n\n  className: string,\n  style?: Object,\n  // Draggability\n  cancel: string,\n  handle: string,\n\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n\n  minW: number,\n  maxW: number,\n  minH: number,\n  maxH: number,\n  i: string,\n\n  onDrag?: GridItemCallback<GridDragEvent>,\n  onDragStart?: GridItemCallback<GridDragEvent>,\n  onDragStop?: GridItemCallback<GridDragEvent>,\n  onResize?: GridItemCallback<GridResizeEvent>,\n  onResizeStart?: GridItemCallback<GridResizeEvent>,\n  onResizeStop?: GridItemCallback<GridResizeEvent>,\n};\n\n/**\n * An individual item within a ReactGridLayout.\n */\nexport default class GridItem extends React.Component<Props, State> {\n\n  static propTypes = {\n    // Children must be only a single element\n    children: PropTypes.element,\n\n    // General grid attributes\n    cols: PropTypes.number.isRequired,\n    containerWidth: PropTypes.number.isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    margin: PropTypes.array.isRequired,\n    maxRows: PropTypes.number.isRequired,\n    containerPadding: PropTypes.array.isRequired,\n\n    // These are all in grid units\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    w: PropTypes.number.isRequired,\n    h: PropTypes.number.isRequired,\n\n    // All optional\n    minW: function (props, propName) {\n      const value = props[propName];\n      if (typeof value !== 'number') return new Error('minWidth not Number');\n      if (value > props.w || value > props.maxW) return new Error('minWidth larger than item width/maxWidth');\n    },\n\n    maxW: function (props, propName) {\n      const value = props[propName];\n      if (typeof value !== 'number') return new Error('maxWidth not Number');\n      if (value < props.w || value < props.minW) return new Error('maxWidth smaller than item width/minWidth');\n    },\n\n    minH: function (props, propName) {\n      const value = props[propName];\n      if (typeof value !== 'number') return new Error('minHeight not Number');\n      if (value > props.h || value > props.maxH) return new Error('minHeight larger than item height/maxHeight');\n    },\n\n    maxH: function (props, propName) {\n      const value = props[propName];\n      if (typeof value !== 'number') return new Error('maxHeight not Number');\n      if (value < props.h || value < props.minH) return new Error('maxHeight smaller than item height/minHeight');\n    },\n\n    // ID is nice to have for callbacks\n    i: PropTypes.string.isRequired,\n\n    // Functions\n    onDragStop: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDrag: PropTypes.func,\n    onResizeStop: PropTypes.func,\n    onResizeStart: PropTypes.func,\n    onResize: PropTypes.func,\n\n    // Flags\n    isDraggable: PropTypes.bool.isRequired,\n    isResizable: PropTypes.bool.isRequired,\n    static: PropTypes.bool,\n    overlap: PropTypes.bool,\n\n    // Use CSS transforms instead of top/left\n    useCSSTransforms: PropTypes.bool.isRequired,\n\n    // Others\n    className: PropTypes.string,\n    // Selector for draggable handle\n    handle: PropTypes.string,\n    // Selector for draggable cancel (see react-draggable)\n    cancel: PropTypes.string,\n\n    // Fork\n    axis: PropTypes.oneOf(['both', 'x', 'y', 'none']),\n    bounce: PropTypes.oneOf(['both', 'x', 'y', 'none'])\n  };\n\n  static defaultProps = {\n    className: '',\n    cancel: '',\n    handle: '',\n    minH: 1,\n    minW: 1,\n    maxH: Infinity,\n    maxW: Infinity,\n    axis: 'both',\n  };\n\n  state: State = {\n    resizing: null,\n    dragging: null,\n    className: ''\n  };\n\n  // Helper for generating column width\n  calcColWidth(): number {\n    const {margin, containerPadding, containerWidth, cols} = this.props;\n    return (containerWidth - (margin[0] * (cols - 1)) - (containerPadding[0] * 2)) / cols;\n  }\n\n  /**\n   * Return position on the page given an x, y, w, h.\n   * left, top, width, height are all in pixels.\n   * @param  {Number}  x             X coordinate in grid units.\n   * @param  {Number}  y             Y coordinate in grid units.\n   * @param  {Number}  w             W coordinate in grid units.\n   * @param  {Number}  h             H coordinate in grid units.\n   * @return {Object}                Object containing coords.\n   */\n  calcPosition(x: number, y: number, w: number, h: number, state: ?Object): Position {\n    const {margin, containerPadding, rowHeight} = this.props;\n    const colWidth = this.calcColWidth();\n\n    const out = {\n      left: Math.round((colWidth + margin[0]) * x + containerPadding[0]),\n      top: Math.round((rowHeight + margin[1]) * y + containerPadding[1]),\n      // 0 * Infinity === NaN, which causes problems with resize constraints;\n      // Fix this if it occurs.\n      // Note we do it here rather than later because Math.round(Infinity) causes deopt\n      width: w === Infinity ? w : Math.round(colWidth * w + Math.max(0, w - 1) * margin[0]),\n      height: h === Infinity ? h : Math.round(rowHeight * h + Math.max(0, h - 1) * margin[1])\n    };\n\n    if (state && state.resizing) {\n      out.width = Math.round(state.resizing.width);\n      out.height = Math.round(state.resizing.height);\n    }\n\n    if (state && state.dragging) {\n      out.top = Math.round(state.dragging.top);\n      out.left = Math.round(state.dragging.left);\n    }\n\n    return out;\n  }\n\n  /**\n   * Translate x and y coordinates from pixels to grid units.\n   * @param  {Number} top  Top position (relative to parent) in pixels.\n   * @param  {Number} left Left position (relative to parent) in pixels.\n   * @return {Object} x and y in grid units.\n   */\n  calcXY(top: number, left: number): {x: number, y: number} {\n    const {margin, cols, rowHeight, w, h, maxRows, bounce} = this.props;\n    const colWidth = this.calcColWidth();\n\n    // left = colWidth * x + margin * (x + 1)\n    // l = cx + m(x+1)\n    // l = cx + mx + m\n    // l - m = cx + mx\n    // l - m = x(c + m)\n    // (l - m) / (c + m) = x\n    // x = (left - margin) / (coldWidth + margin)\n    let x = Math.round((left - margin[0]) / (colWidth + margin[0]));\n    let y = Math.round((top - margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    if (bounce === 'both' || bounce === 'x') {\n      x = Math.max(Math.min(x, cols - w), 0);\n    }\n    if (bounce === 'both' || bounce === 'y') {\n      y = Math.max(Math.min(y, maxRows - h), 0);\n    }\n\n    return {x, y};\n  }\n\n  /**\n   * Given a height and width in pixel values, calculate grid units.\n   * @param  {Number} height Height in pixels.\n   * @param  {Number} width  Width in pixels.\n   * @return {Object} w, h as grid units.\n   */\n  calcWH({height, width}: {height: number, width: number}): {w: number, h: number} {\n    const {margin, maxRows, cols, rowHeight, x, y} = this.props;\n    const colWidth = this.calcColWidth();\n\n    // width = colWidth * w - (margin * (w - 1))\n    // ...\n    // w = (width + margin) / (colWidth + margin)\n    let w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n    let h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\n\n    // Capping\n    w = Math.max(Math.min(w, cols - x), 0);\n    h = Math.max(Math.min(h, maxRows - y), 0);\n    return {w, h};\n  }\n\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n  createStyle(pos: Position): {[key: string]: ?string} {\n    const {usePercentages, containerWidth, useCSSTransforms} = this.props;\n\n    let style;\n    // CSS Transforms support (default)\n    if (useCSSTransforms) {\n      style = setTransform(pos);\n    }\n    // top,left (slow)\n    else {\n      style = setTopLeft(pos);\n\n      // This is used for server rendering.\n      if (usePercentages) {\n        style.left = perc(pos.left / containerWidth);\n        style.width = perc(pos.width / containerWidth);\n      }\n    }\n\n    return style;\n  }\n\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n  mixinDraggable(child: ReactElement<any>): ReactElement<any> {\n    return (\n      <DraggableCore\n        onStart={this.onDragHandler('onDragStart')}\n        onDrag={this.onDragHandler('onDrag')}\n        onStop={this.onDragHandler('onDragStop')}\n        handle={this.props.handle}\n        cancel={\".react-resizable-handle\" + (this.props.cancel ? \",\" + this.props.cancel : \"\")}>\n        {child}\n      </DraggableCore>\n    );\n  }\n\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n  mixinResizable(child: ReactElement<any>, position: Position): ReactElement<any> {\n    const {cols, x, minW, minH, maxW, maxH} = this.props;\n\n    // This is the max possible width - doesn't go to infinity because of the width of the window\n    const maxWidth = this.calcPosition(0, 0, cols - x, 0).width;\n\n    // Calculate min/max constraints using our min & maxes\n    const mins = this.calcPosition(0, 0, minW, minH);\n    const maxes = this.calcPosition(0, 0, maxW, maxH);\n    const minConstraints = [mins.width, mins.height];\n    const maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n    return (\n      <Resizable\n        width={position.width}\n        height={position.height}\n        minConstraints={minConstraints}\n        maxConstraints={maxConstraints}\n        onResizeStop={this.onResizeHandler('onResizeStop')}\n        onResizeStart={this.onResizeHandler('onResizeStart')}\n        onResize={this.onResizeHandler('onResize')}>\n        {child}\n      </Resizable>\n    );\n  }\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  onDragHandler(handlerName:string) {\n    return (e:Event, {node, deltaX, deltaY}: ReactDraggableCallbackData) => {\n      const handler = this.props[handlerName];\n      if (!handler) return;\n\n      const newPosition: PartialPosition = {top: 0, left: 0};\n\n      // Get new XY\n      switch (handlerName) {\n        case 'onDragStart': {\n          // ToDo this wont work on nested parents\n          const parentRect = node.offsetParent.getBoundingClientRect();\n          const clientRect = node.getBoundingClientRect();\n          newPosition.left = clientRect.left - parentRect.left + node.offsetParent.scrollLeft;\n          newPosition.top = clientRect.top - parentRect.top + node.offsetParent.scrollTop;\n          this.setState({dragging: newPosition});\n          break;\n        }\n        case 'onDrag':\n          const isDraggableX = this.props.axis === 'both' || this.props.axis === 'x';\n          const isDraggableY = this.props.axis === 'both' || this.props.axis === 'y';\n          if (!this.state.dragging) throw new Error('onDrag called before onDragStart.');\n          newPosition.left = isDraggableX ? this.state.dragging.left + deltaX : this.state.dragging.left;\n          newPosition.top = isDraggableY ? this.state.dragging.top + deltaY : this.state.dragging.top;\n          this.setState({dragging: newPosition});\n          break;\n        case 'onDragStop':\n          if (!this.state.dragging) throw new Error('onDragEnd called before onDragStart.');\n          newPosition.left = this.state.dragging.left;\n          newPosition.top = this.state.dragging.top;\n          this.setState({dragging: null});\n          break;\n        default:\n          throw new Error('onDragHandler called with unrecognized handlerName: ' + handlerName);\n      }\n\n      const {x, y} = this.calcXY(newPosition.top, newPosition.left);\n\n      handler.call(this, this.props.i, x, y, {e, node, newPosition});\n    };\n  }\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  onResizeHandler(handlerName: string) {\n    return (e:Event, {node, size}: {node: HTMLElement, size: Position}) => {\n      const handler = this.props[handlerName];\n      if (!handler) return;\n      const {cols, x, i, maxW, minW, maxH, minH} = this.props;\n\n      // Get new XY\n      let {w, h} = this.calcWH(size);\n\n      // Cap w at numCols\n      w = Math.min(w, cols - x);\n      // Ensure w is at least 1\n      w = Math.max(w, 1);\n\n      // Min/max capping\n      w = Math.max(Math.min(w, maxW), minW);\n      h = Math.max(Math.min(h, maxH), minH);\n\n      this.setState({resizing: handlerName === 'onResizeStop' ? null : size});\n\n      handler.call(this, i, w, h, {e, node, size});\n    };\n  }\n\n  render(): ReactNode {\n    const {x, y, w, h, isDraggable, isResizable, useCSSTransforms} = this.props;\n\n    const pos = this.calcPosition(x, y, w, h, this.state);\n    const child = React.Children.only(this.props.children);\n\n    // Create the child element. We clone the existing element but modify its className and style.\n    let newChild = React.cloneElement(child, {\n      className: classNames('react-grid-item', child.props.className, this.props.className, {\n        static: this.props.static,\n        resizing: Boolean(this.state.resizing),\n        'react-draggable': isDraggable,\n        'react-draggable-dragging': Boolean(this.state.dragging),\n        cssTransforms: useCSSTransforms\n      }),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: {...this.props.style, ...child.props.style, ...this.createStyle(pos)}\n    });\n\n    // Resizable support. This is usually on but the user can toggle it off.\n    if (isResizable) newChild = this.mixinResizable(newChild, pos);\n\n    // Draggable support. This is always on, except for with placeholders.\n    if (isDraggable) newChild = this.mixinDraggable(newChild);\n\n    return newChild;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/GridItem.jsx","'use strict';\nmodule.exports = function() {\n  throw new Error(\"Don't instantiate Resizable directly! Use require('react-resizable').Resizable\");\n};\n\nmodule.exports.Resizable = require('./build/Resizable').default;\nmodule.exports.ResizableBox = require('./build/ResizableBox').default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/index.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// React.addons.cloneWithProps look-alike that merges style & className.\nmodule.exports = function cloneElement(element, props) {\n  if (props.style && element.props.style) {\n    props.style = _extends({}, element.props.style, props.style);\n  }\n  if (props.className && element.props.className) {\n    props.className = element.props.className + ' ' + props.className;\n  }\n  return _react2.default.cloneElement(element, props);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/build/cloneElement.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Resizable = require('./Resizable');\n\nvar _Resizable2 = _interopRequireDefault(_Resizable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// An example use of Resizable.\nvar ResizableBox = function (_React$Component) {\n  _inherits(ResizableBox, _React$Component);\n\n  function ResizableBox() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ResizableBox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      width: _this.props.width,\n      height: _this.props.height\n    }, _this.onResize = function (e, data) {\n      var size = data.size;\n      var width = size.width,\n          height = size.height;\n\n\n      if (_this.props.onResize) {\n        e.persist && e.persist();\n        _this.setState(size, function () {\n          return _this.props.onResize && _this.props.onResize(e, data);\n        });\n      } else {\n        _this.setState(size);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ResizableBox.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.width !== this.props.width || nextProps.height !== this.props.height) {\n      this.setState({\n        width: nextProps.width,\n        height: nextProps.height\n      });\n    }\n  };\n\n  ResizableBox.prototype.render = function render() {\n    // Basic wrapper around a Resizable instance.\n    // If you use Resizable directly, you are responsible for updating the child component\n    // with a new width and height.\n    var _props = this.props,\n        handle = _props.handle,\n        handleSize = _props.handleSize,\n        onResize = _props.onResize,\n        onResizeStart = _props.onResizeStart,\n        onResizeStop = _props.onResizeStop,\n        draggableOpts = _props.draggableOpts,\n        minConstraints = _props.minConstraints,\n        maxConstraints = _props.maxConstraints,\n        lockAspectRatio = _props.lockAspectRatio,\n        axis = _props.axis,\n        width = _props.width,\n        height = _props.height,\n        resizeHandles = _props.resizeHandles,\n        props = _objectWithoutProperties(_props, ['handle', 'handleSize', 'onResize', 'onResizeStart', 'onResizeStop', 'draggableOpts', 'minConstraints', 'maxConstraints', 'lockAspectRatio', 'axis', 'width', 'height', 'resizeHandles']);\n\n    return _react2.default.createElement(\n      _Resizable2.default,\n      {\n        handle: handle,\n        handleSize: handleSize,\n        width: this.state.width,\n        height: this.state.height,\n        onResizeStart: onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: onResizeStop,\n        draggableOpts: draggableOpts,\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        lockAspectRatio: lockAspectRatio,\n        axis: axis,\n        resizeHandles: resizeHandles\n      },\n      _react2.default.createElement('div', _extends({ style: { width: this.state.width + 'px', height: this.state.height + 'px' } }, props))\n    );\n  };\n\n  return ResizableBox;\n}(_react2.default.Component);\n\nResizableBox.propTypes = {\n  height: _propTypes2.default.number,\n  width: _propTypes2.default.number\n};\nResizableBox.defaultProps = {\n  handleSize: [20, 20]\n};\nexports.default = ResizableBox;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-resizable/build/ResizableBox.js\n// module id = 18\n// module chunks = 0","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\n\nimport {cloneLayout, synchronizeLayoutWithChildren, validateLayout} from './utils';\nimport {getBreakpointFromWidth, getColsFromBreakpoint, findOrGenerateResponsiveLayout} from './responsiveUtils';\nimport ReactGridLayout from './ReactGridLayout';\nimport type {Props as RGLProps} from './ReactGridLayout';\nimport type {Layout} from './utils';\n\nconst noop = function(){};\nconst type = (obj) => Object.prototype.toString.call(obj);\n\ntype State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number\n};\n\ntype Props<Breakpoint: string = string> = {\n  ...$Exact<RGLProps>,\n\n  // Responsive config\n  breakpoint: Breakpoint,\n  breakpoints: {[key: Breakpoint]: number},\n  cols: {[key: Breakpoint]: number},\n  layouts: {[key: Breakpoint]: Layout},\n  width: number,\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: (Layout, {[key: Breakpoint]: Layout}) => void,\n  onWidthChange:\n    (containerWidth: number, margin: [number, number], cols: number, containerPadding: [number, number]) => void\n};\n\nexport default class ResponsiveReactGridLayout extends React.Component<Props<>, State> {\n\n  // This should only include propTypes needed in this code; RGL itself\n  // will do validation of the rest props passed to it.\n  static propTypes = {\n\n    //\n    // Basic props\n    //\n\n    // Optional, but if you are managing width yourself you may want to set the breakpoint\n    // yourself as well.\n    breakpoint: PropTypes.string,\n\n    // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n    breakpoints: PropTypes.object,\n\n    // # of cols. This is a breakpoint -> cols map\n    cols: PropTypes.object,\n\n    // layouts is an object mapping breakpoints to layouts.\n    // e.g. {lg: Layout, md: Layout, ...}\n    layouts(props, propName) {\n      if (type(props[propName]) !== '[object Object]') {\n        throw new Error('Layout property must be an object. Received: ' + type(props[propName]));\n      }\n      Object.keys(props[propName]).forEach((key) => {\n        if (!(key in props.breakpoints)) {\n          throw new Error('Each key in layouts must align with a key in breakpoints.');\n        }\n        validateLayout(props.layouts[key], 'layouts.' + key);\n      });\n    },\n\n    // The width of this component.\n    // Required in this propTypes stanza because generateInitialState() will fail without it.\n    width: PropTypes.number.isRequired,\n\n    //\n    // Callbacks\n    //\n\n    // Calls back with breakpoint and new # cols\n    onBreakpointChange: PropTypes.func,\n\n    // Callback so you can save the layout.\n    // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n    onLayoutChange: PropTypes.func,\n\n    // Calls back with (containerWidth, margin, cols, containerPadding)\n    onWidthChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    breakpoints: {lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0},\n    cols: {lg: 12, md: 10, sm: 6, xs: 4, xxs: 2},\n    layouts: {},\n    onBreakpointChange: noop,\n    onLayoutChange: noop,\n    onWidthChange: noop,\n  };\n\n  state = this.generateInitialState();\n\n  generateInitialState(): State {\n    const {width, breakpoints, layouts, verticalCompact, cols} = this.props;\n    const breakpoint = getBreakpointFromWidth(breakpoints, width);\n    const colNo = getColsFromBreakpoint(breakpoint, cols);\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = findOrGenerateResponsiveLayout(layouts, breakpoints, breakpoint,\n                                                         breakpoint, colNo, verticalCompact);\n\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props<*>) {\n\n    // Allow parent to set width or breakpoint directly.\n    if (\n         nextProps.width != this.props.width\n      || nextProps.breakpoint !== this.props.breakpoint\n      || !isEqual(nextProps.breakpoints, this.props.breakpoints)\n      || !isEqual(nextProps.cols, this.props.cols)\n    ) {\n      this.onWidthChange(nextProps);\n    }\n\n    // Allow parent to set layouts directly.\n    else if (!isEqual(nextProps.layouts, this.props.layouts)) {\n      const {breakpoint, cols} = this.state;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = findOrGenerateResponsiveLayout(\n        nextProps.layouts, nextProps.breakpoints,\n        breakpoint, breakpoint, cols, nextProps.verticalCompact\n      );\n      this.setState({layout: newLayout});\n    }\n  }\n\n  // wrap layouts so we do not need to pass layouts to child\n  onLayoutChange = (layout: Layout) => {\n    this.props.onLayoutChange(layout, {...this.props.layouts, [this.state.breakpoint]: layout});\n  };\n\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(nextProps: Props<*>) {\n    const {breakpoints, cols, layouts, verticalCompact} = nextProps;\n    const newBreakpoint = nextProps.breakpoint || getBreakpointFromWidth(nextProps.breakpoints, nextProps.width);\n\n    const lastBreakpoint = this.state.breakpoint;\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || this.props.breakpoints !== breakpoints || this.props.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in layouts)) layouts[lastBreakpoint] = cloneLayout(this.state.layout);\n\n      // Find or generate a new layout.\n      const newCols: number = getColsFromBreakpoint(newBreakpoint, cols);\n      let layout = findOrGenerateResponsiveLayout(layouts, breakpoints, newBreakpoint,\n                                                  lastBreakpoint, newCols, verticalCompact);\n\n      // This adds missing items.\n      layout = synchronizeLayoutWithChildren(layout, nextProps.children, newCols, verticalCompact);\n\n      // Store the new layout.\n      layouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onLayoutChange(layout, layouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onWidthChange(nextProps.width, nextProps.margin, newCols, nextProps.containerPadding);\n\n      this.setState({breakpoint: newBreakpoint, layout: layout, cols: newCols});\n    }\n  }\n\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const {breakpoint, breakpoints, cols, layouts, onBreakpointChange, onLayoutChange, onWidthChange,\n      ...other} = this.props;\n\n    return (\n      <ReactGridLayout\n        {...other}\n        onLayoutChange={this.onLayoutChange}\n        layout={this.state.layout}\n        cols={this.state.cols}\n      />\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ResponsiveReactGridLayout.jsx","// @flow\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport type {ComponentType as ReactComponentType} from 'react';\n\ntype Props = {\n  className?: string,\n  measureBeforeMount: boolean,\n  style?: Object,\n};\n\ntype State = {\n  width: number\n};\n\n/*\n * A simple HOC that provides facility for listening to container resizes.\n */\ntype ProviderT = (ComposedComponent: ReactComponentType<any>) => ReactComponentType<any>;\nconst WidthProvider: ProviderT = (ComposedComponent) => class extends React.Component<Props, State> {\n\n  static defaultProps = {\n    measureBeforeMount: false\n  };\n\n  static propTypes = {\n    // If true, will not render children until mounted. Useful for getting the exact width before\n    // rendering, to prevent any unsightly resizing.\n    measureBeforeMount: PropTypes.bool\n  };\n\n  state: State = {\n    width: 1280\n  };\n\n  mounted: boolean = false;\n\n  componentDidMount() {\n    this.mounted = true;\n\n    window.addEventListener('resize', this.onWindowResize);\n    // Call to properly set the breakpoint and resize the elements.\n    // Note that if you're doing a full-width element, this can get a little wonky if a scrollbar\n    // appears because of the grid. In that case, fire your own resize event, or set `overflow: scroll` on your body.\n    this.onWindowResize();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener('resize', this.onWindowResize);\n  }\n\n  onWindowResize = (_event: ?Event) => {\n    if (!this.mounted) return;\n    const node = ReactDOM.findDOMNode(this); // Flow casts this to Text | Element\n    if (node instanceof HTMLElement) this.setState({width: node.offsetWidth});\n  }\n\n  render() {\n    if (this.props.measureBeforeMount && !this.mounted) {\n      return <div className={this.props.className} style={this.props.style} />;\n    }\n\n    return <ComposedComponent {...this.props} {...this.state} />;\n  }\n};\n\nexport default WidthProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/components/WidthProvider.jsx"],"sourceRoot":""}